##################
add_debian_opt_repo() {
    notes_of_debian_opt_repo
    printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®Êú™Ê∑ªÂä†debian_optËΩØ‰ª∂Ê∫êÔºåÊòØÂê¶Ê∑ªÂä†Ôºü"
    do_you_want_to_continue
    add_debian_opt_gpg_key
}
##############
notes_of_debian_opt_repo() {
    printf "%s\n" "debian_opt_repoÂàóË°®ÁöÑÊâÄÊúâËΩØ‰ª∂ÂùáÊù•Ëá™‰∫éÂºÄÊ∫êÈ°πÁõÆ"
    printf "%s\n" "ÊÑüË∞¢https://github.com/coslyk/debianopt-repo ‰ªìÂ∫ìÁöÑÁª¥Êä§ËÄÖcoslykÔºå‰ª•ÂèäÂêÑ‰∏™È°πÁõÆÁöÑÂéüÂºÄÂèëËÄÖ„ÄÇ"
}
#############
switch_debian_opt_repo_sources() {
    non_debian_function
    # if grep '^deb.*ustc' ${OPT_REPO_LIST}; then
    #     OPT_REPO_NAME='USTC'
    # else
    #     OPT_REPO_NAME='bintray'
    # fi
    # if (whiptail --title "ÊÇ®ÊÉ≥Ë¶ÅÂØπËøô‰∏™Â∞èÂèØÁà±ÂÅö‰ªÄ‰πàÂë¢" --yes-button "USTC" --no-button "bintray" --yesno "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÁöÑËΩØ‰ª∂Ê∫ê‰∏∫${OPT_REPO_NAME}\nÊÇ®ÊÉ≥Ë¶ÅÂàáÊç¢‰∏∫Âì™‰∏™ËΩØ‰ª∂Ê∫ê?‚ô™(^‚àá^*) " 0 0); then
    #     printf "%s\n%s\n" "deb ${OPT_URL_01} buster main" "#deb ${OPT_URL_02} buster main" >${OPT_REPO_LIST}
    # else
    #     printf "%s\n%s\n" "#deb ${OPT_URL_01} buster main" "deb ${OPT_URL_02} buster main" >${OPT_REPO_LIST}
    # fi
    # apt update
    check_editor
    ${EDITOR} "${OPT_REPO_LIST}"
}
#######################
explore_debian_opt_repo() {
    case "${LINUX_DISTRO}" in
    debian)
        install_gpg
        [[ -e "${OPT_REPO_LIST}" ]] || add_debian_opt_repo
        ;;
    esac
    debian_opt_menu
}
#################
debian_opt_menu() {
    RETURN_TO_WHERE='debian_opt_menu'
    RETURN_TO_MENU='debian_opt_menu'
    DEPENDENCY_02=""
    cd ${APPS_LNK_DIR}
    #16 50 7
    INSTALL_APP=$(whiptail --title "DEBIAN OPT REPO" --menu \
        "Only supports DEBIAN-based distros" 0 0 0 \
        "1" "üé∂ music:vocal,flacon" \
        "2" "üìù notesÁ¨îËÆ∞:markdownÁºñËæëÂô®" \
        "3" "üì∫ videosËßÜÈ¢ë:Â§öÂ™í‰ΩìÈü≥ËßÜÈ¢ëÊ†ºÂºèËΩ¨Êç¢" \
        "4" "üñºÔ∏è picturesÂõæÂÉè:bingÂ£ÅÁ∫∏" \
        "5" "üìñ reader:ÊÇ¶‰∫´ÁîüÊ¥ª,ÂìÅÂë≥ÈòÖËØª" \
        "6" "üéÆ gamesÊ∏∏Êàè:MinecraftÂêØÂä®Âô®" \
        "7" "üëæ developmentÁ®ãÂ∫èÂºÄÂèë:GUIËÆæËÆ°" \
        "8" "üí† toolsÂ∑•ÂÖ∑:winetricks-zh" \
        "9" "üîØ internet‰∫íËÅîÁΩë:motrix,freechat" \
        "10" "edit source list:ÁºñËæëËΩØ‰ª∂Ê∫ê" \
        "11" "remove(ÁßªÈô§Êú¨‰ªìÂ∫ì)" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") software_center ;;
    1) debian_opt_music_app ;;
    2) debian_opt_note_app ;;
    3) debian_opt_video_app ;;
    4) debian_opt_picture_app ;;
    5) debian_opt_reader_app ;;
    6) debian_opt_game_app ;;
    7) debian_opt_development_app ;;
    8) debian_opt_tools_app ;;
    9) debian_opt_internet_app ;;
    10) switch_debian_opt_repo_sources ;;
    11) remove_debian_opt_repo ;;
    esac
    ##########################
    press_enter_to_return
    debian_opt_menu
}
################
debian_opt_install_or_remove_01() {
    RETURN_TO_WHERE='debian_opt_install_or_remove_01'
    NOTICE_OF_REPAIR=false
    OPT_APP_VERSION_TXT="${TMOE_LINUX_DIR}/${DEPENDENCY_01}_version.txt"
    INSTALL_APP=$(whiptail --title "${DEPENDENCY_01} manager" --menu \
        "ÊÇ®Ë¶ÅÂØπ${DEPENDENCY_01}Â∞èÂèØÁà±ÂÅö‰ªÄ‰πà?\nWhat do you want to do with the software?" 0 0 0 \
        "1" "install ÂÆâË£Ö" \
        "2" "upgrade Êõ¥Êñ∞" \
        "3" "remove Âç∏ËΩΩ" \
        "0" "üåö Back ËøîÂõû" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") ${RETURN_TO_MENU} ;;
    1) install_opt_app_01 ;;
    2) upgrade_opt_app_01 ;;
    3) remove_opt_app_01 ;;
    esac
    ##########################
    press_enter_to_return
    ${RETURN_TO_MENU}
}
################
check_debian_opt_app_version() {
    DEBIAN_OPT_REPO_POOL_URL="${OPT_URL_01}/pool/main/"
    APP_NAME_PREFIX="$(printf '%s\n' "${DEPENDENCY_01}" | cut -c 1)"
    DEBIAN_OPT_APP_PATH_URL="${DEBIAN_OPT_REPO_POOL_URL}${APP_NAME_PREFIX}/${DEPENDENCY_01}"
    THE_LATEST_DEB_FILE=$(curl -Lv "${DEBIAN_OPT_APP_PATH_URL}" | grep '\.deb' | grep -v '.asc' | grep "${ARCH_TYPE}" | tail -n 1 | cut -d '"' -f 4 | cut -d ':' -f 2)
}
###############
download_debian_opt_app() {
    printf "%s\n" "${THE_LATEST_DEB_FILE}" >${OPT_APP_VERSION_TXT}
    DEBIAN_OPT_APP_URL="${DEBIAN_OPT_APP_PATH_URL}/${THE_LATEST_DEB_FILE}"
    DOWNLOAD_PATH='/tmp/.DEB_OPT_TEMP_FOLDER'
    ELECTRON_FILE_URL="${DEBIAN_OPT_APP_URL}"
    if [ -e "${DOWNLOAD_PATH}" ]; then
        rm -rvf ${DOWNLOAD_PATH}
    fi
    aria2c_download_file_no_confirm
    extract_deb_file_01
    extract_deb_file_02
}
##############
remove_opt_app_01() {
    case "${LINUX_DISTRO}" in
    debian)
        printf "%s\n" "${RED}${TMOE_REMOVAL_COMMAND}${RESET} ${BLUE}${DEPENDENCY_01}${RESET}"
        do_you_want_to_continue
        ${TMOE_REMOVAL_COMMAND} ${DEPENDENCY_01}
        ;;
    *)
        DEBIAN_OPT_APP_DIR="/opt/${DEPENDENCY_01}"
        printf "%s\n" "${RED}rm -rv${RESET} ${BLUE}${DEBIAN_OPT_APP_DIR} ${OPT_APP_VERSION_TXT} ${APPS_LNK_DIR}/${DEPENDENCY_01}.desktop${RESET}"
        do_you_want_to_continue
        rm -rvf ${DEBIAN_OPT_APP_DIR} ${OPT_APP_VERSION_TXT} ${APPS_LNK_DIR}/${DEPENDENCY_01}.desktop
        ;;
    esac
}
################
install_opt_app_01() {
    case "${LINUX_DISTRO}" in
    debian)
        #check_electron
        beta_features_quick_install
        ;;
    *)
        beta_features_quick_install
        non_debian_function
        ;;
    esac
}
################
display_debian_opt_app_version() {
    printf "%s\n" "Ê≠£Âú®Ê£ÄÊµãÁâàÊú¨‰ø°ÊÅØ..."
    if [ -e "${OPT_APP_VERSION_TXT}" ]; then
        LOCAL_OPT_APP_VERSION=$(head -n 1 ${OPT_APP_VERSION_TXT})
    else
        LOCAL_OPT_APP_VERSION="ÊÇ®Â∞öÊú™ÂÆâË£Ö${DEPENDENCY_01}"
    fi
    cat <<-ENDofTable
		‚ïî‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
		‚ïë   ‚ïë                   ‚ïë                    
		‚ïë   ‚ïë    ‚ú®ÊúÄÊñ∞ÁâàÊú¨     ‚ïë   Êú¨Âú∞ÁâàÊú¨ üé™
		‚ïë   ‚ïë  Latest version   ‚ïë  Local version     
		‚ïë---‚ïë-------------------‚ïë--------------------
		‚ïë 1 ‚ïë                     ${LOCAL_OPT_APP_VERSION} 
		‚ïë   ‚ïë${THE_LATEST_DEB_FILE} 

	ENDofTable
    printf "%s\n" "Do you want to upgrade it?"
    do_you_want_to_continue
}
#################
upgrade_opt_app_01() {
    if [ -e "/usr/share/icons/${DEPENDENCY_01}.png" ]; then
        if [ $(command -v catimg) ]; then
            catimg /usr/share/icons/${DEPENDENCY_01}.png
        else
            random_neko
        fi
    else
        random_neko
    fi

    case "${LINUX_DISTRO}" in
    debian)
        apt update
        apt install -y ${DEPENDENCY_01}
        ;;
    *) non_debian_function ;;
    esac
}
###############
debian_opt_game_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_game_app'
    RETURN_TO_MENU='debian_opt_game_app'
    DEBIAN_INSTALLATION_MENU='00'
    INSTALL_APP=$(whiptail --title "GAMES" --menu \
        "Which software do you want to install?" 0 0 0 \
        "1" "hmcl:Ë∑®Âπ≥Âè∞‰∏îÂπøÂèóÊ¨¢ËøéÁöÑMinecraft(ÊàëÁöÑ‰∏ñÁïå)ÂêØÂä®Âô®" \
        "2" "minetest(ÂÖçË¥πÂºÄÊ∫êÊ≤ôÁõíÂª∫ÈÄ†Ê∏∏Êàè)" \
        "3" "gamehub:ÁÆ°ÁêÜSteam,GOG,Humble BundleÁ≠âÂπ≥Âè∞ÁöÑÊ∏∏Êàè" \
        "4" "sdlpal: SDL-based reimplementation of the rpg ‰ªôÂäçÂ•á‰ø†ÂÇ≥." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01='hmcl'
        ORIGINAL_URL='https://github.com/huanghongxun/HMCL'
        printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
        case ${ARCH_TYPE} in
        amd64 | i386) ;;
        *)
            this_app_may_non_support_running_on_proot
            # printf "%s\n" "hmcl‰æùËµñ‰∫éopenjfx,Â¶ÇÈúÄÂÆâË£ÖÔºåÂàôËØ∑Ëá™Ë°åËß£ÂÜ≥‰æùËµñÈóÆÈ¢ò„ÄÇ"
            non_debian_function
            # add_debian_old_source
            #printf "%s\n" "${GREEN}apt install -y${RESET} ${BLUE}hmcl${RESET}"
            #apt install -y hmcl
            beta_features_quick_install
            # del_debian_old_source
            #arch_does_not_support
            press_enter_to_return
            ${RETURN_TO_WHERE}
            ;;
        esac
        ;;
    2)
        DEPENDENCY_01='minetest'
        case ${LINUX_DISTRO} in
        debian) DEPENDENCY_02='^minetest-mod minetest-server' ;;
        *) DEPENDENCY_02='minetest-server' ;;
        esac
        beta_features_quick_install
        ;;
    3)
        DEPENDENCY_01='gamehub'
        ORIGINAL_URL='https://tkashkin.tk/projects/gamehub'
        printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
        ;;
    4)
        DEPENDENCY_01='sdlpal'
        ORIGINAL_URL='https://sdlpal.github.io/sdlpal'
        printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
        ;;
    esac
    ##########################
    case ${DEBIAN_INSTALLATION_MENU} in
    00)
        non_debian_function
        beta_features_quick_install
        ;;
    01) debian_opt_install_or_remove_01 ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
############
debian_opt_internet_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_internet_app'
    RETURN_TO_MENU='debian_opt_internet_app'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "INTERNET" --menu \
        "Which software do you want to install?" 0 0 0 \
        "1" "motrix: A full-featured download manager." \
        "2" "remotely: A simple VNC viewer." \
        "3" "freechat: A Wechat client for macOS and Linux." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01="motrix"
        ORIGINAL_URL='https://motrix.app/'
        ;;
    2)
        DEPENDENCY_01="remotely"
        ORIGINAL_URL='https://gitlab.gnome.org/World/Remotely'
        ;;
    3)
        DEPENDENCY_01="freechat"
        ORIGINAL_URL='https://github.com/eNkru/freechat'
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    case ${DEBIAN_INSTALLATION_MENU} in
    01) debian_opt_install_or_remove_01 ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
debian_opt_tools_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_tools_app'
    RETURN_TO_MENU='debian_opt_tools_app'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "TOOLS" --menu \
        "ÂêõÊ¨≤‰ΩïÁà≤?\nWhich software do you want to install? " 0 0 0 \
        "1" "appeditor: Edit application entries in the application menu." \
        "2" "eddy: A debian package installer." \
        "3" "imageburner: A simple image burner inspired by Etcher's UI." \
        "4" "woeusb: A simple tool that enable you to create your own usb stick windows installer from an iso image or a real DVD." \
        "5" "albert: A fast and flexible keyboard launcher." \
        "6" "alohomora: An easy-to-use password manager." \
        "7" "qgnomeplatform: QPlatformTheme for a better Qt application inclusion in GNOME." \
        "8" "winetricks-zh: A windows applications setup wizard for Chinese wine users." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01="appeditor"
        ORIGINAL_URL='https://github.com/donadigo/appeditor'
        ;;
    2)
        DEPENDENCY_01="eddy"
        ORIGINAL_URL='https://github.com/donadigo/eddy'
        ;;
    3)
        DEPENDENCY_01="imageburner"
        ORIGINAL_URL='https://github.com/artemanufrij/imageburner'
        ;;
    4)
        DEPENDENCY_01="woeusb"
        ORIGINAL_URL='https://github.com/slacka/WoeUSB'
        ;;
    5)
        DEPENDENCY_01="albert"
        ORIGINAL_URL='https://github.com/albertlauncher/albert'
        ;;
    6)
        DEPENDENCY_01="alohomora"
        ORIGINAL_URL='https://github.com/z0o0p/alohomora'
        ;;
    7)
        DEPENDENCY_01="qgnomeplatform"
        ORIGINAL_URL='https://github.com/FedoraQt/QGnomePlatform'
        ;;
    8)
        DEPENDENCY_01="winetricks-zh"
        ORIGINAL_URL='https://github.com/hillwoodroc/winetricks-zh'
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    case ${DEBIAN_INSTALLATION_MENU} in
    01) debian_opt_install_or_remove_01 ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
debian_opt_development_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_development_app'
    RETURN_TO_MENU='debian_opt_development_app'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "DEVELOPMENT" --menu \
        "Which software do you want to install?" 0 0 0 \
        "1" "wxformbuilder:Áî®‰∫éwxWidgets GUIËÆæËÆ°ÁöÑRADÂ∑•ÂÖ∑" \
        "2" "netron: Visualizer for neural network, deep learning and machine learning models." \
        "3" "textadept: A fast, minimalist, and remarkably extensible cross-platform text editor." \
        "4" "vala-language-server: Code Intelligence for Vala & Genie." \
        "5" "nasc: Do maths like a normal person." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01='wxformbuilder'
        ORIGINAL_URL='https://github.com/wxFormBuilder/wxFormBuilder'
        ;;
    2)
        DEPENDENCY_01="netron"
        ORIGINAL_URL='https://github.com/lutzroeder/netron'
        ;;
    3)
        DEPENDENCY_01="textadept"
        ORIGINAL_URL='https://foicica.com/textadept/'
        ;;
    4)
        DEPENDENCY_01="vala-language-server"
        ORIGINAL_URL='https://github.com/Prince781/vala-language-server'
        ;;
    5)
        DEPENDENCY_01="nasc"
        ORIGINAL_URL='http://parnold-x.github.io/nasc/'
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    case ${DEBIAN_INSTALLATION_MENU} in
    01) debian_opt_install_or_remove_01 ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
###############
debian_opt_video_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_video_app'
    RETURN_TO_MENU='debian_opt_video_app'
    # DEBIAN_INSTALLATION_MENU='00'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "VIDEO APP" --menu \
        "Which software do you want to install?" 0 0 0 \
        "1" "ciano:Â§öÂ™í‰ΩìÈü≥ËßÜÈ¢ëÊ†ºÂºèËΩ¨Êç¢Âô®" \
        "2" "lossless-cut: Save space by quickly and losslessly trimming video and audio files." \
        "3" "gifup: Create GIFs from video files." \
        "4" "moonplayer: Online video client for Linux supporting Youtube, Bilibili etc." \
        "5" "vidbox: a tiny video toolbox that allows you to split, merge videos and so on." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01='ciano'
        ORIGINAL_URL='https://robertsanseries.github.io/ciano'
        ;;
    2)
        DEPENDENCY_01="lossless-cut"
        ORIGINAL_URL="https://github.com/mifi/lossless-cut"
        ;;
    3)
        DEPENDENCY_01="gifup"
        ORIGINAL_URL="https://github.com/bharatkalluri/gifup"
        ;;
    4)
        DEPENDENCY_01="moonplayer"
        ORIGINAL_URL="https://coslyk.github.io/moonplayer"
        ;;
    5)
        DEPENDENCY_01="vidbox"
        ORIGINAL_URL="https://coslyk.github.io/vidbox.html"
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    case ${DEBIAN_INSTALLATION_MENU} in
    00)
        non_debian_function
        beta_features_quick_install
        ;;
    01) debian_opt_install_or_remove_01 ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
#############
debian_opt_reader_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_reader_app'
    RETURN_TO_MENU='debian_opt_reader_app'
    # DEBIAN_INSTALLATION_MENU='00'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "READER APP" --menu \
        "ËÖπÊúâË©©Êõ∏Ê∞£Ëá™ËèØ" 0 0 0 \
        "1" "bookworm:ÁÆÄÁ∫¶ÁöÑÁîµÂ≠ê‰π¶ÈòÖËØªÂô®" \
        "2" "foliate:ÁÆÄÂçï‰∏îÁé∞‰ª£ÂåñÁöÑÁîµÂ≠ê‰π¶ÈòÖËØªÂô®" \
        "3" "lector: Qt based ebook reader." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01='bookworm'
        ORIGINAL_URL='https://github.com/babluboy/bookworm'
        ;;
    2)
        DEPENDENCY_01='foliate'
        ORIGINAL_URL='https://johnfactotum.github.io/foliate/'
        ;;
    3)
        DEPENDENCY_01='lector'
        ORIGINAL_URL='https://github.com/BasioMeusPuga/Lector'
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    case ${DEBIAN_INSTALLATION_MENU} in
    00)
        non_debian_function
        beta_features_quick_install
        ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
############
debian_opt_picture_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_picture_app'
    RETURN_TO_MENU='debian_opt_picture_app'
    # DEBIAN_INSTALLATION_MENU='00'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "PIC APP" --menu \
        "Which software do you want to install? " 0 0 0 \
        "1" "bingle:‰∏ãËΩΩÂæÆËΩØÂøÖÂ∫îÊØèÊó•Á≤æÈÄâÂ£ÅÁ∫∏" \
        "2" "fondo:Â£ÅÁ∫∏app" \
        "3" "komorebi:ÂãïÊÖãÂ£ÅÁ¥ô" \
        "4" "draw.io:ÊÄùÁ∂≠Â∞éÂúñ" \
        "5" "colorpicker: A color picker." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01='bingle'
        ORIGINAL_URL='https://coslyk.github.io/bingle'
        ;;
    2)
        DEPENDENCY_01='fondo'
        ORIGINAL_URL='https://github.com/calo001/fondo'
        ;;
    3)
        DEPENDENCY_01='komorebi'
        ORIGINAL_URL='https://github.com/Komorebi-Fork/komorebi'
        ;;
    4)
        DEPENDENCY_01="draw.io"
        ORIGINAL_URL='https://github.com/jgraph/drawio-desktop'
        ;;
    5)
        DEPENDENCY_01="colorpicker"
        ORIGINAL_URL='https://github.com/RonnyDo/ColorPicker'
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    case ${DEBIAN_INSTALLATION_MENU} in
    00)
        non_debian_function
        beta_features_quick_install
        ;;
    01) debian_opt_install_or_remove_01 ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
#####################
debian_opt_note_app() {
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_note_app'
    RETURN_TO_MENU='debian_opt_note_app'
    # DEBIAN_INSTALLATION_MENU='00'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "NOTE APP" --menu \
        "Which software do you want to install? " 0 0 0 \
        "1" "vnote:‰∏ÄÊ¨æÊõ¥‰∫ÜËß£Á®ãÂ∫èÂëòÂíåMarkdownÁöÑÁ¨îËÆ∞ËΩØ‰ª∂" \
        "2" "go-for-it:ÁÆÄÊ¥ÅÁöÑÂ§áÂøòËΩØ‰ª∂ÔºåÂÄüÂä©ÂÆöÊó∂ÊèêÈÜíÂ∏ÆÂä©ÊÇ®‰∏ìÊ≥®‰∫éÂ∑•‰Ωú" \
        "3" "wiznote:‰∏∫Áü•Á¨îËÆ∞ÊòØ‰∏ÄÊ¨æÂü∫‰∫é‰∫ëÂ≠òÂÇ®ÁöÑÁ¨îËÆ∞app" \
        "4" "xournalpp:ÊîØÊåÅPDFÊâãÂÜôÊ≥®ÈáäÁöÑÁ¨îËÆ∞ËΩØ‰ª∂" \
        "5" "notes-up:MarkdownÁºñËæëÂíåÁÆ°ÁêÜÂô®" \
        "6" "qownnotes:ÂºÄÊ∫êMarkdownÁ¨îËÆ∞ÂíåÂæÖÂäû‰∫ãÈ°πËΩØ‰ª∂,ÊîØÊåÅ‰∏éowncloud‰∫ëÊúçÂä°ÈõÜÊàê" \
        "7" "quilter:ËΩªÈáèÁ∫ßmarkdownÁºñËæëÂô®" \
        "8" "textadept:ÊûÅÁÆÄ„ÄÅÂø´ÈÄüÂíåÂèØÊâ©Â±ïÁöÑË∑®Âπ≥Âè∞ÊñáÊú¨ÁºñËæëÂô®" \
        "9" "marktext: A simple and elegant markdown editor." \
        "10" "apostrophe: A clean and intuitive Markdown editor." \
        "11" "p3x-onenote: A Linux compatible version of OneNote." \
        "12" "trelby: The free, multiplatform, feature-rich screenwriting program." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEPENDENCY_01='vnote'
        ORIGINAL_URL='https://tamlok.gitee.io/vnote'
        ;;
    2)
        DEPENDENCY_01='go-for-it'
        ORIGINAL_URL='https://github.com/mank319/Go-For-It'
        ;;
    3)
        DEPENDENCY_01='wiznote'
        ORIGINAL_URL='https://www.wiz.cn/wiznote-linux.html'
        ;;
    4)
        DEPENDENCY_01='xournalpp'
        ORIGINAL_URL='https://xournalpp.github.io/'
        ;;
    5)
        DEPENDENCY_01='notes-up'
        ORIGINAL_URL='https://github.com/Philip-Scott/Notes-up'
        ;;
    6)
        DEPENDENCY_01='qownnotes'
        ORIGINAL_URL='https://www.qownnotes.org/'
        ;;
    7)
        DEPENDENCY_01='quilter'
        ORIGINAL_URL='https://github.com/lainsce/quilter'
        ;;
    8)
        DEPENDENCY_01='textadept'
        ORIGINAL_URL='https://foicica.com/textadept/'
        ;;
    9)
        DEPENDENCY_01="marktext"
        ORIGINAL_URL='https://marktext.app/'
        ;;
    10)
        DEPENDENCY_01="apostrophe"
        ORIGINAL_URL='https://somas.pages.gitlab.gnome.org/apostrophe/'
        ;;
    11)
        DEPENDENCY_01="p3x-onenote"
        ORIGINAL_URL='https://www.corifeus.com/onenote'
        ;;
    12)
        DEPENDENCY_01="trelby"
        ORIGINAL_URL='https://www.trelby.org/'
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    case ${DEBIAN_INSTALLATION_MENU} in
    00)
        non_debian_function
        beta_features_quick_install
        ;;
    01) debian_opt_install_or_remove_01 ;;
    esac
    ########################
    press_enter_to_return
    ${RETURN_TO_WHERE}
}
################
debian_opt_music_app() {
    #16 50 7
    DEPENDENCY_02=''
    RETURN_TO_WHERE='debian_opt_music_app'
    RETURN_TO_MENU='debian_opt_music_app'
    DEBIAN_INSTALLATION_MENU='01'
    INSTALL_APP=$(whiptail --title "MUSIC APP" --menu \
        "‰ª•ÈõÖ‰ª•Âçó,‰ª•Èæ†‰∏çÂÉ≠" 0 0 0 \
        "1" "netease-cloud-music-gtk(‰∫ëÈü≥‰πê)" \
        "2" "vocal(Âº∫Â§ßÁæéËßÇÁöÑÊí≠ÂÆ¢app)" \
        "3" "flacon(ÊîØÊåÅ‰ªé‰∏ìËæë‰∏≠ÊèêÂèñÈü≥È¢ëÊñá‰ª∂)" \
        "4" "chord: A Modern Music Player supporting multiple music websites." \
        "5" "cocomusic: QQ Music client for linux built by electron and vue." \
        "6" "feeluown: A user-friendly music player, supporting Netease and Xiami." \
        "7" "givemelyrics: See the lyrics of the song that is playing, from any application." \
        "8" "listen1: One for all free music in China." \
        "9" "melody: Music Player and Manager for local Music Files." \
        "10" "electron-netease-cloud-music: UNOFFICIAL client for music.163.com." \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############
    non_debian_function
    case "${INSTALL_APP}" in
    0 | "") debian_opt_menu ;;
    1)
        DEBIAN_INSTALLATION_MENU='01'
        install_netease_cloud_music_gtk
        ;;
    2)
        DEPENDENCY_01='vocal'
        ORIGINAL_URL="https://github.com/needle-and-thread/vocal"
        ;;
    3)
        DEPENDENCY_01='flacon'
        ORIGINAL_URL="https://flacon.github.io/"
        ;;
    4)
        DEPENDENCY_01="chord"
        ORIGINAL_URL="https://github.com/PeterDing/chord"
        ;;
    5)
        DEPENDENCY_01="cocomusic"
        ORIGINAL_URL="https://github.com/xtuJSer/CoCoMusic"
        ;;
    6)
        DEPENDENCY_01="feeluown"
        ORIGINAL_URL="https://feeluown.readthedocs.io/en/latest/"
        ;;
    7)
        DEPENDENCY_01="givemelyrics"
        ORIGINAL_URL="https://github.com/muriloventuroso/givemelyrics"
        ;;
    8)
        DEPENDENCY_01="listen1"
        ORIGINAL_URL="http://listen1.github.io/listen1/"
        ;;
    9)
        DEPENDENCY_01="melody"
        ORIGINAL_URL="http://anufrij.org/melody/"
        ;;
    10)
        DEPENDENCY_01="electron-netease-cloud-music"
        ORIGINAL_URL="https://github.com/gmg137/netease-cloud-music-gtk"
        ;;
    esac
    ##########################
    printf "%s\n" "${YELLOW}${ORIGINAL_URL}${RESET}"
    #"7" "feeluown(x64,ÊîØÊåÅÁΩëÊòì‰∫ë„ÄÅËôæÁ±≥)" \
    case ${DEBIAN_INSTALLATION_MENU} in
    00)
        non_debian_function
        beta_features_quick_install
        ;;
    01) debian_opt_install_or_remove_01 ;;
    esac
    #Ê≠§Â§Ñ00ËèúÂçï‰∏çË¶ÅË∑≥ËΩ¨Âà∞beta_features_quick_install
    ########################
    press_enter_to_return
    debian_opt_music_app
}
###############
remove_debian_opt_repo() {
    non_debian_function
    rm -vf ${OPT_REPO_LIST} /usr/share/keyrings/debian-opt-11-archive-keyring.gpg
    apt update
}
##################
install_opt_deb_file() {
    cd ".${OPT_APP_NAME}"
    apt-cache show ./${OPT_DEB_NAME}
    apt install -y ./${OPT_DEB_NAME}
    cd /tmp
    rm -rvf "${DOWNLOAD_PATH}/.${OPT_APP_NAME}"
    beta_features_install_completed
}
##########
git_clone_opt_deb_01() {
    cd ${DOWNLOAD_PATH}

    git clone \
        --depth=1 \
        -b "${OPT_BRANCH_NAME}" \
        "${OPT_APP_GIT_REPO}" \
        ".${OPT_APP_NAME}"
}
###########
install_debian_netease_cloud_music() {
    DEBIAN_INSTALLATION_MENU='00'
    OPT_APP_NAME='netease-cloud-music-gtk'
    OPT_APP_GIT_REPO="https://gitee.com/ak2/${OPT_APP_NAME}.git"
    OPT_DEB_NAME="${OPT_APP_NAME}_arm64.deb"
    DOWNLOAD_PATH='/tmp'
    git_clone_opt_deb_01
    install_opt_deb_file
}
##############
please_choose_netease_cloud_music_version() {
    if (whiptail --title "sid or buster" --yes-button "sid" --no-button "buster" --yesno "ËØ∑ÈÄâÊã©ÁâàÊú¨ÔºÅÊóßÁâàÁ≥ªÁªü(‰æãÂ¶Çubuntu18.04)ËØ∑ÈÄâÊã©buster,\nÊñ∞ÁâàÁ≥ªÁªü(Â¶Çkali rolling)ËØ∑ÈÄâÊã©sid„ÄÇ\n‰∏çÁ¨¶ÂêàÂΩìÂâçÁ≥ªÁªüÁöÑÁâàÊú¨Â∞ÜÂØºËá¥Êí≠ÊîæÊ†ºÂºèÈîôËØØÂì¶ÔºÅ‚ô™(^‚àá^*) " 0 0); then
        OPT_BRANCH_NAME='sid_arm64'
    else
        OPT_BRANCH_NAME='arm64'
    fi
}
############
install_debian_buster_or_sid_netease_cloud_music() {
    if grep -q 'sid' /etc/os-release; then
        OPT_BRANCH_NAME='sid_arm64'
    elif grep -q 'buster' /etc/os-release; then
        OPT_BRANCH_NAME='arm64'
    else
        case "${DEBIAN_DISTRO}" in
        ubuntu)
            if ! grep -Eq 'Bionic Beaver|Eoan Ermine|Xenial' "/etc/os-release"; then
                OPT_BRANCH_NAME='ubuntu_arm64'
            else
                OPT_BRANCH_NAME='arm64'
            fi
            ;;
        kali) OPT_BRANCH_NAME='sid_arm64' ;;
        *) please_choose_netease_cloud_music_version ;;
        esac
    fi
}
################
install_netease_cloud_music_gtk() {
    DEPENDENCY_01='netease-cloud-music-gtk'
    printf "%s\n" "github urlÔºö${YELLOW}https://github.com/gmg137/netease-cloud-music-gtk${RESET}"
    printf "%s\n" "Êú¨ÁâàÊú¨‰ªÖÂÖºÂÆπdebian sid,ubuntu 20.04/20.10Âèäkali rooling,Ëã•Êó†Ê≥ïËøêË°å,ÂàôËØ∑Ëá™Ë°åÁºñËØë„ÄÇ"
    printf "%s\n" "${DEBIAN_DISTRO}"
    non_debian_function
    if [ $(command -v ${DEPENDENCY_01}) ]; then
        beta_features_install_completed
        printf "%s\n" "ÊòØÂê¶ÈúÄË¶ÅÈáçË£ÖÔºü"
        do_you_want_to_continue
    fi
    case ${ARCH_TYPE} in
    arm64)
        install_debian_buster_or_sid_netease_cloud_music
        install_debian_netease_cloud_music
        ;;
    armhf) arch_does_not_support ;;
    *) beta_features_quick_install ;;
    esac
    if [ ! $(command -v netease-cloud-music-gtk) ]; then
        arch_does_not_support
    fi
}
###############
install_pic_go() {
    DEPENDENCY_01='picgo'
    printf "%s\n" "github urlÔºö${YELLOW}https://github.com/Molunerfinn/PicGo${RESET}"
}
############################################
explore_debian_opt_repo
