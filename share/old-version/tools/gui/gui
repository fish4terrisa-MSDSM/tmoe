############################################
gui_main() {
    IOSEVKA_TTF_FILE="/usr/share/fonts/truetype/iosevka/Iosevka-Term-Mono.ttf"
    unset AUTO_INSTALL_GUI AUTO_INSTALL_VSCODE
    case "$1" in
    --auto-install-gui-xfce)
        docker_auto_install_gui_env
        install_xfce4_desktop
        ;;
    --auto-install-gui-lxde)
        docker_auto_install_gui_env
        install_lxde_desktop
        ;;
    --auto-install-gui-lxqt)
        docker_auto_install_gui_env
        install_lxqt_desktop
        ;;
    --auto-install-gui-mate)
        docker_auto_install_gui_env
        install_mate_desktop
        ;;
    --auto-install-gui-kde)
        docker_auto_install_gui_env
        install_kde_plasma5_desktop
        ;;
    --auto-install-gui-cutefish)
        docker_auto_install_gui_env
        install_cutefish_desktop
        ;;
    --auto-install-gui-dde)
        docker_auto_install_gui_env
        install_deepin_desktop
        ;;
    --auto-install-gui-ukui)
        docker_auto_install_gui_env
        install_ukui_desktop
        ;;
    --install-gui | install-gui)
        install_gui
        ;;
    -b)
        tmoe_desktop_beautification
        ;;
    -c)
        modify_remote_desktop_config
        ;;
    -x)
        modify_xsdl_conf
        ;;
    --vncpasswd) set_vnc_passwd ;;
    --choose-vnc-port) choose_vnc_port_5902_or_5903 ;;
    --fix-dbus) fix_vnc_dbus_launch ;;
    *) install_gui ;;
    esac
}
#############################
docker_auto_install_gui_env() {
    : <<\EOF
    check_linux_distro
    check_architecture
    gnu_linux_env
    source ${TMOE_TOOL_DIR}/environment/global_env 2>/dev/null
    check_current_user_name_and_group 2>/dev/null
EOF
    check_tmoe_linux_desktop_link
    ln -sfv ${TMOE_GIT_DIR}/share/old-version/share/app/tmoe /usr/local/bin
    ln -svf tmoe /usr/local/bin/tome
    export AUTO_INSTALL_GUI=true
    if [[ ! $(command -v add-apt-repository) && $(command -v apt-get) ]]; then
        apt install -y software-properties-common
    fi
    if [[ ! $(command -v aria2c) ]]; then
        ${TMOE_INSTALLATION_COMMAND} aria2 || ${TMOE_INSTALLATION_COMMAND} aria2
    fi
    case ${DEBIAN_DISTRO} in
    ubuntu)
        apt install -y ^language-pack-zh
        UBUNTU_DESKTOP=true
        ;;
    kali)
        apt install -y debian-archive-keyring
        # printf "\n%s\n" "deb http://deb.debian.org/debian/ stable main contrib non-free" >>/etc/apt/sources.list
        # apt update
        ;;
    esac
    #check_zstd
    download_iosevka_ttf_font
    preconfigure_gui_dependecies_02
    REMOVE_UDISK2=false
    AUTO_INSTALL_VSCODE=false
    case ${LINUX_DISTRO} in
    alpine)
        AUTO_INSTALL_FCITX4=false
        AUTO_INSTALL_ELECTRON_APPS=false
        ;;
    redhat)
        AUTO_INSTALL_FCITX4=false
        AUTO_INSTALL_ELECTRON_APPS=true
        AUTO_INSTALL_VSCODE=true
        ;;
    debian | arch)
        AUTO_INSTALL_FCITX4=false #true
        AUTO_INSTALL_ELECTRON_APPS=true
        ${TMOE_INSTALLATION_COMMAND} baobab
        ${TMOE_INSTALLATION_COMMAND} bleachbit
        AUTO_INSTALL_VSCODE=true
        ;;
    esac
    case "${DEBIAN_DISTRO}" in
    "kali")
        KALI_TOOLS="kali-linux-arm"
        AUTO_INSTALL_KALI_TOOLS=true
        ;;
    esac
    AUTO_INSTALL_CHROMIUM=true
    mkdir -p ~/.vnc
    printf "please delete the invalid passwd file\n" >~/.vnc/passwd
}
############################
modify_other_vnc_conf() {
    #15 60 7
    MODIFYOTHERVNCCONF=$(
        whiptail --title "Modify vnc server conf" --menu "Type startvnc to start vncserver,ËæìÂÖ•startvncÂêØÂä®vncÊúçÂä°" 0 0 0 \
            "1" "Edit startvnc ÁºñËæëvncÂêØÂä®ËÑöÊú¨" \
            "2" "Vnc passwordÂØÜÁ†Å" \
            "3" "Switch tiger/tightvncÂàáÊç¢ÊúçÂä°Á´Ø" \
            "4" "Pulseaudio addressÈü≥È¢ëÂú∞ÂùÄ" \
            "5" "Edit xsession ÁºñËæëxsession" \
            "6" "Edit tigervnc-config ÁºñËæëtigervncÈÖçÁΩÆ" \
            "7" "Zlib level ÂéãÁº©Á∫ßÂà´" \
            "8" "Pixel depth Ëâ≤ÂΩ©/ÂÉèÁ¥†Ê∑±Â∫¶" \
            "9" "Window scaling factorÁ™óÂè£Áº©ÊîæÊØî‰æã(‰ªÖÊîØÊåÅxfwm)" \
            "10" "Display portÊòæÁ§∫Á´ØÂè£" \
            "11" "WSL pulseaudio(only for windows)" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ###########
    case "${MODIFYOTHERVNCCONF}" in
    0 | "") modify_remote_desktop_config ;;
    1) nano_startvnc_manually ;;
    2) set_vnc_passwd ;;
    3) switch_tight_or_tiger_vncserver ;;
    4) modify_vnc_pulse_audio ;;
    5)
        check_editor
        ${EDITOR} ${XSESSION_FILE}
        #stopvnc 2>/dev/null
        ;;
    6) nano_tigervnc_default_config_manually ;;
    7) modify_tigervnc_zlib_level ;;
    8) modify_tigervnc_pixel_depth ;;
    9) modify_xfce_window_scaling_factor ;;
    10) modify_tightvnc_display_port ;;
    11)
        check_editor
        ${EDITOR} ${TMOE_LINUX_DIR}/wsl_pulse_audio
        ;;
    esac
    #########
    press_enter_to_return
    modify_other_vnc_conf
    ##########
}
##############
modify_tigervnc_zlib_level() {
    CURRENT_VALUE=$(grep '^ZLIB_LEVEL=' $(command -v startvnc) | awk -F '=' '{print $2}' | cut -d '"' -f 2)
    ZLIB_LEVEL=$(
        whiptail --title "Acceptable values are between 0 and 9" --menu "Zlib compression level for ZRLE encoding,\ncurrent value is ${CURRENT_VALUE}" 0 0 0 \
            "0" "0(Default level)" \
            "1" "1" \
            "2" "2" \
            "3" "3" \
            "4" "4" \
            "5" "5" \
            "6" "6" \
            "7" "7" \
            "8" "8" \
            "9" "9(Highest level)" \
            "00" "üåö Back" \
            3>&1 1>&2 2>&3
    )
    ###########
    case "${ZLIB_LEVEL}" in
    00 | "") modify_other_vnc_conf ;;
    esac
    sed -i -E "s@^(ZLIB_LEVEL=).*@\1${ZLIB_LEVEL}@g" $(command -v startvnc)
    grep --color=auto '^ZLIB_LEVEL=' $(command -v startvnc)
}
######################
modify_tigervnc_pixel_depth() {
    if [ $(command -v startvnc) ]; then
        if grep -q '^PIXEL_DEPTH=' $(command -v startvnc); then
            CURRENT_VALUE=$(grep '^PIXEL_DEPTH=' $(command -v startvnc) | awk -F '=' '{print $2}' | cut -d '"' -f 2)
        fi
    else
        CURRENT_VALUE="ERRORÔºÅstartvncÊñá‰ª∂‰∏çÂ≠òÂú®."
    fi
    if (whiptail --title "Which pixel-depth do you prefer?" --yes-button "24" --no-button "16" --yesno "Current pixel-depth is ${CURRENT_VALUE}" 0 0); then
        PIXEL_DEPTH=24
    else
        PIXEL_DEPTH=16
    fi
    sed -i -E "s@^(PIXEL_DEPTH=).*@\1${PIXEL_DEPTH}@g" $(command -v startvnc)
    grep --color=auto '^PIXEL_DEPTH=' $(command -v startvnc)
}
#######################
nano_tigervnc_default_config_manually() {
    check_editor
    ${EDITOR} /etc/tigervnc/vncserver-config-tmoe
}
#############
switch_tight_or_tiger_vncserver() {
    DEPENDENCY_01=''
    #NON_DEBIAN=true
    #non_debian_function
    if [ $(command -v startvnc) ]; then
        if grep -q '^VNC_SERVER=' $(command -v startvnc); then
            VNC_SERVER_BIN_NOW=$(grep '^VNC_SERVER=' $(command -v startvnc) | awk -F '=' '{print $2}' | cut -d '"' -f 2)
        fi
    fi
    #‰ºòÂÖàÊ£ÄÊµãtiger
    case ${VNC_SERVER_BIN_NOW} in
    tiger*) tight_vnc_variable ;;
    *) tiger_vnc_variable ;;
    esac
    VNC_SERVER_BIN_STATUS="Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâç‰ΩøÁî®ÁöÑÊòØ${VNC_SERVER_BIN_NOW}"
    if (whiptail --title "ÊÇ®ÊÉ≥Ë¶ÅÂØπËøô‰∏™Â∞èÂèØÁà±ÂÅö‰ªÄ‰πàÂë¢ " --yes-button "BackËøîÂõû" --no-button "${VNC_SERVER_BIN}" --yesno "${VNC_SERVER_BIN_STATUS}\nËØ∑ÈóÆÊÇ®ÊòØÂê¶ÈúÄË¶ÅÂàáÊç¢‰∏∫${VNC_SERVER_BIN}‚ô™(^‚àá^*)\nDo you want to switch to ${VNC_SERVER_BIN}?" 0 0); then
        modify_other_vnc_conf
    else
        non_debian_function
        #apt update
        case_debian_distro_and_install_vnc
        grep --color=auto '^VNC_SERVER=' $(command -v startvnc)
    fi
}
#################
check_tightvnc_port() {
    CURRENT_PORT=$(grep 'VNC_DISPLAY=' $(command -v startvnc) | head -n 1 | awk 'BEGIN{FS="="} {print $2}' | cut -d '"' -f 2)
    CURRENT_VNC_PORT=$((CURRENT_PORT + 5900))
}
#########################
modify_tightvnc_display_port() {
    check_tightvnc_port
    TARGET=$(whiptail --inputbox "ÈªòËÆ§ÊòæÁ§∫ÁºñÂè∑‰∏∫1,ÂΩìÂâç‰∏∫${CURRENT_PORT}\nVNCÊúçÂä°‰ª•5900Á´ØÂè£‰∏∫Ëµ∑Âßã,Ëã•ÊòæÁ§∫ÁºñÂè∑‰∏∫2,ÂàôÁ´ØÂè£‰∏∫5902,ËØ∑ËæìÂÖ•ÊòæÁ§∫ÁºñÂè∑.Please type the display number." 13 50 --title "MODIFY DISPLAY PORT " 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        modify_other_vnc_conf
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        sed -i "s@tmoe-linux.*:.*@tmoe-linux :${TARGET}@" "$(command -v startvnc)"
        sed -i "s@VNC_DISPLAY=.*@VNC_DISPLAY=${TARGET}@" "$(command -v startvnc)"
        printf '%s\n' 'Your current VNC port has been modified.'
        check_tightvnc_port
        printf "%s\n" "Current display number is ${BLUE}${CURRENT_PORT}${RESET}"
        printf '%s\n' 'ÊÇ®ÂΩìÂâçÁöÑVNCÁ´ØÂè£Â∑≤‰øÆÊîπ‰∏∫'
        printf "%s\n" "${CURRENT_VNC_PORT}"
    fi
}
######################
modify_xfce_window_scaling_factor() {
    XFCE_CONFIG_FILE="${HOME}/.config/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml"
    if grep 'WindowScalingFactor' ${XFCE_CONFIG_FILE}; then
        CURRENT_VALUE=$(grep 'WindowScalingFactor' ${XFCE_CONFIG_FILE} | grep 'value=' | awk '{print $4}' | cut -d '"' -f 2)
    else
        CURRENT_VALUE='1'
    fi
    TARGET=$(whiptail --inputbox "ËØ∑ËæìÂÖ•ÊÇ®ÈúÄË¶ÅÁº©ÊîæÁöÑÊØî‰æãÂ§ßÂ∞è(Á∫ØÊï∞Â≠ó)ÔºåÂΩìÂâç‰ªÖÊîØÊåÅÊï¥Êï∞ÂÄçÔºå‰æãÂ¶Ç1Âíå2Ôºå‰∏çÊîØÊåÅ1.5,ÂΩìÂâç‰∏∫${CURRENT_VALUE}" 10 50 --title "Window Scaling Factor" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        modify_other_vnc_conf
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
        printf '%s\n' 'Ê£ÄÊµãÂà∞ÊÇ®ÂèñÊ∂à‰∫ÜÊìç‰Ωú'
        grep 'WindowScalingFactor' ${XFCE_CONFIG_FILE} | grep 'value='
    else
        dbus-launch xfconf-query -c xsettings -np /Gdk/WindowScalingFactor -s ${TARGET} || dbus-launch xfconf-query -t int -c xsettings -np /Gdk/WindowScalingFactor -s ${TARGET}
        if ((TARGET > 1)); then
            if grep -q 'Focal Fossa' "/etc/os-release"; then
                dbus-launch xfconf-query -c xfwm4 -t string -np /general/theme -s Kali-Light-xHiDPI 2>/dev/null
            else
                dbus-launch xfconf-query -c xfwm4 -t string -np /general/theme -s Default-xhdpi 2>/dev/null
            fi
        fi
        printf "%s\n" "‰øÆÊîπÂÆåÊàêÔºåËØ∑Ëæì${GREEN}startvnc${RESET}ÈáçÂêØËøõÁ®ã"
    fi
}
##################
modify_vnc_pulse_audio() {
    TARGET=$(whiptail --inputbox "Ëã•ÊÇ®ÈúÄË¶ÅËΩ¨ÂèëÈü≥È¢ëÂà∞ÂÖ∂ÂÆÉËÆæÂ§á,ÈÇ£‰πàÊÇ®ÂèØÂú®Ê≠§Â§Ñ‰øÆÊîπ„ÄÇlinuxÈªòËÆ§‰∏∫127.0.0.1,WSL2ÈªòËÆ§‰∏∫ÂÆø‰∏ªÊú∫ip,ÂΩìÂâç‰∏∫$(grep 'PULSE_SERVER=' $(command -v startvnc) | cut -d '=' -f 2 | head -n 1) \nÊú¨ÂäüËÉΩÈÄÇÁî®‰∫éÂ±ÄÂüüÁΩë‰º†ËæìÔºåÊú¨Êú∫Êìç‰ΩúÊó†ÈúÄ‰ªª‰Ωï‰øÆÊîπ„ÄÇËã•ÊÇ®ÊõæÂú®Èü≥È¢ëÊúçÂä°Á´ØÔºàÊé•Êî∂Èü≥È¢ëÁöÑËÆæÂ§áÔºâ‰∏äËøêË°åËøáTmoe-linux(‰ªÖÈôêAndroidÂíåwin10),Âπ∂ÈÖçÁΩÆÂÖÅËÆ∏Â±ÄÂüüÁΩëËøûÊé•,ÂàôÂè™ÈúÄËæìÂÖ•ËØ•ËÆæÂ§áip,Êó†ÈúÄÂä†Á´ØÂè£Âè∑„ÄÇÊ≥®ÔºöÊÇ®ÈúÄË¶ÅÊâãÂä®ÂêØÂä®Èü≥È¢ëÊúçÂä°Á´Ø,Android-TermuxÈúÄËæìpulseaudio --start,win10ÈúÄÊâãÂä®ÊâìÂºÄ'C:\Users\Public\Downloads\pulseaudio\pulseaudio.bat' \nËá≥‰∫éÂÖ∂ÂÆÉÁ¨¨‰∏âÊñπapp,‰æãÂ¶ÇÂÆâÂçìXSDL,Ëã•ÂÖ∂ÊòæÁ§∫ÁöÑPULSE_SERVERÂú∞ÂùÄ‰∏∫192.168.1.3:4713,ÈÇ£‰πàÊÇ®ÈúÄË¶ÅËæìÂÖ•192.168.1.3:4713" 20 50 --title "MODIFY PULSE SERVER ADDRESS" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        modify_other_vnc_conf
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        #sed -i '/PULSE_SERVER/d' ~/.vnc/xstartup
        #sed -i "2 a\export PULSE_SERVER=${TARGET}" ~/.vnc/xstartup
        if grep '^export.*PULSE_SERVER' "$(command -v startvnc)"; then
            sed -i "s@^export PULSE_SERVER=.*@export PULSE_SERVER=${TARGET}@" $(command -v startvnc)
        else
            sed -i "4 a\export PULSE_SERVER=${TARGET}" $(command -v startvnc)
        fi
        printf '%s\n' 'Your current PULSEAUDIO SERVER address has been modified.'
        printf '%s\n' 'ÊÇ®ÂΩìÂâçÁöÑÈü≥È¢ëÂú∞ÂùÄÂ∑≤‰øÆÊîπ‰∏∫'
        printf "%s\n" "$(grep 'PULSE_SERVER' $(command -v startvnc) | cut -d '=' -f 2 | head -n 1)"
        printf "%s\n" "ËØ∑ËæìstartvncÈáçÂêØvncÊúçÂä°Ôºå‰ª•‰ΩøÈÖçÁΩÆÁîüÊïà"
    fi
}
##################
nano_startvnc_manually() {
    printf '%s\n' 'ÊÇ®ÂèØ‰ª•ÊâãÂä®‰øÆÊîπvncÁöÑÈÖçÁΩÆ‰ø°ÊÅØ'
    printf '%s\n' 'If you want to modify the resolution, please change the 1440x720 (default resolutionÔºålandscape) to another resolution.For example, 1920x1080 (vertical screen).'
    printf '%s\n' 'Ëã•ÊÇ®ÊÉ≥Ë¶Å‰øÆÊîπÂàÜËæ®ÁéáÔºåËØ∑Â∞ÜÈªòËÆ§ÁöÑ1440x720ÔºàÊ®™Â±èÔºâÊîπ‰∏∫ÂÖ∂ÂÆÉÊÇ®ÊÉ≥Ë¶ÅÁöÑÂàÜËæ®ÁéáÔºå‰æãÂ¶Ç720x1440ÔºàÁ´ñÂ±èÔºâ„ÄÇ'
    #printf "%s\n" "ÊÇ®ÂΩìÂâçÂàÜËæ®Áéá‰∏∫$(grep '\-geometry' "$(command -v startvnc)" | cut -d 'y' -f 2 | cut -d '-' -f 1 | tail -n 1)"
    RETURN_TO_WHERE='modify_other_vnc_conf'
    do_you_want_to_continue
    check_editor
    ${EDITOR} $(command -v startvnc)
    #printf "%s\n" "ÊÇ®ÂΩìÂâçÂàÜËæ®Áéá‰∏∫$(grep '\-geometry' "$(command -v startvnc)" | cut -d 'y' -f 2 | cut -d '-' -f 1 | tail -n 1)"
    #stopvnc 2>/dev/null
    press_enter_to_return
    modify_other_vnc_conf
}
#############################################
catimg_preview_lxde_mate_xfce_01() {
    printf '%s\n' 'lxdeÈ¢ÑËßàÊà™Âõæ'
    #curl -LfsS 'https://gitee.com/mo2/pic_api/raw/test/2020/03/15/BUSYeSLZRqq3i3oM.png' | catimg -
    if [ ! -f 'LXDE_BUSYeSLZRqq3i3oM.png' ]; then
        curl -Lo 'LXDE_BUSYeSLZRqq3i3oM.png' ${LXDE_ICON_URL}
    fi
    catimg 'LXDE_BUSYeSLZRqq3i3oM.png'

    printf '%s\n' 'mateÈ¢ÑËßàÊà™Âõæ'
    #curl -LfsS 'https://gitee.com/mo2/pic_api/raw/test/2020/03/15/1frRp1lpOXLPz6mO.jpg' | catimg -
    if [ ! -f 'MATE_1frRp1lpOXLPz6mO.jpg' ]; then
        curl -sLo 'MATE_1frRp1lpOXLPz6mO.jpg' ${MATE_ICON_URL}
    fi
    catimg 'MATE_1frRp1lpOXLPz6mO.jpg'
    printf '%s\n' 'xfceÈ¢ÑËßàÊà™Âõæ'
}
catimg_preview_lxde_mate_xfce_02() {
    if [ ! -f 'XFCE_a7IQ9NnfgPckuqRt.jpg' ]; then
        curl -sLo 'XFCE_a7IQ9NnfgPckuqRt.jpg' ${XFCE_ICON_URL}
    fi
    catimg 'XFCE_a7IQ9NnfgPckuqRt.jpg' 2>/dev/null
    if [ "${WINDOWS_DISTRO}" = 'WSL' ]; then
        if [ ! -e "/mnt/c/Users/Public/Downloads/VcXsrv/XFCE_a7IQ9NnfgPckuqRt.jpg" ]; then
            cp -f 'XFCE_a7IQ9NnfgPckuqRt.jpg' "/mnt/c/Users/Public/Downloads/VcXsrv"
        fi
        cd "/mnt/c/Users/Public/Downloads/VcXsrv"
        /mnt/c/WINDOWS/system32/cmd.exe /c "start .\XFCE_a7IQ9NnfgPckuqRt.jpg" 2>/dev/null
    fi
}
install_gui() {
    [[ "${WINDOWS_DISTRO}" != 'WSL' ]] || source ${TMOE_TOOL_DIR}/gui/wsl
    [[ ! -s "${IOSEVKA_TTF_FILE}" ]] || standand_desktop_installation #ËØ•Â≠ó‰ΩìÊ£ÄÊµã‰∏§Ê¨°
    check_zstd
    random_neko
    cd /tmp
    case ${WINDOWS_DISTRO} in
    WSL)
        LXDE_ICON_URL='https://gitee.com/mo2/pic_api/raw/test/2020/03/15/BUSYeSLZRqq3i3oM.png'
        MATE_ICON_URL='https://gitee.com/mo2/pic_api/raw/test/2020/03/15/1frRp1lpOXLPz6mO.jpg'
        XFCE_ICON_URL='https://gitee.com/mo2/pic_api/raw/test/2020/03/15/a7IQ9NnfgPckuqRt.jpg'
        ;;
    *)
        LXDE_ICON_URL='https://gitee.com/ak2/icons/raw/master/raspbian-lxde.jpg'
        MATE_ICON_URL='https://gitee.com/ak2/icons/raw/master/ubuntu-mate.jpg'
        XFCE_ICON_URL='https://gitee.com/ak2/icons/raw/master/debian-xfce.jpg'
        ;;
    esac
    if [ $(command -v catimg) ]; then
        catimg_preview_lxde_mate_xfce_01
        catimg_preview_lxde_mate_xfce_02
    elif [[ ${WINDOWS_DISTRO} = 'WSL' ]]; then
        catimg_preview_lxde_mate_xfce_02
    fi
    download_iosevka_ttf_font
    #curl -LfsS 'https://gitee.com/mo2/pic_api/raw/test/2020/03/15/a7IQ9NnfgPckuqRt.jpg' | catimg -
    #printf "%s\n" "Âª∫ËÆÆÁº©Â∞èÂ±èÂπïÂ≠ó‰ΩìÔºåÂπ∂ÈáçÊñ∞Âä†ËΩΩÂõæÁâáÔºå‰ª•Ëé∑ÂæóÊõ¥‰ºòÁöÑÊòæÁ§∫ÊïàÊûú„ÄÇ"
    printf "%s\n" "Êåâ${GREEN}ÂõûËΩ¶ÈîÆ${RESET}${RED}ÈÄâÊã©${RESET}ÊÇ®ÈúÄË¶Å${YELLOW}ÂÆâË£Ö${RESET}ÁöÑ${BLUE}ÂõæÂΩ¢Ê°åÈù¢ÁéØÂ¢É${RESET}"
    RETURN_TO_WHERE="tmoe_linux_tool_menu"
    do_you_want_to_continue
    standand_desktop_installation
}
download_iosevka_ttf_font() {
    if [ ! -f "${IOSEVKA_TTF_FILE}" ]; then
        printf "${BLUE}%s${RESET}\n" "${IOSEVKA_TTF_FILE}"
        printf "${YELLOW}%s${RESET}\n" 'Ê≠£Âú®Âà∑Êñ∞Â≠ó‰ΩìÁºìÂ≠ò...'
        mkdir -pv /usr/share/fonts/truetype/iosevka/
        cd /tmp
        if [ -e "font.ttf" ]; then
            if [[ $(sha256sum font.ttf) = 'cb4f09f9ec1b0d21021dce6c6dbe4f7ecb4930cbea0c766da1fe478111a5844e' ]]; then
                cp -fv font.ttf "${IOSEVKA_TTF_FILE}"
            else
                mv -vf font.ttf /usr/share/fonts/truetype/iosevka/Iosevka.ttf
            fi
        fi
        unset FONT_DIR
        for i in "/root/.cache/gitstatus" "/etc/gitstatus"; do
            if [[ -e ${i} ]]; then
                FONT_DIR=${i}
            fi
        done

        if [[ -e "/etc/gitstatus" ]]; then
            if [[ -e /root/.cache/gitstatus ]]; then
                cp -f /root/.cache/gitstatus/* /etc/gitstatus 2>/dev/null
                chmod -R a+rx /etc/gitstatus/
            fi
            FONT_DIR=/etc/gitstatus
        else
            FONT_DIR="/root/.cache/gitstatus"
            mkdir -pv ${FONT_DIR}
        fi

        if [[ -e ${FONT_DIR}/Iosevka-Term-Mono.tar.xz ]]; then
            tar -Jxvf ${FONT_DIR}/Iosevka-Term-Mono.tar.xz
            mv -vf Iosevka.ttf "${IOSEVKA_TTF_FILE}"
        fi

        if [[ ! -e "${IOSEVKA_TTF_FILE}" ]]; then
            cd ${FONT_DIR}
            FONT_URL_01="https://gitee.com/ak2/inconsolata-go-font/raw/master/Iosevka-Term-Mono.tar.xz"
            FONT_URL_02="https://github.com/cu233/Iosevka-Term-Mono-Font/raw/master/Iosevka-Term-Mono.tar.xz"
            case ${AUTO_INSTALL_GUI} in
            true) aria2c --console-log-level=warn --no-conf --allow-overwrite=true -o Iosevka-Term-Mono.tar.xz ${FONT_URL_02} || curl -Lo 'Iosevka-Term-Mono.tar.xz' ${FONT_URL_01} ;;
            *) aria2c --console-log-level=warn --no-conf --allow-overwrite=true -o Iosevka-Term-Mono.tar.xz ${FONT_URL_01} || curl -Lo 'Iosevka-Term-Mono.tar.xz' ${FONT_URL_02} ;;
            esac
            tar -Jxvf 'Iosevka-Term-Mono.tar.xz'
            mv -vf Iosevka.ttf "${IOSEVKA_TTF_FILE}"
        fi
        #twice
        if [[ ! -e "${IOSEVKA_TTF_FILE}" ]]; then
            rm -fv ${FONT_DIR}/Iosevka-Term-Mono.tar.xz
        fi
        cd /usr/share/fonts/truetype/iosevka/
        mkfontscale 2>/dev/null
        mkfontdir 2>/dev/null
        fc-cache 2>/dev/null
    fi
}
########################
preconfigure_gui_dependecies_02() {
    unset AUTO_INSTALL_FCITX4
    unset AUTO_INSTALL_KALI_TOOLS
    unset AUTO_INSTALL_ELECTRON_APPS
    unset UBUNTU_DESKTOP
    unset AUTO_INSTALL_CHROMIUM
    DEPENDENCY_02="tigervnc"
    case "${LINUX_DISTRO}" in
    debian)
        # case "${TMOE_PROOT}" in
        # true) NON_DBUS=true ;;
        # esac
        #if grep -Eq 'Focal Fossa|focal|Eoan Ermine' "/etc/os-release"; then
        #    DEPENDENCY_02="dbus-x11 fonts-noto-cjk tightvncserver"
        #else
        DEPENDENCY_02="dbus-x11 fonts-noto-cjk"
        #fi
        #if grep -q '^PRETTY_NAME.*sid' "/etc/os-release"; then
        #	DEPENDENCY_02="${DEPENDENCY_02} tigervnc-standalone-server"
        #else
        #	DEPENDENCY_02="${DEPENDENCY_02} tightvncserver"
        #fi
        #‰∏äÈù¢ÁöÑ‰æùËµñÊëÜÊîæÁöÑ‰ΩçÁΩÆÊòØÊúâËÆ≤Á©∂ÁöÑ„ÄÇ
        ;;
    redhat)
        # case "${TMOE_PROOT}" in
        # true) NON_DBUS=true ;;
        # esac
        DEPENDENCY_02="google-noto-sans-cjk-ttc-fonts google-noto-emoji-color-fonts tigervnc-server"
        ;;
    arch)
        DEPENDENCY_02="tigervnc"
        if [ ! -e "/usr/share/fonts/noto-cjk" ]; then
            DEPENDENCY_02="noto-fonts-cjk ${DEPENDENCY_02}"
        fi
        if [ ! -e "/usr/share/fonts/noto/NotoColorEmoji.ttf" ]; then
            DEPENDENCY_02="noto-fonts-emoji ${DEPENDENCY_02}"
        fi
        ;;
    void) DEPENDENCY_02="xorg tigervnc wqy-microhei" ;;
    gentoo)
        dispatch-conf
        etc-update
        DEPENDENCY_02="media-fonts/wqy-bitmapfont net-misc/tigervnc"
        ;;
    suse) DEPENDENCY_02="tigervnc-x11vnc noto-sans-sc-fonts perl-base" ;;
    solus) DEPENDENCY_02="dbus-launch font-noto-cjk" ;;
    alpine)
        DEPENDENCY_02="dbus-x11 openrc font-noto-cjk tigervnc"
        #ca-certificates openssl xvfb x11vnc
        ;;
    esac
}
########################
standand_desktop_installation() {
    # NON_DBUS=false
    REMOVE_UDISK2=false
    RETURN_TO_WHERE='standand_desktop_installation'
    UBUNTU_DESKTOP=false
    preconfigure_gui_dependecies_02
    standand_desktop_installation_zh() {
        INSTALLDESKTOP=$(whiptail --title "GUI" --menu \
            "Desktop environment(ÁÆÄÁß∞DE)ÊòØ‰∏ÄÁßçÂ§öÂäüËÉΩÂíåÂ§öÊ†∑ÂåñÁöÑÂõæÂΩ¢ÁïåÈù¢„ÄÇ\nËã•ÂΩìÂâçÁéØÂ¢É‰∏∫Êó†rootÂÆπÂô®ÔºåÂàôÊÇ®Âè™ÈúÄÈÄâÊã©Á¨¨‰∏ÄÊàñËÄÖÁ¨¨‰∏âÈ°π„ÄÇ\nËã•ÂΩìÂâçÁéØÂ¢É‰∏∫ËôöÊãüÊú∫ÊàñnspawnÂÆπÂô®ÔºåÂàôÊÇ®ÂèØ‰ª•‰ªªÊÑèÊåëÈÄâÈ°πÁõÆ„ÄÇ" 0 0 0 \
            "1" "üç∞ rootless_DE(Êó†rootÂÆπÂô®ÂèØËøêË°å:xfce,kde,mate,lxqt)" \
            "2" "üç± VM/rootful_DE(dde,ukui,gnome,cinnamon)" \
            "3" "üçô window managerÁ™óÂè£ÁÆ°ÁêÜÂô®(ice,fvwm)" \
            "4" "üç£ display managerÊòæÁ§∫/ÁôªÂΩïÁÆ°ÁêÜÂô®:lightdm,sddm" \
            "0" "üåö noneÊàë‰∏Ä‰∏™ÈÉΩ‰∏çË¶Å =Ôø£œâÔø£=" \
            3>&1 1>&2 2>&3)
    }
    standand_desktop_installation_en() {
        INSTALLDESKTOP=$(whiptail --title "GUI" --menu \
            "If you are using a rootless container,then choose rootless_DE or WM.\nIf you are using a virtual machine,you can choose any one" 0 0 0 \
            "1" "üç∞ rootless_DE(xfce,kde,mate,lxqt)" \
            "2" "üç± VM/rootful_DE(dde,gnome,cinnamon)" \
            "3" "üçô window manager(ice,fvwm)" \
            "4" "üç£ display manager(lightdm,sddm)" \
            "0" "üåö back =Ôø£œâÔø£=" \
            3>&1 1>&2 2>&3)
    }
    # "6" "üç§ FAQ:vncÂíåguiÁöÑÂ∏∏ËßÅÈóÆÈ¢ò" \
    # 6) tmoe_desktop_faq ;;
    ##########################
    standand_desktop_installation_menu() {
        case "${INSTALLDESKTOP}" in
        0 | "") tmoe_linux_tool_menu ;;
        1) tmoe_container_desktop ;;
        2) tmoe_docker_and_chroot_container_desktop ;;
        3) window_manager_installation ;;
        4) install_tmoe_display_manager ;;
        esac
    }
    # 4) tmoe_virtual_machine_desktop ;;
    case ${TMOE_MENU_LANG} in
    zh_*UTF-8) standand_desktop_installation_zh ;;
    *) standand_desktop_installation_en ;;
    esac
    standand_desktop_installation_menu
    ##########################
    press_enter_to_return
    standand_desktop_installation
}
#######################
tmoe_desktop_faq() {
    source ${TMOE_TOOL_DIR}/gui/faq
}
######################
tmoe_docker_and_chroot_container_desktop() {
    case ${TMOE_MENU_LANG} in
    zh_*UTF-8)
        local Menu="ÊÇ®ÂèØ‰ª•Âú®rootfulÂÆπÂô®(‰æãÂ¶Çnspawn/docker)‰∏≠ËøêË°åËøô‰∫õÊ°åÈù¢"
        local OPT_1="üå≤ cinnamon(ËÇâÊ°ÇÂü∫‰∫égnome,ÂØπÁî®Êà∑ÂèãÂ•Ω)"
        local OPT_2="üë£ gnome(GNUÁΩëÁªúÂØπË±°Ê®°ÂûãÁéØÂ¢É)"
        local OPT_3="budgie(ËôéÁöÆÈπ¶ÈπâÂü∫‰∫égnome,‰ºòÈõÖ‰∏îÁé∞‰ª£Âåñ)"
        local OPT_4="dde(Ê∑±Â∫¶deepinÊ°åÈù¢,Â¥≠Êñ∞ËßÜÁïå,ÂàõÊó†Ê≠¢Â¢É)"
        local OPT_5="ukui(ubuntu-kylin‰ºòÈ∫íÈ∫üukuiÊ°åÈù¢,ÁÆÄÁπÅÂèñÊòì,Ê∏©Ê∂¶ÁÅµÊÄß)"
        ;;
    *)
        local Menu="You can run these DEs on nspawn or docker container."
        local OPT_1="üå≤ cinnamon"
        local OPT_2="üë£ gnome(The GNU Network Object Model Environment)"
        local OPT_3="budgie"
        local OPT_4="dde(deepin desktop environment)"
        local OPT_5="ukui(ubuntu-kylin desktop)"
        ;;
    esac

    INSTALLDESKTOP=$(whiptail --title "Desktop environment" --menu \
        "$Menu" 0 0 0 \
        "1" "$OPT_1" \
        "2" "$OPT_2" \
        "3" "$OPT_3" \
        "4" "$OPT_4" \
        "5" "$OPT_5" \
        "0" "üåö noneÊàë‰∏Ä‰∏™ÈÉΩ‰∏çË¶Å =Ôø£œâÔø£=" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${INSTALLDESKTOP}" in
    0 | "") standand_desktop_installation ;;
    1) install_cinnamon_desktop ;;
    2) install_gnome_desktop ;;
    3) install_budgie_desktop ;;
    4) install_deepin_desktop ;;
    5) install_ukui_desktop ;;
    esac
    # 5) install_gnome_desktop ;;
    ##########################
    press_enter_to_return
    standand_desktop_installation
}
####################
tmoe_container_desktop() {
    tmoe_container_desktop_zh() {
        INSTALLDESKTOP=$(whiptail --title "Desktop environment" --menu \
            "ÊÇ®ÊÉ≥Ë¶ÅÂÆâË£ÖÂì™‰∏™Ê°åÈù¢ÁéØÂ¢É?\n‰ªÖGTK+ÁéØÂ¢É(Â¶ÇxfceÂíågnome3Á≠â)ÊîØÊåÅÂú®Êú¨Â∑•ÂÖ∑ÂÜÖ‰æøÊç∑‰∏ãËΩΩ‰∏ªÈ¢ò„ÄÇ\nWhich desktop environment do you want to install? " 0 0 0 \
            "1" "üê≠ xfce(ÂÖºÂÆπÊÄßÈ´ò,ÁÆÄÂçï‰ºòÈõÖ)" \
            "2" "ü¶ñ kde plasma(È£éÊ†ºÂçé‰∏ΩÁöÑÊ°åÈù¢ÁéØÂ¢É)" \
            "3" "xfce-lite(Á≤æÁÆÄÂåñÂÆâË£Ö,Êú™ÁæéÂåñ)" \
            "4" "üê¶ lxqt(lxdeÂéüÂõ¢ÈòüÂü∫‰∫éQTÂºÄÂèëÁöÑÊ°åÈù¢)" \
            "5" "üïäÔ∏è lxde(ËΩªÈáèÂåñÊ°åÈù¢,ËµÑÊ∫êÂç†Áî®‰Ωé)" \
            "6" "üåø mate(GNOME2ÁöÑÂª∂Áª≠,ËÆ©Áî®Êà∑‰ΩìÈ™åÊõ¥ËàíÈÄÇÁöÑÁéØÂ¢É)" \
            "0" "üåö noneÊàë‰∏Ä‰∏™ÈÉΩ‰∏çË¶Å =Ôø£œâÔø£=" \
            3>&1 1>&2 2>&3)
    }
    tmoe_container_desktop_en() {
        INSTALLDESKTOP=$(whiptail --title "Desktop environment" --menu \
            "Which desktop environment do you want to install? " 0 0 0 \
            "1" "üê≠ xfce (elegant, high compatibility)" \
            "2" "ü¶ñ kde plasma(gorgeous style)" \
            "3" "xfce-lite (not-beautified)" \
            "4" "üê¶ lxqt" \
            "5" "üïäÔ∏è lxde (lightweight)" \
            "6" "üåø mate (the continuation of GNOME 2)" \
            "0" "üåö back =Ôø£œâÔø£=" \
            3>&1 1>&2 2>&3)
    }
    # "6" "phosh(Pure Wayland shell for mobile devices)"
    case ${TMOE_MENU_LANG} in
    zh_*UTF-8) tmoe_container_desktop_zh ;;
    *) tmoe_container_desktop_en ;;
    esac
    ##########################
    case "${INSTALLDESKTOP}" in
    0 | "") standand_desktop_installation ;;
    1)
        REMOVE_UDISK2=true
        install_xfce4_desktop
        ;;
    2) install_kde_plasma5_desktop ;;
    3)
        REMOVE_UDISK2=true
        install_xfce4_lite_desktop
        ;;
    4)
        REMOVE_UDISK2=true
        install_lxqt_desktop
        ;;
    5)
        REMOVE_UDISK2=true
        install_lxde_desktop
        ;;
    6) install_mate_desktop ;;
    esac
    ##########################
    press_enter_to_return
    standand_desktop_installation
}
####################
install_tmoe_display_manager() {
    DEPENDENCY_01=''
    RETURN_TO_WHERE='install_tmoe_display_manager'
    INSTALLDESKTOP=$(whiptail --title "ÂçïÈ°πÈÄâÊã©È¢ò" --menu \
        "ÊòæÁ§∫ÁÆ°ÁêÜÂô®(ÁÆÄÁß∞DM)ÊòØ‰∏Ä‰∏™Âú®ÂêØÂä®ÊúÄÂêéÊòæÁ§∫ÁöÑÂõæÂΩ¢ÁïåÈù¢,Ë¥üË¥£ÁÆ°ÁêÜÁôªÂΩï‰ºöËØù„ÄÇ\n Which display manager do you want to install? " 17 50 6 \
        "1" "lightdm:ÊîØÊåÅË∑®Ê°åÈù¢,ÂèØ‰ª•‰ΩøÁî®ÂêÑÁßçÂâçÁ´ØÂÜôÁöÑÂ∑•ÂÖ∑" \
        "2" "sddm:Áé∞‰ª£ÂåñDM,Êõø‰ª£KDE4ÁöÑKDM" \
        "3" "gdm:GNOMEÈªòËÆ§DM" \
        "4" "slim:LightweightËΩªÈáè" \
        "5" "lxdm:LXDEÈªòËÆ§DM(Áã¨Á´ã‰∫éÊ°åÈù¢ÁéØÂ¢É)" \
        "0" "Back to the main menu ËøîÂõû‰∏ªËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${INSTALLDESKTOP}" in
    0 | "") tmoe_linux_tool_menu ;;
    1)
        if [ "${LINUX_DISTRO}" = "alpine" ]; then
            setup-xorg-base
            DEPENDENCY_01='lightdm-gtk-greeter xf86-input-mouse xf86-input-keyboard polkit consolekit2'
        else
            DEPENDENCY_01='ukui-greeter lightdm-gtk-greeter-settings'
        fi

        DEPENDENCY_02='lightdm'
        ;;
    2)
        DEPENDENCY_01='sddm-theme-breeze'
        DEPENDENCY_02='sddm'
        ;;
    3)
        DEPENDENCY_01='gdm'
        DEPENDENCY_02='gdm3'
        ;;
    4) DEPENDENCY_02='slim' ;;
    5) DEPENDENCY_02='lxdm' ;;
    esac
    ##########################
    tmoe_display_manager_systemctl
}
##################
tmoe_display_manager_systemctl() {
    RETURN_TO_WHERE='tmoe_display_manager_systemctl'
    if [ ${DEPENDENCY_02} = 'gdm3' ]; then
        TMOE_DEPENDENCY_SYSTEMCTL='gdm'
    else
        TMOE_DEPENDENCY_SYSTEMCTL=${DEPENDENCY_02}
    fi
    INSTALLDESKTOP=$(whiptail --title "‰Ω†ÊÉ≥Ë¶ÅÂØπËøô‰∏™Â∞èÂèØÁà±ÂÅö‰ªÄ‰πàÔºü" --menu \
        "ÊòæÁ§∫ÁÆ°ÁêÜÂô®ËΩØ‰ª∂ÂåÖÂü∫Á°ÄÈÖçÁΩÆ" 0 50 0 \
        "1" "install/remove ÂÆâË£Ö/Âç∏ËΩΩ" \
        "2" "startÂêØÂä®" \
        "3" "stopÂÅúÊ≠¢" \
        "4" "systemctl enableÂºÄÊú∫Ëá™ÂêØ" \
        "5" "systemctl disableÁ¶ÅÁî®Ëá™ÂêØ" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${INSTALLDESKTOP}" in
    0 | "") standand_desktop_installation ;;
    1)
        beta_features_quick_install
        ;;
    2)
        printf "%s\n" "ÊÇ®ÂèØ‰ª•Ëæì${GREEN}systemctl start ${TMOE_DEPENDENCY_SYSTEMCTL} ${RESET}Êàñ${GREEN}service ${TMOE_DEPENDENCY_SYSTEMCTL} start${RESET}Êù•ÂêØÂä®"
        printf "%s\n" "${GREEN}systemctl start ${TMOE_DEPENDENCY_SYSTEMCTL} ${RESET}"
        printf "%s\n" "ÊåâÂõûËΩ¶ÈîÆÂêØÂä®"
        do_you_want_to_continue
        systemctl start ${TMOE_DEPENDENCY_SYSTEMCTL} || service ${TMOE_DEPENDENCY_SYSTEMCTL} restart
        ;;
    3)
        printf "%s\n" "ÊÇ®ÂèØ‰ª•Ëæì${GREEN}systemctl stop ${TMOE_DEPENDENCY_SYSTEMCTL} ${RESET}Êàñ${GREEN}service ${TMOE_DEPENDENCY_SYSTEMCTL} stop${RESET}Êù•ÂÅúÊ≠¢"
        printf "%s\n" "${GREEN}systemctl stop ${TMOE_DEPENDENCY_SYSTEMCTL} ${RESET}"
        printf "%s\n" "ÊåâÂõûËΩ¶ÈîÆÂÅúÊ≠¢"
        do_you_want_to_continue
        systemctl stop ${TMOE_DEPENDENCY_SYSTEMCTL} || service ${TMOE_DEPENDENCY_SYSTEMCTL} stop
        ;;
    4)
        printf "%s\n" "ÊÇ®ÂèØ‰ª•Ëæì${GREEN}rc-update add ${TMOE_DEPENDENCY_SYSTEMCTL}${RESET}Êàñ${GREEN}systemctl enable ${TMOE_DEPENDENCY_SYSTEMCTL}${RESET}Êù•Ê∑ªÂä†ÂºÄÊú∫Ëá™ÂêØ‰ªªÂä°"
        printf "%s\n" "${GREEN}systemctl enable ${TMOE_DEPENDENCY_SYSTEMCTL} ${RESET}"
        systemctl enable ${TMOE_DEPENDENCY_SYSTEMCTL} || rc-update add ${TMOE_DEPENDENCY_SYSTEMCTL}
        if [ "$?" = "0" ]; then
            printf "%s\n" "Â∑≤Ê∑ªÂä†Ëá≥Ëá™ÂêØ‰ªªÂä°"
        else
            printf "%s\n" "Ê∑ªÂä†Ëá™ÂêØ‰ªªÂä°Â§±Ë¥•"
        fi
        ;;
    5)
        printf "%s\n" "ÊÇ®ÂèØ‰ª•Ëæì${GREEN}rc-update del ${TMOE_DEPENDENCY_SYSTEMCTL}${RESET}Êàñ${GREEN}systemctl disable ${TMOE_DEPENDENCY_SYSTEMCTL}${RESET}Êù•Á¶ÅÊ≠¢ÂºÄÊú∫Ëá™ÂêØ"
        printf "%s\n" "${GREEN}systemctl disable ${TMOE_DEPENDENCY_SYSTEMCTL} ${RESET}"
        systemctl disable ${TMOE_DEPENDENCY_SYSTEMCTL} || rc-update del ${TMOE_DEPENDENCY_SYSTEMCTL}
        if [ "$?" = "0" ]; then
            printf "%s\n" "Â∑≤Á¶ÅÁî®ÂºÄÊú∫Ëá™ÂêØ"
        else
            printf "%s\n" "Á¶ÅÁî®Ëá™ÂêØ‰ªªÂä°Â§±Ë¥•"
        fi
        ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_display_manager_systemctl
}
#######################
auto_select_keyboard_layout() {
    printf '%s\n' 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    printf "%s\n" "keyboard-configuration keyboard-configuration/layout select 'English (US)'" | debconf-set-selections
    echo keyboard-configuration keyboard-configuration/layoutcode select 'us' | debconf-set-selections
}
#################
will_be_installed_for_you() {
    printf "%s\n" "Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£ÖÊÄùÊ∫êÈªë‰Ωì(‰∏≠ÊñáÂ≠ó‰Ωì)„ÄÅ${REMOTE_DESKTOP_SESSION_01}„ÄÅtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ"
}
########################
window_manager_installation() {
    #NON_DBUS=true
    REMOTE_DESKTOP_SESSION_02='x-window-manager'
    BETA_DESKTOP=$(
        whiptail --title "WINDOW MANAGER" --menu \
            "Window managerÁ™óÂè£ÁÆ°ÁêÜÂô®(ÁÆÄÁß∞WM)\nÊòØ‰∏ÄÁßçÊØîÊ°åÈù¢ÁéØÂ¢ÉÊõ¥ËΩªÈáèÂåñÁöÑÂõæÂΩ¢ÁïåÈù¢.\nÊÇ®ÊÉ≥Ë¶ÅÂÆâË£ÖÂì™‰∏™WMÂë¢?ÊÇ®ÂèØ‰ª•ÂêåÊó∂ÂÆâË£ÖÂ§ö‰∏™\nWhich WM do you want to install?" 0 0 0 \
            "0" "Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            "1" "ice(ÊÑèÂú®ÊèêÂçáÊÑüËßÇÂíå‰ΩìÈ™å,ÂÖºÈ°æËΩªÈáèÂíåÂèØÂÆöÂà∂ÊÄß)" \
            "2" "openbox(Âø´ÈÄü,ËΩªÂ∑ß,ÂèØÊâ©Â±ï)" \
            "3" "fvwm(Âº∫Â§ßÁöÑ„ÄÅ‰∏éICCCM2ÂÖºÂÆπÁöÑWM)" \
            "4" "awesome(Âπ≥Èì∫ÂºèWM)" \
            "5" "enlightenment(X11 WM based on EFL)" \
            "6" "fluxbox(È´òÂ∫¶ÂèØÈÖçÁΩÆ,‰ΩéËµÑÊ∫êÂç†Áî®)" \
            "7" "i3(ÊîπËøõÁöÑÂä®ÊÄÅÂπ≥Èì∫WM)" \
            "8" "xmonad(Âü∫‰∫éHaskellÂºÄÂèëÁöÑÂπ≥Èì∫ÂºèWM)" \
            "9" "9wm(X11 WM inspired by Plan 9's rio)" \
            "10" "metacity(ËΩªÈáèÁöÑGTK+ WM)" \
            "11" "twm(Tab WM)" \
            "12" "aewm(ÊûÅÁÆÄ‰∏ª‰πâWM for X11)" \
            "13" "aewm++(ÊúÄÂ∞èÁöÑ WM written in C++)" \
            "14" "afterstep(Êã•ÊúâNEXTSTEPÈ£éÊ†ºÁöÑWM)" \
            "15" "blackbox(WM for X)" \
            "16" "dwm(dynamic window manager)" \
            "17" "mutter(ËΩªÈáèÁöÑGTK+ WM)" \
            "18" "bspwm(Binary space partitioning WM)" \
            "19" "clfswm(Another Common Lisp FullScreen WM)" \
            "20" "ctwm(Claude's Tab WM)" \
            "21" "evilwm(ÊûÅÁÆÄ‰∏ª‰πâWM for X11)" \
            "22" "flwm(Fast Light WM)" \
            "23" "herbstluftwm(manual tiling WM for X11)" \
            "24" "jwm(very small & pureËΩªÈáè,Á∫ØÂáÄ)" \
            "25" "kwin-x11(KDEÈªòËÆ§WM,X11 version)" \
            "26" "lwm(ËΩªÈáèÂåñWM)" \
            "27" "marco(ËΩªÈáèÂåñGTK+ WM for MATE)" \
            "28" "matchbox-window-manager(‰ΩéÈÖçÊú∫Á¶èÈü≥)" \
            "29" "miwm(ÊûÅÁÆÄ‰∏ª‰πâWM with virtual workspaces)" \
            "30" "muffin(ËΩªÈáèÂåñwindow and compositing manager)" \
            "31" "mwm(Motif WM)" \
            "32" "oroborus(a ËΩªÈáèÂåñ themeable WM)" \
            "33" "pekwm(very light)" \
            "34" "ratpoison(keyboard-only WM)" \
            "35" "sapphire(a ÊúÄÂ∞èÁöÑ but configurable X11R6 WM)" \
            "36" "sawfish" \
            "37" "spectrwm(dynamic tiling WM)" \
            "38" "stumpwm(tiling,keyboard driven Common Lisp)" \
            "39" "subtle(grid-based manual tiling)" \
            "40" "sugar-session(Sugar Learning Platform)" \
            "41" "tinywm" \
            "42" "ukwm(ËΩªÈáèÂåñ GTK+ WM)" \
            "43" "vdesk(manages virtual desktops for ÊúÄÂ∞èÁöÑWM)" \
            "44" "vtwm(Virtual Tab WM)" \
            "45" "w9wm(enhanced WM based on 9wm)" \
            "46" "wm2(small,unconfigurable)" \
            "47" "wmaker(NeXTSTEP-like WM for X)" \
            "48" "wmii(ËΩªÈáèÂåñ tabbed and tiled WM)" \
            "49" "xfwm4(xfce4ÈªòËÆ§WM)" \
            "50" "exwm(full-featured tiling X WM for Emacs)" \
            3>&1 1>&2 2>&3
    )
    ##################
    case "${BETA_DESKTOP}" in
    0 | "") standand_desktop_installation ;;
    1)
        DEPENDENCY_01='icewm'
        REMOTE_DESKTOP_SESSION_01='icewm-session'
        REMOTE_DESKTOP_SESSION_02='icewm'
        ;;
    2)
        DEPENDENCY_01='openbox'
        REMOTE_DESKTOP_SESSION_01='openbox-session'
        REMOTE_DESKTOP_SESSION_02='openbox'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='openbox openbox-menu' ;;
        esac
        ;;
    3)
        install_fvwm
        ;;
    4)
        DEPENDENCY_01='awesome'
        REMOTE_DESKTOP_SESSION_01='awesome'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='awesome awesome-extra' ;;
        esac
        ;;
    5)
        DEPENDENCY_01='enlightenment'
        REMOTE_DESKTOP_SESSION_01='enlightenment'
        ;;
    6)
        DEPENDENCY_01='fluxbox'
        REMOTE_DESKTOP_SESSION_01='fluxbox'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='bbmail bbpager bbtime fbpager fluxbox' ;;
        esac
        ;;
    7)
        DEPENDENCY_01='i3'
        REMOTE_DESKTOP_SESSION_01='i3'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='i3 i3-wm i3blocks' ;;
        "alpine") DEPENDENCY_01='i3wm' ;;
        esac
        ;;
    8)
        DEPENDENCY_01='xmonad'
        REMOTE_DESKTOP_SESSION_01='xmonad'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='xmobar dmenu xmonad' ;;
        esac
        ;;
    9)
        DEPENDENCY_01='9wm'
        REMOTE_DESKTOP_SESSION_01='9wm'
        ;;
    10)
        DEPENDENCY_01='metacity'
        REMOTE_DESKTOP_SESSION_01='metacity'
        ;;
    11)
        DEPENDENCY_01='twm'
        REMOTE_DESKTOP_SESSION_01='twm'
        ;;
    12)
        DEPENDENCY_01='aewm'
        REMOTE_DESKTOP_SESSION_01='aewm'
        ;;
    13)
        DEPENDENCY_01='aewm++'
        REMOTE_DESKTOP_SESSION_01='aewm++'
        ;;
    14)
        DEPENDENCY_01='afterstep'
        REMOTE_DESKTOP_SESSION_01='afterstep'
        ;;
    15)
        DEPENDENCY_01='blackbox'
        REMOTE_DESKTOP_SESSION_01='blackbox'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='bbmail bbpager bbtime blackbox' ;;
        esac
        ;;
    16)
        DEPENDENCY_01='dwm'
        REMOTE_DESKTOP_SESSION_01='dwm'
        ;;
    17)
        DEPENDENCY_01='mutter'
        REMOTE_DESKTOP_SESSION_01='mutter'
        ;;
    18)
        DEPENDENCY_01='bspwm'
        REMOTE_DESKTOP_SESSION_01='bspwm'
        ;;
    19)
        DEPENDENCY_01='clfswm'
        REMOTE_DESKTOP_SESSION_01='clfswm'
        ;;
    20)
        DEPENDENCY_01='ctwm'
        REMOTE_DESKTOP_SESSION_01='ctwm'
        ;;
    21)
        DEPENDENCY_01='evilwm'
        REMOTE_DESKTOP_SESSION_01='evilwm'
        ;;
    22)
        DEPENDENCY_01='flwm'
        REMOTE_DESKTOP_SESSION_01='flwm'
        ;;
    23)
        DEPENDENCY_01='herbstluftwm'
        REMOTE_DESKTOP_SESSION_01='herbstluftwm'
        ;;
    24)
        DEPENDENCY_01='jwm'
        REMOTE_DESKTOP_SESSION_01='jwm'
        ;;
    25)
        case "${TMOE_PROOT}" in
        true)
            printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®Â§Ñ‰∫éprootÂÆπÂô®ÁéØÂ¢É‰∏ãÔºåkwinÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏ËøêË°å"
            RETURN_TO_WHERE="window_manager_installation"
            do_you_want_to_continue
            ;;
        esac
        if [ "${LINUX_DISTRO}" = "alpine" ]; then
            DEPENDENCY_01='kwin'
        else
            DEPENDENCY_01='kwin-x11'
        fi
        REMOTE_DESKTOP_SESSION_01='kwin'
        ;;
    26)
        DEPENDENCY_01='lwm'
        REMOTE_DESKTOP_SESSION_01='lwm'
        ;;
    27)
        DEPENDENCY_01='marco'
        REMOTE_DESKTOP_SESSION_01='marco'
        ;;
    28)
        DEPENDENCY_01='matchbox-window-manager'
        REMOTE_DESKTOP_SESSION_01='matchbox-window-manager'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='matchbox-themes-extra matchbox-window-manager' ;;
        esac
        ;;
    29)
        DEPENDENCY_01='miwm'
        REMOTE_DESKTOP_SESSION_01='miwm'
        ;;
    30)
        DEPENDENCY_01='muffin'
        REMOTE_DESKTOP_SESSION_01='muffin'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='murrine-themes muffin' ;;
        esac
        ;;
    31)
        DEPENDENCY_01='mwm'
        REMOTE_DESKTOP_SESSION_01='mwm'
        ;;
    32)
        DEPENDENCY_01='oroborus'
        REMOTE_DESKTOP_SESSION_01='oroborus'
        ;;
    33)
        DEPENDENCY_01='pekwm'
        REMOTE_DESKTOP_SESSION_01='pekwm'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='pekwm-themes pekwm' ;;
        esac
        ;;
    34)
        DEPENDENCY_01='ratpoison'
        REMOTE_DESKTOP_SESSION_01='ratpoison'
        ;;
    35)
        DEPENDENCY_01='sapphire'
        REMOTE_DESKTOP_SESSION_01='sapphire'
        ;;
    36)
        DEPENDENCY_01='sawfish'
        REMOTE_DESKTOP_SESSION_01='sawfish'
        case "${LINUX_DISTRO}" in
        "debian") DEPENDENCY_01='sawfish-themes sawfish' ;;
        esac
        ;;
    37)
        DEPENDENCY_01='spectrwm'
        REMOTE_DESKTOP_SESSION_01='spectrwm'
        ;;
    38)
        DEPENDENCY_01='stumpwm'
        REMOTE_DESKTOP_SESSION_01='stumpwm'
        ;;
    39)
        DEPENDENCY_01='subtle'
        REMOTE_DESKTOP_SESSION_01='subtle'
        ;;
    40)
        DEPENDENCY_01='sugar-session'
        REMOTE_DESKTOP_SESSION_01='sugar-session'
        ;;
    41)
        DEPENDENCY_01='tinywm'
        REMOTE_DESKTOP_SESSION_01='tinywm'
        ;;
    42)
        DEPENDENCY_01='ukwm'
        REMOTE_DESKTOP_SESSION_01='ukwm'
        ;;
    43)
        DEPENDENCY_01='vdesk'
        REMOTE_DESKTOP_SESSION_01='vdesk'
        ;;
    44)
        DEPENDENCY_01='vtwm'
        REMOTE_DESKTOP_SESSION_01='vtwm'
        ;;
    45)
        DEPENDENCY_01='w9wm'
        REMOTE_DESKTOP_SESSION_01='w9wm'
        ;;
    46)
        DEPENDENCY_01='wm2'
        REMOTE_DESKTOP_SESSION_01='wm2'
        ;;
    47)
        DEPENDENCY_01='wmaker'
        REMOTE_DESKTOP_SESSION_01='wmaker'
        ;;
    48)
        DEPENDENCY_01='wmii'
        REMOTE_DESKTOP_SESSION_01='wmii'
        ;;
    49)
        DEPENDENCY_01='xfwm4'
        REMOTE_DESKTOP_SESSION_01='xfwm4'
        ;;
    50)
        DEPENDENCY_01='elpa-exwm'
        DEPENDENCY_02='emacs-gtk'
        REMOTE_DESKTOP_SESSION_01='emacs-gtk'
        ;;
    esac
    #############
    will_be_installed_for_you
    beta_features_quick_install
    configure_vnc_xstartup
    press_enter_to_return
    tmoe_linux_tool_menu
}
##########################
install_fvwm() {
    DEPENDENCY_01='fvwm'
    REMOTE_DESKTOP_SESSION_01='fvwm'
    case "${LINUX_DISTRO}" in
    "debian")
        DEPENDENCY_01='fvwm fvwm-icons'
        #REMOTE_DESKTOP_SESSION_01='fvwm'
        if grep -Eq 'buster|bullseye|bookworm' /etc/os-release; then
            DEPENDENCY_01='fvwm fvwm-icons fvwm-crystal'
        else
            REPO_URL='https://mirrors.bfsu.edu.cn/debian/pool/main/f/fvwm-crystal/'
            GREP_NAME='all'
            grep_deb_comman_model_01
            if [ $(command -v fvwm-crystal) ]; then
                REMOTE_DESKTOP_SESSION_01='fvwm-crystal'
            fi
        fi
        ;;
    esac
}
#################
configure_vnc_xstartup() {
    auto_install_and_configure_fcitx4
    #[[ -d "/var/run/dbus" ]] || mkdir -pv /var/run/dbus
    mkdir -pv /run/dbus /var/lib/dbus/
    ln -svf /run /var/
    #if [ ! -s "/etc/machine-id" ]; then
    if [[ $(command -v dbus-uuidgen) ]]; then
        printf "%s\n" "$(dbus-uuidgen)" >"/etc/machine-id" 2>/dev/null
    else
        printf "%s\n" "0ecb780817003d3342d16adb5ff1dfa9" >"/etc/machine-id"
    fi
    ln -svf "/etc/machine-id" /var/lib/dbus/
    #fi
    case ${LINUX_DISTRO} in
    debian)
        [[ -e /usr/share/doc/fonts-noto-color-emoji ]] || apt install -y fonts-noto-color-emoji
        #ÈáçÂ§çÊ£ÄÊµã
        [[ -e /usr/share/doc/fonts-noto-color-emoji ]] || apt install -y fonts-noto-color-emoji
        ;;
    esac
    mkdir -pv ~/.vnc
    cd ${HOME}/.vnc
    #Áî±‰∫éË∑®Êû∂ÊûÑÊ®°ÊãüÊó∂ÔºåÊ°åÈù¢ÂêØÂä®ËøáÊÖ¢ÔºåÊïÖ‰∏ãÈù¢ÂÖàÂêØÂä®ÁªàÁ´Ø„ÄÇ
    mkdir -pv /etc/X11/xinit /etc/tigervnc
    rm -f ${XSESSION_FILE} 2>/dev/null
    # unset SESSION_MANAGER
    # unset DBUS_SESSION_BUS_ADDRESS
    cat >${XSESSION_FILE} <<-EndOfFile
#!/usr/bin/env bash
#------------------
set_session_env() {
    SESSION_1="${REMOTE_DESKTOP_SESSION_01}"
    SESSION_2="${REMOTE_DESKTOP_SESSION_02}"

    # Adding dbus-launch may cause problems with vscode.
    # 
    DBUS_CMD="dbus-launch"
    
    [[ ! -s /etc/environment ]] || source /etc/environment
    # /run/user/\$UID
    [[ -n \${XDG_RUNTIME_DIR} ]] || export XDG_RUNTIME_DIR=/tmp/runtime-\${UID}
    [[ -e \${XDG_RUNTIME_DIR} ]] || mkdir -pv \${XDG_RUNTIME_DIR}
}

open_terminal() {
    for i in x-terminal-emulator xfce4-terminal konsole qterminal lxterminal gnome-terminal lxterm xterm mate-terminal; do
        if [[ -n \$(command -v \${i}) ]]; then
            \${i} &
            break
        fi
    done
}

start_session() {
    for i in \${SESSION_1} \${SESSION_2}; do
        if [[ -n \$(command -v \$i) ]]; then
            exec \${DBUS_CMD} \${i} \${@}
            break
        fi
    done
}
set_session_env
open_terminal
start_session \${@}
	EndOfFile
    #--exit-with-session
    chmod 777 ${XSESSION_FILE}
    #xrdb \${HOME}/.Xresources
    #dbus-launch startxfce4 &
    #chmod a+rx ./xstartup
    rm ./xstartup 2>/dev/null
    ln -svf ${XSESSION_FILE} ./xstartup
    cp -f ${TMOE_TOOL_DIR}/gui/wsl_pulse_audio ${TMOE_LINUX_DIR}
    congigure_xvnc
    first_configure_startvnc
}
####################
congigure_xvnc() {
    #cp -f ~/.vnc/xstartup /etc/X11/xinit/Xsession
    cp -f ${TMOE_TOOL_DIR}/gui/vncserver-config-defaults /etc/tigervnc/vncserver-config-tmoe
    chmod a+r -v /etc/tigervnc/vncserver-config-tmoe
    if [[ -s "/etc/os-release" ]]; then
        if grep -q '^PRETTY_NAME=' /etc/os-release; then
            GREP_NAME='PRETTY_NAME'
        else
            GREP_NAME='NAME'
        fi
        VNC_DESKTOP_NAME=$(grep "^${GREP_NAME}=" /etc/os-release | head -n 1 | awk -F '=' '{print $2}' | cut -d '"' -f 2 | sed 's@ @-@g;s@$@\_tmoe-linux-vnc@g')
        [[ -z ${VNC_DESKTOP_NAME} ]] || sed -i "s@^desktop=.*@desktop=\'${VNC_DESKTOP_NAME}\'@" /etc/tigervnc/vncserver-config-tmoe
    fi
}
############
configure_x11vnc_remote_desktop_session() {
    cd /usr/local/bin/
    rm -f startx11vnc
    cp -f ${TMOE_TOOL_DIR}/gui/startx11vnc ${TMOE_TOOL_DIR}/gui/x11vncpasswd ./
    # if [ "${NON_DBUS}" != "true" ]; then
    #     enable_dbus_launch
    # fi
    chmod a+rx ./*

    if [ -e "${HOME}/.vnc/passwd" ]; then
        cd ${HOME}/.vnc
        cp -pvf passwd x11passwd
    else
        x11vncpasswd
    fi
    printf "%s\n" "${BLUE}x11vnc${RESET}ÈÖçÁΩÆÂÆåÊàêÔºåÊÇ®ÂèØ‰ª•Ëæì${GREEN}startx11vnc${RESET}Êù•ÈáçÂêØ${BLUE}x11vncÊúçÂä°${RESET},Ëæì${RED}stopvnc${RESET}ÂÅúÊ≠¢„ÄÇ"
    printf "%s\n" "You can type ${GREEN}startx11vnc${RESET} to restart it,type ${RED}stopvnc${RESET} to stop it."
    printf "%s\n" "Ëæì${GREEN}startvnc${RESET}ÂàáÊç¢Âà∞${BLUE}tight/tigervncÊúçÂä°${RESET}„ÄÇ"
    #startx11vnc
}
##########################
install_tmoe_electron_app_pack() {
    if [[ "${AUTO_INSTALL_ELECTRON_APPS}" = true ]]; then
        check_electron
        install_electron_v8
        DEPENDENCY_01=''
        for DEPENDENCY_01 in obsidian electron-netease-cloud-music bilibili listen1 yesplaymusic petal zy-player; do
            download_tmoe_electron_app
        done
    fi
}
##########################
install_kali_linux_tools() {
    if [[ "${AUTO_INSTALL_KALI_TOOLS}" = true ]]; then
        if [[ -z $(command -v nmap) ]]; then
            printf "%s\n" "${GREEN}eatmydata apt ${YELLOW}install -y ${BLUE}nmap${RESET}"
            eatmydata apt install -y nmap || apt install -y nmap
        fi
        if [[ -z $(command -v xhydra) ]]; then
            printf "%s\n" "${GREEN}eatmydata apt ${YELLOW}install -y ${BLUE}hydra-gtk${RESET}"
            eatmydata apt install -y hydra-gtk || apt install -y hydra-gtk || apt install -y xhydra
        fi
        printf "%s\n" "${GREEN}eatmydata apt ${YELLOW}install -y ${BLUE}kali-menu nmap${RESET}"
        eatmydata apt install -y kali-menu || apt-get install -y kali-menu

        [[ -n ${KALI_TOOLS} ]] || KALI_TOOLS="kali-linux-headless"
        printf "%s\n" "${GREEN}eatmydata apt ${YELLOW}install -y ${BLUE}${KALI_TOOLS}${RESET}"
        eatmydata apt install -y ${KALI_TOOLS} || apt-get install -y ${KALI_TOOLS}
    fi
}
###########################
kali_xfce4_extras() {
    if [ ! -e "/usr/share/icons/Windows-10-Icons" ]; then
        printf "%s\n" "${GREEN}apt install ${YELLOW}-y ${BLUE}kali-undercover${RESET}"
        install_kali_undercover
    fi
    eatmydata apt install -y kali-themes-common || apt install -y kali-themes-common
    if [ $(command -v chromium) ]; then
        eatmydata apt install -y chromium-l10n || apt install -y chromium-l10n
        # fix_chromium_root_no_sandbox
    fi
    apt search kali-linux
    dbus-launch xfconf-query -c xsettings -np /Net/IconThemeName -s Windows-10-Icons
}
###################
apt_purge_libfprint() {
    get_ubuntu_desktop_language_pack
    case ${TMOE_PROOT} in
    false) ;;
    true)
        case "${LINUX_DISTRO}" in
        "debian")
            printf "%s\n" "${PURPLE}apt purge ${YELLOW}-y ${BLUE}^libfprint${RESET}"
            apt purge -y ^libfprint
            apt clean
            apt autoclean
            ;;
        esac
        ;;
    esac
}
###################
debian_xfce4_extras() {
    apt_purge_libfprint
    remove_udisk_and_gvfs
    case ${LINUX_DISTRO} in
    debian)
        for i in qt5ct mugshot; do
            if [ ! $(command -v ${i}) ]; then
                printf "%s\n" "${GREEN}apt install ${YELLOW}-y ${BLUE}${i}${RESET}"
                apt install -y ${i}
            fi
        done
        if [ ! -e "/usr/share/themes/Breeze/xfwm4/themerc" ]; then
            #printf "${BLUE}%s${RESET}\n" "apt install -y xfwm4-theme-breeze"
            printf "%s\n" "${GREEN}apt install ${YELLOW}-y ${BLUE}xfwm4-theme-breeze${RESET}"
            apt install -y xfwm4-theme-breeze
        fi
        case ${DEBIAN_DISTRO} in
        kali) kali_xfce4_extras ;;
        esac
        if [ ! $(command -v xfce4-panel-profiles) ]; then
            case ${DEBIAN_DISTRO} in
            ubuntu)
                if ! grep -q 'Bionic' /etc/os-release; then
                    GREP_NAME="xfce4-panel-profiles"
                else
                    GREP_NAME="xfpanel-switch"
                fi
                apt install -y ${GREP_NAME}
                ;;
            *)
                REPO_URL='https://mirrors.bfsu.edu.cn/ubuntu/pool/universe/x/xfce4-panel-profiles/'
                GREP_NAME="xfce4-panel-profiles"
                THE_LATEST_DEB_VERSION="$(curl -L ${REPO_URL} | grep '\.deb' | grep "${GREP_NAME}" | grep -v '1.0.9' | tail -n 1 | cut -d '=' -f 3 | cut -d '"' -f 2)"
                download_deb_comman_model_02
                ;;
            esac
        fi
        ;;
    redhat)
        if [ ! $(command -v qt5ct) ]; then
            printf "%s\n" "${GREEN}dnf install ${YELLOW}--skip-broken -y ${BLUE}qt5ct${RESET}"
            yum install --skip-broken -y qt5ct
        fi
        [[ $(command -v startxfce4) ]] || yum install --skip-broken -y @xfce
        ;;
    arch)
        i=qt5ct
        if [ ! $(command -v ${i}) ]; then
            printf "%s\n" "${GREEN}pacman ${YELLOW}-Sy --noconfirm ${BLUE}${i}${RESET}"
            pacman -Sy --noconfirm qt5ct 2>/dev/null
        fi
        ;;
    esac
    if [ $(command -v qt5ct) ]; then
        [[ -e /etc/environment ]] || touch /etc/environment
        if ! grep -Eq '^[^#]*QT_QPA_PLATFORMTHEME=' /etc/environment; then
            printf "%s\n" "export QT_QPA_PLATFORMTHEME=qt5ct" >>/etc/environment
            printf "%s\n" "/etc/environment :export QT_QPA_PLATFORMTHEME=qt5ct"
            printf "${GREEN}%s${RESET}\n" "/etc/environment:"
            grep -n --color=auto "QT_QPA_PLATFORMTHEME=" /etc/environment
        fi
    fi
    apt_purge_libfprint
}
#############
touch_xfce4_terminal_rc() {
    cat >terminalrc <<-'ENDOFTERMIANLRC'
		[Configuration]
		ColorForeground=#e6e1cf
		ColorBackground=#0f1419
		ColorCursor=#f29718
		ColorPalette=#000000;#ff3333;#b8cc52;#e7c547;#36a3d9;#f07178;#95e6cb;#ffffff;#323232;#ff6565;#eafe84;#fff779;#68d5ff;#ffa3aa;#c7fffd;#ffffff
		MiscAlwaysShowTabs=FALSE
		MiscBell=FALSE
		MiscBellUrgent=FALSE
		MiscBordersDefault=TRUE
		MiscCursorBlinks=FALSE
		MiscCursorShape=TERMINAL_CURSOR_SHAPE_BLOCK
		MiscDefaultGeometry=80x24
		MiscInheritGeometry=FALSE
		MiscMenubarDefault=TRUE
		MiscMouseAutohide=FALSE
		MiscMouseWheelZoom=TRUE
		MiscToolbarDefault=TRUE
		MiscConfirmClose=TRUE
		MiscCycleTabs=TRUE
		MiscTabCloseButtons=TRUE
		MiscTabCloseMiddleClick=TRUE
		MiscTabPosition=GTK_POS_TOP
		MiscHighlightUrls=TRUE
		MiscMiddleClickOpensUri=FALSE
		MiscCopyOnSelect=FALSE
		MiscShowRelaunchDialog=TRUE
		MiscRewrapOnResize=TRUE
		MiscUseShiftArrowsToScroll=FALSE
		MiscSlimTabs=FALSE
		MiscNewTabAdjacent=FALSE
		BackgroundMode=TERMINAL_BACKGROUND_TRANSPARENT
		BackgroundDarkness=0.730000
		ScrollingUnlimited=TRUE
	ENDOFTERMIANLRC
}
###################
xfce4_color_scheme() {
    if [ ! -e "/usr/share/xfce4/terminal/colorschemes/Monokai Remastered.theme" ]; then
        cd /usr/share/xfce4/terminal
        printf "%s\n" "Ê≠£Âú®ÈÖçÁΩÆxfce4ÁªàÁ´ØÈÖçËâ≤..."
        curl -Lo "colorschemes.tar.xz" 'https://gitee.com/mo2/xfce-themes/raw/terminal/colorschemes.tar.xz'
        tar -Jxvf "colorschemes.tar.xz"
    fi

    XFCE_TERMINAL_PATH="${HOME}/.config/xfce4/terminal/"
    if [ ! -e "${XFCE_TERMINAL_PATH}/terminalrc" ]; then
        mkdir -pv ${XFCE_TERMINAL_PATH}
        cd ${XFCE_TERMINAL_PATH}
        touch_xfce4_terminal_rc
    fi

    #/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc
    #/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc
    #/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc
    cd ${XFCE_TERMINAL_PATH}
    if ! grep -q '^ColorPalette' terminalrc; then
        sed -i '/ColorPalette=/d' terminalrc
        sed -i '/ColorForeground=/d' terminalrc
        sed -i '/ColorBackground=/d' terminalrc
        cat >>terminalrc <<-'EndofAyu'
			ColorPalette=#000000;#ff3333;#b8cc52;#e7c547;#36a3d9;#f07178;#95e6cb;#ffffff;#323232;#ff6565;#eafe84;#fff779;#68d5ff;#ffa3aa;#c7fffd;#ffffff
			ColorForeground=#e6e1cf
			ColorBackground=#0f1419
		EndofAyu
    fi
    : <<\EOF
    if ! grep -q '^FontName' terminalrc; then
        sed -i '/FontName=/d' terminalrc
        if [ -e "/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc" ]; then
            sed -i '$ a\FontName=Noto Sans Mono CJK SC Bold Italic 12' terminalrc
        elif [ -e "/usr/share/fonts/noto-cjk/NotoSansCJK-Bold.ttc" ]; then
            sed -i '$ a\FontName=Noto Sans Mono CJK SC Bold 12' terminalrc
        elif [ -e "/usr/share/fonts/google-noto-cjk/NotoSansCJK-Bold.ttc" ]; then
            sed -i '$ a\FontName=Noto Sans Mono CJK SC Bold 13' terminalrc
        fi
    fi
EOF
    if ! grep -q '^FontName' terminalrc; then
        if [[ -e /usr/share/fonts/truetype/iosevka/Iosevka-Term-Mono.ttf ]]; then
            sed -i '$ a\FontName=Iosevka Term Bold 12' terminalrc
        fi
        if [ -e "/usr/share/fonts/noto-cjk/NotoSansCJK-Bold.ttc" ]; then
            sed -i '/FontName=/d' terminalrc
            sed -i '$ a\FontName=Noto Sans Mono CJK SC Bold 12' terminalrc
        fi
    fi
}
##################
xfce_warning() {
    ICON_URL='https://gitee.com/ak2/icons/raw/master/xfce4.jpg'
    ICON_FILE_NAME='xfce4.jpg'
    download_and_cat_icon_img
    cat <<-'ENDofTable'
    xfce4Ê°åÈù¢ÊîØÊåÅË°®Ê†º 
    ‰ª•‰∏ãÊï∞ÊçÆ‰ªÖ‰ª£Ë°®tmoe toolsÊâÄÂÆâË£ÖÁöÑxfceÔºåÊÇ®ÂèØËá™Ë°åÁºñËØëÊ∫ê‰ª£Á†ÅÔºåÂπ∂‰øÆÂ§çbug„ÄÇ
  ‚ïî‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶
  ‚ïë   ‚ïëvnc/xserver ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë   ‚ïë----------- ‚ïë x11vnc ‚ïëtigervnc‚ïë xserver ‚ïë
  ‚ïë   ‚ïëSystem      ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë 1 ‚ïë Debian,Kali‚ïë  ‚úì     ‚ïë    ‚úì   ‚ïë   ‚úì     ‚ïë
  ‚ïë   ‚ïë Ubuntu     ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïëFedora      ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 2 ‚ïëCentOS      ‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   ‚úì     ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïëArchLinux   ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 3 ‚ïëManjaro     ‚ïë   ‚úì    ‚ïë    ‚úì   ‚ïë    ‚úì    ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïë Alpine     ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 4 ‚ïë            ‚ïë  ?     ‚ïë   ?    ‚ïë   ‚úì     ‚ïë 
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïë  Void      ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 5 ‚ïë            ‚ïë  ?     ‚ïë   ‚úì    ‚ïë   ‚úì     ‚ïë 
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïëOpenSUSE    ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 6 ‚ïë            ‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   ‚úì     ‚ïë

ENDofTable
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅxfce4„ÄÅxfce4-terminal„ÄÅxfce4-goodies„ÄÅxfce4-panel-profiles„ÄÅqt5ct„ÄÅxfwm4-theme-breeze„ÄÅmugshotÂíåtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    do_you_want_to_continue
}
##########
git_clone_kali_themes_common() {
    check_update_icon_caches_sh
    if [ ! -e "/usr/share/desktop-base/kali-theme" ]; then
        TEMP_FOLDER="/tmp/.KALI_THEME_COMMON_TEMP_FOLDER"

        git clone \
            --depth=1 \
            https://gitee.com/ak2/kali-theme.git \
            ${TEMP_FOLDER}

        tar -pJxvf ${TEMP_FOLDER}/kali-theme.tar.xz -C /
        rm -rvf ${TEMP_FOLDER}
        dbus-launch xfconf-query -c xsettings -t string -np /Gtk/CursorThemeName -s "Breeze-Adapta-Cursor" 2>/dev/null
        ICON_NAME='Flat-Remix-Blue-Dark /usr/share/icons/Flat-Remix-Blue-Light /usr/share/icons/desktop-base'

        update-icon-caches \
            /usr/share/icons/"${ICON_NAME}" \
            2>/dev/null &
    fi
}
##########
do_you_want_to_install_electron_apps_zh() {
    case ${LINUX_DISTRO} in
    alpine) ;;
    *)
        if [[ ! $(command -v electron) ]]; then
            if (whiptail --title "Electron apps" --yesno 'ËØ∑ÈóÆÊÇ®ÊòØÂê¶ÈúÄË¶ÅÂÆâË£ÖÂºÄÂèëËÄÖÊé®ËçêÁöÑelectronËΩØ‰ª∂ÂåÖÂêàÈõÜ?\nËØ•ÂêàÈõÜÂåÖÂê´ÂìîÂì©ÂìîÂì©ÂÆ¢Êà∑Á´Ø,obsidian(markdownÁºñËæëÂô®),ÁΩëÊòì‰∫ëÈü≥‰πêÁ¨¨‰∏âÊñπelectronÁâà,listen1,\nYesPlayMusic,petalÂíåzy-player\nÊÇ®ÂèØ‰ª•ÈÄâÊã©NOË∑≥Ëøá,‰πãÂêéÂèØ‰ª•ÂçïÁã¨ÂÆâË£Öelectron app.' 0 0); then
                AUTO_INSTALL_ELECTRON_APPS=true
            fi
        fi
        ;;
    esac
}
#########
do_you_want_to_install_electron_apps_en() {
    case ${LINUX_DISTRO} in
    alpine) ;;
    *)
        if [[ ! $(command -v electron) ]]; then
            if (whiptail --title "Electron apps" --yesno 'Do you want to install electron apps pack?\nIt includes obsidian(markdown editor),electron-netease-cloud-music,bilibili,listen1,\nYesPlayMusic,petal & zy-player.' 0 0); then
                AUTO_INSTALL_ELECTRON_APPS=true
            fi
        fi
        ;;
    esac
}
##########
do_you_want_to_install_fcitx_pinyin() {
    case ${TMOE_MENU_LANG} in
    zh_*UTF-8)
        case "${LINUX_DISTRO}" in
        "debian" | "arch")
            #fedora proot‰∏çË¶ÅËá™Âä®ÈÖçÁΩÆfcitx
            if [[ ! $(command -v fcitx) && ! $(command -v fcitx5) ]]; then
                if (whiptail --title "input method" --yesno 'Ê™¢Ê∏¨Âà∞ÊÇ®Áï∂ÂâçÁöÑË™ûË®ÄÁí∞Â¢ÉÁà≤‰∏≠ÊñáÔºåÊòØÂê¶ÈúÄË¶ÅÂÆâË£ù‰∏≠ÊñáËº∏ÂÖ•Ê≥ï?\nDo you want to install fcitx4?\nÂÆâË£ùÂÆåÊàêÂæå,Âú®Ê°åÈù¢Áí∞Â¢É‰∏ãÊåâCtrl+Á©∫Ê†ºÂàáÊèõËº∏ÂÖ•Ê≥ï\n‰Ω†‰∫¶ÂèØ‰ª•ÈÅ∏ÊìáNOË∑≥ÈÅé,‰πãÂæåÂèØ‰ª•ÂñÆÁç®ÂÆâË£ùfcitx5' 0 0); then
                    AUTO_INSTALL_FCITX4=true
                fi
            fi
            ;;
        esac
        ;;
    esac
}
do_you_want_to_install_fcitx4() {
    [[ ${WINDOWS_DISTRO} != WSL ]] || do_you_want_to_install_fcitx_pinyin
    case ${TMOE_MENU_LANG} in
    zh_*UTF-8) do_you_want_to_install_electron_apps_zh ;;
    *) do_you_want_to_install_electron_apps_en ;;
    esac
    do_you_want_to_install_chromium
    do_you_want_to_install_kali_tools
}
#########
do_you_want_to_install_chromium_00() {
    if (whiptail --title "CHROMIUM-BROWSER" --yesno 'Do you want to install Google Chromium browser?' 0 0); then
        AUTO_INSTALL_CHROMIUM=true
    fi
}
do_you_want_to_install_chromium() {
    if [[ ! $(command -v chromium) && ! $(command -v chromium-browser) && ! $(command -v google-chrome) ]]; then
        case "${DEBIAN_DISTRO}" in
        ubuntu)
            case ${TMOE_MENU_LANG} in
            zh_*UTF-8)
                if grep -Eq 'Focal|Bionic|Eoan Ermine' /etc/os-release; then
                    do_you_want_to_install_chromium_00
                fi
                ;;
            *) do_you_want_to_install_chromium_00 ;;
            esac
            ;;
        *) do_you_want_to_install_chromium_00 ;;
        esac
    fi
}
########
select_kali_tools() {
    KALI_MENU=$(
        whiptail --title "KALI LINUX TOOLS" --menu "Which kali-suite do you want to install?" 0 0 0 \
            "1" "arm(ARM devices default packages)" \
            "2" "None (skip installation)" \
            "3" "core (core packages)" \
            "4" "default (headless and GUI)" \
            "5" "everything (every tool)" \
            "6" "headless" \
            "7" "large(extended default tool selection)" \
            "8" "nethunter" \
            3>&1 1>&2 2>&3
    )
    ###########
    AUTO_INSTALL_KALI_TOOLS=true
    case "${KALI_MENU}" in
    0 | "" | 2) AUTO_INSTALL_KALI_TOOLS=false ;;
    1) KALI_TOOLS="kali-linux-arm" ;;
    3) KALI_TOOLS="kali-linux-core" ;;
    4) KALI_TOOLS="kali-linux-default" ;;
    5) KALI_TOOLS="kali-linux-everything" ;;
    6) KALI_TOOLS="kali-linux-headless" ;;
    7) KALI_TOOLS="kali-linux-large" ;;
    8) KALI_TOOLS="kali-linux-nethunter" ;;
    esac
}
do_you_want_to_install_kali_tools() {
    case "${LINUX_DISTRO}" in
    "debian")
        case "${DEBIAN_DISTRO}" in
        "kali")
            select_kali_tools
            # if (whiptail --title "KALI LINUX TOOLS" --yesno 'Do you want to install kali-linux tools?' 0 0); then
            #     AUTO_INSTALL_KALI_TOOLS=true
            # fi
            ;;
        esac
        ;;
    esac
}
auto_install_and_configure_fcitx4() {
    case ${LINUX_DISTRO} in
    debian)
        case ${UBUNTU_DESKTOP} in
        true)
            printf "%s\n" "apt install -y \$(check-language-support)"
            [[ -e ${TMOE_LINUX_DIR}/check-ubuntu-language-support.txt ]] || printf "%s\n" $(check-language-support) >${TMOE_LINUX_DIR}/check-ubuntu-language-support.txt
            apt install -y $(check-language-support)
            ;;
        esac
        ;;
    esac
    #Âú®ÂÆâË£ùÂÆåÊ°åÈù¢ÂæåÂÜçÈÖçÁΩÆËº∏ÂÖ•Ê≥ï
    [[ ${AUTO_INSTALL_FCITX4} != true ]] || source ${TMOE_TOOL_DIR}/app/input-method --auto-install-fcitx4
    install_tmoe_electron_app_pack
    install_kali_linux_tools
    if [[ ${AUTO_INSTALL_VSCODE} = true ]]; then
        source ${TMOE_TOOL_DIR}/code/vscode --auto-install-vscode
    fi
    [[ ${AUTO_INSTALL_CHROMIUM} != true ]] || source ${TMOE_TOOL_DIR}/app/browser --auto-install-chromium
}
#######
fix_mlocate() {
    #mkdir -pv /var/lib/mlocate/
    #touch /var/lib/mlocate/mlocate.db /run/mlocate.daily.lock
    if [ ! $(command -v mlocate) ]; then
        CUR=$(pwd)
        TEMP_DIR='/tmp/.MLOCATE_TEMP_FOLDER'
        mkdir -pv ${TEMP_DIR}
        cd ${TEMP_DIR}
        apt-get download mlocate
        dpkg --unpack ./mlocate*.deb
        cd ${CUR}
        rm -rvf ${TEMP_DIR}
        cp -f ${TMOE_TOOL_DIR}/gui/config/mlocate.postinst /var/lib/dpkg/info/
        chmod a+rx -v /var/lib/dpkg/info/mlocate.postinst
        apt-mark hold mlocate
        #sed -i 's@flock@#&@g;s@/usr/bin/updatedb.mlocate || true@#&@' /var/lib/dpkg/info/mlocate.postinst
    fi
}
get_ubuntu_version() {
    if [[ ! -e /usr/lib/os-release ]]; then
        return 1
    fi
    local release_info
    release_info=$(</usr/lib/os-release)
    case $release_info in
    *=focal* | *=bionic* | *=xenial* | *=impish*) fix_mlocate ;;
    *) return 0 ;;
    esac
}
choose_xfce_or_xubuntu() {
    case ${DEBIAN_DISTRO} in
    ubuntu)
        if (whiptail --title "Xfce or Xubuntu-desktop" --yes-button "xfce" --no-button "xubuntu" --yesno 'The former is more streamlined, and the latter includes some extra software of xubuntu.\nÂâçËÄÖ‰∏∫ÊôÆÈÄöxfce,ÂêéËÄÖ‰∏∫xubuntu' 0 0); then
            printf ""
        else
            UBUNTU_DESKTOP=true
            DEPENDENCY_01="xubuntu-desktop"
            case ${TMOE_PROOT} in
            false) ;;
            true) get_ubuntu_version ;;
            esac
        fi
        ;;
    esac
}
#############
install_xfce4_lite_desktop() {
    if [ $(command -v apt-cache) ]; then
        printf "%s\n" "${GREEN}apt ${YELLOW}depends ${BLUE}xfce4${RESET}"
        apt-cache depends xfce4
    elif [ $(command -v pacman) ]; then
        printf "%s\n" "${GREEN}pacman ${YELLOW}-Si ${BLUE}xfdesktop${RESET}"
        pacman -Si xfdesktop
    elif [ $(command -v apk) ]; then
        printf "%s\n" "${GREEN}apk ${YELLOW}info ${BLUE}xfce4${RESET}"
        apk info xfce4
    fi
    printf "%s\n" "Do you want to install(--no-install-recommends) xfce?"
    do_you_want_to_continue
    REMOTE_DESKTOP_SESSION_01='startxfce4'
    REMOTE_DESKTOP_SESSION_02='xfce4-session'
    DEPENDENCY_01="xfce4"
    case "${LINUX_DISTRO}" in
    "debian")
        DEPENDENCY_01="--no-install-recommends xfce4-panel xfwm4 xfdesktop4 thunar xfce4-terminal tango-icon-theme xfce4-session"
        #case ${DEBIAN_DISTRO} in
        #ubuntu) DEPENDENCY_01="--no-install-recommends xfce4-panel xfwm4 xfdesktop4 thunar xterm adwaita-icon-theme-full xfce4-session" ;;
        #esac
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
        ##############
    "redhat")
        DEPENDENCY_01='@xfce'
        rm -v /etc/xdg/autostart/xfce-polkit.desktop 2>/dev/null
        ;;
        ##################
    "arch") DEPENDENCY_01="xfce4" ;;
        ##################
    "void") DEPENDENCY_01="xfce4" ;;
        #################
    "gentoo")
        dispatch-conf
        etc-update
        DEPENDENCY_01="xfce4-meta"
        ;;
        #################
    "suse") DEPENDENCY_01="patterns-xfce-xfce" ;;
        ###############
    "solus") printf "ERROR!Êú¨Â∑•ÂÖ∑Êú™ÈÄÇÈÖçsolus„ÄÇ\n" ;;
    "alpine") DEPENDENCY_01="xfce4" ;;
    esac
    ##################
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        beta_features_quick_install
    else
        different_distro_software_install
    fi
    XFCE_PANEL_CONFIG="${HOME}/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml"
    if [[ -e ${XFCE_PANEL_CONFIG} ]]; then
        mv -vf ${XFCE_PANEL_CONFIG} ${XFCE_PANEL_CONFIG}.bak
    fi
    ####################
    case ${TMOE_PROOT} in
    true)
        local BIN="xfce4-power-manager"
        local BIN_2="xfce4-screensaver"

        case "${LINUX_DISTRO}" in
        "debian")
            #Ê≠§Â§Ñ‰∏çËÉΩÊòØcommmand -v kali-undercover
            if [[ ! -e /usr/bin/kali-undercover ]]; then
                printf "%s\n" "${GREEN}apt ${PURPLE}autopurge ${YELLOW}-y ${BLUE}^${BIN} ${BIN_2}${RESET}"
                apt autoremove --purge -y ^"${BIN}"
                apt purge -y "${BIN_2}"
            fi
            ;;
        arch)
            for i in "${BIN}" "${BIN_2}"; do
                pacman -Rsc --noconfirm "$i"
            done
            ;;
        redhat)
            for i in "${BIN}" "${BIN_2}"; do
                dnf remove -y "$i"
            done
            ;;
        alpine)
            for i in "${BIN}" "${BIN_2}"; do
                apk del "$i"
            done
            ;;
        suse) zypper rm -y "${BIN}" "${BIN_2}" ;;
        void) xbps-remove -R -y "${BIN}" "${BIN_2}" ;;
        *)
            printf "%s\n" "${PURPLE}${TMOE_REMOVAL_COMMAND} ${BLUE}xfce4-power-manager${RESET}"
            ${TMOE_REMOVAL_COMMAND} xfce4-power-manager
            ;;
        esac
        if [[ -e /usr/bin/$BIN ]]; then
            rm -fv /usr/bin/"${BIN}"*
        fi
        ;;
    esac
    configure_vnc_xstartup
}
install_xfce4_desktop() {
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        xfce_warning
        do_you_want_to_install_fcitx4
    fi
    REMOTE_DESKTOP_SESSION_01='xfce4-session'
    REMOTE_DESKTOP_SESSION_02='startxfce4'
    DEPENDENCY_01="xfce4"
    case "${LINUX_DISTRO}" in
    "debian")
        DEPENDENCY_01="xfce4 xfce4-goodies xfce4-terminal"
        if grep -q 'Linux Mint' '/etc/issue'; then
            DEPENDENCY_01="mint-meta-xfce mint-meta-core mint-artwork"
        fi
        if [[ ${AUTO_INSTALL_GUI} != true ]]; then
            choose_xfce_or_xubuntu
        fi
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
        ##############
    "redhat")
        DEPENDENCY_01='@xfce xfce*-plugin xfce4-panel-profiles'
        rm -v /etc/xdg/autostart/xfce-polkit.desktop 2>/dev/null
        ;;
        ##################
    "arch") DEPENDENCY_01="xfce4 xfce4-terminal xfce4-goodies" ;;
        ##################
    "void") DEPENDENCY_01="xfce4" ;;
        #################
    "gentoo")
        dispatch-conf
        etc-update
        DEPENDENCY_01="xfce4-meta x11-terms/xfce4-terminal"
        ;;
        #################
    "suse") DEPENDENCY_01="patterns-xfce-xfce xfce4-terminal" ;;
    "solus") printf "ERROR!Êú¨Â∑•ÂÖ∑Êú™ÈÄÇÈÖçsolus„ÄÇ\n" ;;
        ###############
    "alpine") DEPENDENCY_01="faenza-icon-theme xfce4-whiskermenu-plugin xfce4 xfce4-terminal" ;;
    esac
    ##################
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        beta_features_quick_install
    else
        different_distro_software_install
    fi
    ####################
    case ${LINUX_DISTRO} in
    alpine) ;;
    *) git_clone_kali_themes_common ;;
    esac
    debian_xfce4_extras
    if [ ! -e "/usr/share/icons/Breeze-Adapta-Cursor" ]; then
        download_arch_breeze_adapta_cursor_theme
    fi
    mkdir -pv ${HOME}/.config/xfce4/xfconf/xfce-perchannel-xml/
    cd ${HOME}/.config/xfce4/xfconf/xfce-perchannel-xml/
    if [ ! -e "xfce4-desktop.xml" ]; then
        modify_the_default_xfce_wallpaper
    fi
    dbus-launch xfconf-query -c xsettings -t string -np /Gtk/CursorThemeName -s "Breeze-Adapta-Cursor" 2>/dev/null

    #XFCE_WORK_SPACE_01=$(cat xfce4-desktop.xml | grep -n workspace1 | awk '{print $1}' | cut -d ':' -f 1)
    #if [ "$(cat xfce4-desktop.xml | sed -n 1,${XFCE_WORK_SPACE_01}p | grep -E 'xfce-stripes|xfce-blue|xfce-teal|0.svg')" ]; then
    #	modify_the_default_xfce_wallpaper
    #fi
    if [ ! -e "${HOME}/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml" ]; then
        auto_configure_xfce4_panel
    fi
    #xmlÈÖçÁΩÆ‰∏çÂåÖÂê´base-directory
    #################
    if [ "${LINUX_DISTRO}" = "alpine" ]; then
        dbus-launch xfconf-query -c xsettings -np /Net/IconThemeName -s Faenza
    else
        #if [ ! -e "/usr/share/desktop-base/kali-theme" ]; then
        #    download_kali_themes_common
        #fi
        if [ "${DEBIAN_DISTRO}" != "kali" ]; then
            dbus-launch xfconf-query -c xsettings -np /Net/IconThemeName -s Flat-Remix-Blue-Light
        fi
    fi
    ##############
    xfce4_color_scheme
    dbus-launch xfconf-query -c xfwm4 -t int -np /general/workspace_count -s 2
    #########
    case ${TMOE_PROOT} in
    true)
        case "${LINUX_DISTRO}" in
        "debian")
            #Ê≠§Â§Ñ‰∏çËÉΩÊòØcommmand -v kali-undercover
            if [[ ! -e /usr/bin/kali-undercover ]]; then
                printf "%s\n" "${GREEN}apt ${PURPLE}autopurge ${YELLOW}-y ${BLUE}^xfce4-power-manager${RESET}"
                apt autoremove --purge -y ^xfce4-power-manager
            fi
            ;;
        arch) pacman -Rsc --noconfirm xfce4-power-manager ;;
        redhat) dnf remove -y xfce4-power-manager ;;
        alpine) apk del xfce4-power-manager ;;
        suse) zypper rm -y xfce4-power-manager ;;
        void) xbps-remove -R -y xfce4-power-manager ;;
        *)
            printf "%s\n" "${PURPLE}${TMOE_REMOVAL_COMMAND} ${BLUE}xfce4-power-manager${RESET}"
            ${TMOE_REMOVAL_COMMAND} xfce4-power-manager
            ;;
        esac
        ;;
    esac
    configure_vnc_xstartup
}
###############
xfce_papirus_icon_theme() {
    if [ ! -e "/usr/share/icons/Papirus" ]; then
        download_papirus_icon_theme
        if [ "${DEBIAN_DISTRO}" != "kali" ]; then
            dbus-launch xfconf-query -c xsettings -np /Net/IconThemeName -s Papirus
        fi
    fi
}
###########
create_xfce4_desktop_wallpaper_config() {
    cd ${HOME}/.config/xfce4/xfconf/xfce-perchannel-xml
    cat >xfce4-desktop.xml <<-'EOF'
		<?xml version="1.0" encoding="UTF-8"?>

		<channel name="xfce4-desktop" version="1.0">
		    <property name="backdrop" type="empty">
		        <property name="screen0" type="empty">
		            <property name="monitor0" type="empty">
		                <property name="brightness" type="empty"/>
		                <property name="color1" type="empty"/>
		                <property name="color2" type="empty"/>
		                <property name="color-style" type="empty"/>
		                <property name="image-path" type="empty"/>
		                <property name="image-show" type="empty"/>
		                <property name="last-image" type="empty"/>
		                <property name="last-single-image" type="empty"/>
		                <property name="workspace0" type="empty">
		                    <property name="last-image" type="string" value="/usr/share/backgrounds/xfce/xfce-stripes.png"/>
		                    <property name="backdrop-cycle-enable" type="bool" value="true"/>
		                    <property name="backdrop-cycle-random-order" type="bool" value="true"/>
		                </property>
		            </property>
		            <property name="monitor1" type="empty">
		                <property name="brightness" type="empty"/>
		                <property name="color1" type="empty"/>
		                <property name="color2" type="empty"/>
		                <property name="color-style" type="empty"/>
		                <property name="image-path" type="empty"/>
		                <property name="image-show" type="empty"/>
		                <property name="last-image" type="empty"/>
		                <property name="last-single-image" type="empty"/>
		            </property>
		            <property name="monitorVNC-0" type="empty">
		                <property name="workspace0" type="empty">
		                    <property name="last-image" type="string" value="/usr/share/backgrounds/xfce/xfce-stripes.png"/>
		                    <property name="backdrop-cycle-enable" type="bool" value="true"/>
		                    <property name="backdrop-cycle-random-order" type="bool" value="true"/>
		                </property>
		            </property>
		            <property name="monitorrdp0" type="empty">
		                <property name="workspace0" type="empty">
		                    <property name="color-style" type="empty"/>
		                    <property name="image-style" type="empty"/>
		                    <property name="last-image" type="string" value="/usr/share/backgrounds/xfce/xfce-stripes.png"/>
		                    <property name="backdrop-cycle-enable" type="bool" value="true"/>
		                    <property name="backdrop-cycle-random-order" type="bool" value="true"/>
		                </property>
		            </property>
		            <property name="monitorscreen" type="empty">
		                <property name="workspace0" type="empty">
		                    <property name="color-style" type="empty"/>
		                    <property name="image-style" type="empty"/>
		                    <property name="last-image" type="string" value="/usr/share/backgrounds/xfce/xfce-stripes.png"/>
		                    <property name="backdrop-cycle-enable" type="bool" value="true"/>
		                    <property name="backdrop-cycle-random-order" type="bool" value="true"/>
		                </property>
		            </property>
		        </property>
		    </property>
		</channel>
	EOF
    cat xfce4-desktop.xml
}
#############
modify_xfce_vnc0_wallpaper() {
    #if [ "${LINUX_DISTRO}" = "debian" ]; then
    #if [ "${VNC_SERVER_BIN}" = "tigervnc" ]; then
    #	dbus-launch xfconf-query -c xfce4-desktop -t string -np /backdrop/screen0/monitorVNC-0/workspace0/last-image -s "${WALLPAPER_FILE}"
    #else
    #	dbus-launch xfconf-query -c xfce4-desktop -t string -np /backdrop/screen0/monitor0/workspace0/last-image -s "${WALLPAPER_FILE}"
    #fi
    create_xfce4_desktop_wallpaper_config
    sed -i "s@/usr/share/backgrounds/xfce/xfce-stripes.png@${WALLPAPER_FILE}@" xfce4-desktop.xml
    #else
    #	dbus-launch xfconf-query -c xfce4-desktop -t string -np /backdrop/screen0/monitorVNC-0/workspace0/last-image -s "${WALLPAPER_FILE}"
    #fi
}
##################
debian_download_mint_wallpaper() {
    SET_MINT_AS_WALLPAPER=true
    download_mint_backgrounds
}
#############
debian_xfce_wallpaper() {
    if [ ! -e "${WALLPAPER_FILE}" ]; then
        #debian_download_xubuntu_xenial_wallpaper
        printf "%s\n" "Â£ÅÁ∫∏ÂåÖÂ∞Ü‰øùÂ≠òËá≥/usr/share/backgrounds"
        debian_download_mint_wallpaper
    fi
    modify_xfce_vnc0_wallpaper
}
#################
check_mate_wallpaper_pack() {
    if [ ! -e "${WALLPAPER_FILE}" ]; then
        printf "%s\n" "Â£ÅÁ∫∏ÂåÖÂ∞Ü‰øùÂ≠òËá≥/usr/share/backgrounds"
        debian_download_ubuntu_mate_wallpaper
    fi
    modify_xfce_vnc0_wallpaper
}
###############
if_exists_other_debian_distro_wallpaper() {
    if [ -e "${WALLPAPER_FILE}" ]; then
        modify_xfce_vnc0_wallpaper
    else
        debian_xfce_wallpaper
    fi
}
###############
linuxmint_serena_wallpaper_var() {
    MINT_CODE='serena'
    WALLPAPER_FILE='/usr/share/backgrounds/rlukeman_skye.jpg'
}
linuxmint_sonya_wallpaper_var() {
    MINT_CODE='sonya'
    WALLPAPER_FILE='/usr/share/backgrounds/shontz_valley.jpg'
}
linuxmint_sylvia_wallpaper_var() {
    MINT_CODE='sylvia'
    WALLPAPER_FILE='/usr/share/backgrounds/thomasb_glass_ball.jpg'
}
linuxmint_tara_wallpaper_var() {
    MINT_CODE='tara'
    WALLPAPER_FILE='/usr/share/backgrounds/jowens_kauai.jpg'
}
linuxmint_tessa_wallpaper_var() {
    MINT_CODE='tessa'
    WALLPAPER_FILE="/usr/share/backgrounds/dking_autumn_in_japan.jpg"
}
linuxmint_tina_wallpaper_var() {
    MINT_CODE="tina"
    WALLPAPER_FILE='/usr/share/backgrounds/adeole_yosemite.jpg'
}
linuxmint_tricia_wallpaper_var() {
    MINT_CODE="tricia"
    WALLPAPER_FILE='/usr/share/backgrounds/amarttinen_argentina.jpg'
}
linuxmint_ulyana_wallpaper_var() {
    MINT_CODE="ulyana"
    WALLPAPER_FILE='/usr/share/backgrounds/dmcquade_whitsundays.jpg'
}
linuxmint_ulyssa_wallpaper_var() {
    MINT_CODE="ulyana"
    WALLPAPER_FILE='/usr/share/backgrounds/sumstattd_machu_picchu.jpg'
}
linuxmint_sarah_wallpaper_var() {
    MINT_CODE="sarah"
    WALLPAPER_FILE='/usr/share/backgrounds/bartosova_aurora.jpg'
}
###########
random_wallpaper_pack_01() {
    case "$((RANDOM % 24 + 1))" in
    [6-9]) linuxmint_tina_wallpaper_var ;;
    [10-12]) linuxmint_tricia_wallpaper_var ;;
    13 | 14) linuxmint_tessa_wallpaper_var ;;
    15 | 16) linuxmint_tara_wallpaper_var ;;
    17) linuxmint_serena_wallpaper_var ;;
    18) linuxmint_sonya_wallpaper_var ;;
    19) linuxmint_sylvia_wallpaper_var ;;
    20) linuxmint_sarah_wallpaper_var ;;
    [21-24]) linuxmint_ulyssa_wallpaper_var ;;
    [1-5] | *) linuxmint_ulyana_wallpaper_var ;;
    esac
}
############
random_wallpaper_pack_02() {
    case "$((RANDOM % 26 + 1))" in
    [6-9]) linuxmint_tara_wallpaper_var ;;
    [10-12]) linuxmint_tricia_wallpaper_var ;;
    13 | 14) linuxmint_sylvia_wallpaper_var ;;
    15 | 16) linuxmint_serena_wallpaper_var ;;
    17 | 18) linuxmint_sonya_wallpaper_var ;;
    19) linuxmint_tina_wallpaper_var ;;
    20) linuxmint_ulyana_wallpaper_var ;;
    21 | 22) linuxmint_sarah_wallpaper_var ;;
    [23-26]) linuxmint_ulyssa_wallpaper_var ;;
    [1-5] | *) linuxmint_tessa_wallpaper_var ;;
    esac
}
############
random_wallpaper_pack_03() {
    case "$((RANDOM % 24 + 1))" in
    [6-9]) linuxmint_ulyana_wallpaper_var ;;
    [10-12]) linuxmint_tina_wallpaper_var ;;
    13 | 14) linuxmint_tessa_wallpaper_var ;;
    15 | 16) linuxmint_tara_wallpaper_var ;;
    17) linuxmint_serena_wallpaper_var ;;
    18) linuxmint_sonya_wallpaper_var ;;
    19) linuxmint_sylvia_wallpaper_var ;;
    20) linuxmint_sarah_wallpaper_var ;;
    [21-24]) linuxmint_ulyssa_wallpaper_var ;;
    [1-5] | *) linuxmint_tricia_wallpaper_var ;;
    esac
}
############
random_wallpaper_pack_04() {
    case "$((RANDOM % 24 + 1))" in
    [4-6]) linuxmint_tina_wallpaper_var ;;
    [7-9]) linuxmint_tricia_wallpaper_var ;;
    [10-12]) linuxmint_tessa_wallpaper_var ;;
    [13-15]) linuxmint_tara_wallpaper_var ;;
    [16-17]) linuxmint_serena_wallpaper_var ;;
    18) linuxmint_sonya_wallpaper_var ;;
    19) linuxmint_sylvia_wallpaper_var ;;
    20) linuxmint_sarah_wallpaper_var ;;
    [21-24]) linuxmint_ulyssa_wallpaper_var ;;
    [1-3] | *) linuxmint_ulyana_wallpaper_var ;;
    esac
}
############
random_wallpaper_pack_05() {
    RANDOM_WALLPAPER_PACK="$((RANDOM % 31 + 1))"
    case ${RANDOM_WALLPAPER_PACK} in
    [6-9]) linuxmint_sonya_wallpaper_var ;;
    [10-12]) linuxmint_sarah_wallpaper_var ;;
    13 | 14) linuxmint_sylvia_wallpaper_var ;;
    15 | 16) linuxmint_tessa_wallpaper_var ;;
    17 | 18) linuxmint_tara_wallpaper_var ;;
    19) linuxmint_tina_wallpaper_var ;;
    20) linuxmint_ulyana_wallpaper_var ;;
    21 | 22) linuxmint_tricia_wallpaper_var ;;
    [23-27]) ubuntu_mate_wallpaper_var ;;
    [27-31]) linuxmint_ulyssa_wallpaper_var ;;
    [1-5] | *) linuxmint_serena_wallpaper_var ;;
    esac
    case ${RANDOM_WALLPAPER_PACK} in
    [23-27]) ;;
    *) debian_xfce_wallpaper ;;
    esac
}
############
ubuntu_mate_wallpaper_var() {
    WALLPAPER_FILE='/usr/share/backgrounds/johann-siemens-591.jpg'
    check_mate_wallpaper_pack
}
############
modify_the_default_xfce_wallpaper() {
    FORCIBLY_DOWNLOAD=true
    case "${LINUX_DISTRO}" in
    "debian")
        random_wallpaper_pack_01
        case "${DEBIAN_DISTRO}" in
        ubuntu) random_wallpaper_pack_03 ;;
        "kali")
            cp -sv /usr/share/backgrounds/kali-16x9/* /usr/share/backgrounds/ 2>/dev/null
            random_wallpaper_pack_04
            ;;
        esac
        debian_xfce_wallpaper
        ;;
    "arch")
        #WALLPAPER_FILE="/usr/share/backgrounds/xfce/Violet.jpg"
        mv -f /usr/share/backgrounds/xfce/* /usr/share/backgrounds/
        mv -f /usr/share/backgrounds/xfce-* /usr/share/backgrounds/xfce/ 2>/dev/null
        random_wallpaper_pack_02
        debian_xfce_wallpaper
        ;;
    "redhat")
        random_wallpaper_pack_02
        debian_xfce_wallpaper
        ;;
    *) random_wallpaper_pack_05 ;;
    esac
}
#################
debian_download_ubuntu_mate_wallpaper() {
    SET_MINT_AS_WALLPAPER=true
    download_ubuntu-mate_wallpaper
}
#####################
debian_download_xubuntu_xenial_wallpaper() {
    REPO_URL='https://mirrors.bfsu.edu.cn/ubuntu/pool/universe/x/xubuntu-community-artwork/'
    GREP_NAME_01='xubuntu-community-wallpapers-xenial'
    GREP_NAME_02='all.deb'
    grep_deb_comman_model_02
}
###############
auto_configure_xfce4_panel() {
    XFCE_CONFIG_FOLDER="${HOME}/.config/xfce4/xfconf/xfce-perchannel-xml"
    mkdir -pv ${XFCE_CONFIG_FOLDER}
    cd ${XFCE_CONFIG_FOLDER}
    cp -f ${TMOE_TOOL_DIR}/gui/config/xfce4-panel.xml ./
    CURRENT_USER_FILE=$(pwd)
    fix_non_root_permissions
}
############
choose_debian_lxde_core_or_lite() {
    if (whiptail --title "LXDE-CORE or LXDE-LITE" --yes-button "core" --no-button "lite" --yesno 'The former includes some extra software of lxde,and the latter is more streamlined.\nÂâçËÄÖ‰∏∫ÊôÆÈÄölxde,ÂêéËÄÖ‰∏∫Á≤æÁÆÄÁâàlxde' 0 0); then
        do_you_want_to_install_fcitx4
    else
        UBUNTU_DESKTOP=false
        DEPENDENCY_01="--no-install-recommends pcmanfm lxterminal openbox-lxde-session lxde-icon-theme lxpanel"
    fi
}
#############################
install_lxde_desktop() {
    if [ $(command -v apt-cache) ]; then
        printf "%s\n" "${GREEN}apt ${YELLOW}show ${BLUE}lxde-core${RESET}"
        apt-cache show lxde-core
    fi
    REMOTE_DESKTOP_SESSION_01='lxsession'
    REMOTE_DESKTOP_SESSION_02='startlxde'
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅlxde-core„ÄÅlxterminal„ÄÅtightvncserver„ÄÇ'
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        do_you_want_to_continue
        case "${LINUX_DISTRO}" in
        "debian") ;;
        *) do_you_want_to_install_fcitx4 ;;
        esac
    fi
    DEPENDENCY_01='lxde'
    case "${LINUX_DISTRO}" in
    "debian")
        DEPENDENCY_01="lxde-core lxterminal"
        if [[ ${AUTO_INSTALL_GUI} != true ]]; then
            choose_debian_lxde_core_or_lite
        fi
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
        #############
    "redhat") DEPENDENCY_01='@lxde-desktop' ;;
        #############
    "arch") DEPENDENCY_01='lxde' ;;
        ############
    "void") DEPENDENCY_01='lxde' ;;
        #############
    "gentoo") DEPENDENCY_01='media-fonts/wqy-bitmapfont lxde-base/lxde-meta' ;;
        ##################
    "suse") DEPENDENCY_01='patterns-lxde-lxde' ;;
    "solus") printf "ERROR!Êú¨Â∑•ÂÖ∑Êú™ÈÄÇÈÖçsolus„ÄÇ\n" ;;
    "alpine")
        DEPENDENCY_01="lxsession"
        REMOTE_DESKTOP_SESSION='lxsession'
        ;;
    esac
    ###################
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        beta_features_quick_install
    else
        different_distro_software_install
    fi
    apt_purge_libfprint
    configure_vnc_xstartup
}
##########################
arch_linux_mate_warning() {
    printf "%s\n" "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâç‰ΩøÁî®ÁöÑÊòØ${YELLOW}ArchÁ≥ªÂèëË°åÁâà${RESET},Âπ∂‰∏îÂ§Ñ‰∫é${GREEN}prootÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºÅ"
    printf "%s\n" "mate-sessionÂú®ÂΩìÂâçÂÆπÂô®ÁéØÂ¢É‰∏ãÂèØËÉΩ‰ºöÂá∫Áé∞${RED}Â±èÂπïÈó™ÁÉÅ${RESET}ÁöÑÁé∞Ë±°"
    printf "%s\n" "Êåâ${GREEN}ÂõûËΩ¶ÈîÆ${RESET}${BLUE}ÁªßÁª≠ÂÆâË£Ö${RESET}"
    printf "%s\n" "${YELLOW}Do you want to continue?[Y/l/x/q/n]${RESET}"
    printf "%s\n" "Press ${GREEN}enter${RESET} to ${BLUE}continue.${RESET},type n to return."
    printf "%s\n" "Type q to install lxqt,type l to install lxde,type x to install xfce."
    printf "%s\n" "Êåâ${GREEN}ÂõûËΩ¶ÈîÆ${RESET}${RED}ÁªßÁª≠${RESET}ÂÆâË£ÖmateÔºåËæì${YELLOW}n${RESET}${BLUE}ËøîÂõû${RESET}"
    printf "%s\n" "Ëæì${YELLOW}q${RESET}ÂÆâË£Ölxqt,Ëæì${YELLOW}l${RESET}ÂÆâË£Ölxde,Ëæì${YELLOW}x${RESET}ÂÆâË£Öxfce"
    read -r opt
    case $opt in
    y* | Y* | "") ;;

    n* | N*)
        printf "%s\n" "skipped."
        standand_desktop_installation
        ;;
    l* | L*)
        install_lxde_desktop
        ;;
    q* | Q*)
        install_lxqt_desktop
        ;;
    x* | X*)
        install_xfce4_desktop
        ;;
    *)
        printf "%s\n" "Invalid choice. skipped."
        standand_desktop_installation
        #beta_features
        ;;
    esac
    DEPENDENCY_01='mate mate-extra'
}
###############
choose_debian_mate_core_or_lite() {
    if (whiptail --title "MATE-CORE or MATE-LITE" --yes-button "core" --no-button "lite" --yesno 'The former is the normal edition of mate,and the latter is more streamlined.\nÂâçËÄÖ‰∏∫ÊôÆÈÄömate,ÂêéËÄÖ‰∏∫Á≤æÁÆÄÁâàmate' 0 0); then
        do_you_want_to_install_fcitx4
    else
        UBUNTU_DESKTOP=false
        DEPENDENCY_01="--no-install-recommends mate-session-manager mate-settings-daemon marco mate-terminal mate-panel"
        #caja
    fi
}
choose_mate_or_ubuntu_mate() {
    case ${DEBIAN_DISTRO} in
    ubuntu)
        if (whiptail --title "Mate or Ubuntu-MATE-full-desktop" --yes-button "mate" --no-button "ubuntu-mate" --yesno 'The former is more streamlined, and the latter includes some extra software of ubuntu-mate.\nÂâçËÄÖ‰∏∫ÊôÆÈÄömate,ÂêéËÄÖ‰∏∫ubuntu-mate' 0 0); then
            #printf ""
            choose_debian_mate_core_or_lite
        else
            UBUNTU_DESKTOP=true
            do_you_want_to_install_fcitx4
            DEPENDENCY_01="ubuntu-mate-desktop"
        fi
        ;;
    *) choose_debian_mate_core_or_lite ;;
    esac
}
install_mate_desktop() {
    if [ $(command -v apt-cache) ]; then
        printf "%s\n" "${GREEN}apt ${YELLOW}show ${BLUE}mate-desktop-environment${RESET}"
        apt-cache show mate-desktop-environment
    fi
    REMOTE_DESKTOP_SESSION_01='mate-session'
    REMOTE_DESKTOP_SESSION_02='mate-panel'
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅtightvncserver„ÄÅmate-desktop-environmentÂíåmate-terminalÁ≠âËΩØ‰ª∂ÂåÖ'
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        do_you_want_to_continue
        case "${LINUX_DISTRO}" in
        "debian") ;;
        *) do_you_want_to_install_fcitx4 ;;
        esac
    fi
    DEPENDENCY_01='mate'
    case "${LINUX_DISTRO}" in
    "debian")
        DEPENDENCY_01='mate-desktop-environment mate-terminal'
        #apt autoremove --purge -y ^libfprint
        #apt autoclean
        if grep -q 'Linux Mint' '/etc/issue'; then
            DEPENDENCY_01="mint-meta-mate mint-meta-core mint-artwork"
        fi
        if [[ ${AUTO_INSTALL_GUI} != true ]]; then
            choose_mate_or_ubuntu_mate
        fi
        dpkg --configure -a
        auto_select_keyboard_layout
        apt clean
        apt autoclean
        #apt-mark hold gvfs
        #apt update
        #apt install -y udisks2 2>/dev/null
        #if [ "${TMOE_PROOT}" = 'true' ]; then
        #    printf "%s\n" "" >/var/lib/dpkg/info/udisks2.postinst
        #fi
        #apt-mark hold udisks2
        ;;
    "redhat") DEPENDENCY_01='@mate-desktop' ;;
    "arch")
        #if [ "${TMOE_PROOT}" = 'true' ]; then
        #    arch_linux_mate_warning
        #else
        DEPENDENCY_01='mate mate-extra'
        #fi
        ;;
    "gentoo") DEPENDENCY_01='mate-base/mate-desktop mate-base/mate' ;;
    "suse") DEPENDENCY_01='patterns-mate-mate' ;;
    "solus") printf "ERROR!Êú¨Â∑•ÂÖ∑Êú™ÈÄÇÈÖçsolus„ÄÇ\n" ;;
    "alpine")
        DEPENDENCY_01="mate-desktop-environment"
        REMOTE_DESKTOP_SESSION='mate-session'
        ;;
    esac
    ####################
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        beta_features_quick_install
    else
        different_distro_software_install
    fi
    apt_purge_libfprint
    configure_vnc_xstartup
}
#############
choose_lxqt_or_lubuntu() {
    case ${DEBIAN_DISTRO} in
    ubuntu)
        if (whiptail --title "Lxqt or Lubuntu-desktop" --yes-button "lxqt" --no-button "lubuntu" --yesno 'The former is more streamlined, and the latter includes some extra software of lubuntu.\nÂâçËÄÖ‰∏∫ÊôÆÈÄölxqt,ÂêéËÄÖ‰∏∫lubuntu' 0 0); then
            #printf ""
            choose_debian_lxqt_core_or_lite
        else
            UBUNTU_DESKTOP=true
            do_you_want_to_install_fcitx4
            DEPENDENCY_01="lubuntu-desktop"
        fi
        ;;
    *) choose_debian_lxqt_core_or_lite ;;
    esac
}
######################
choose_debian_lxqt_core_or_lite() {
    if (whiptail --title "LXQT-CORE or LXQT-LITE" --yes-button "core" --no-button "lite" --yesno 'The former is the normal edition of lxqt,and the latter is more streamlined.\nÂâçËÄÖ‰∏∫ÊôÆÈÄölxqt,ÂêéËÄÖ‰∏∫Á≤æÁÆÄÁâàlxqt' 0 0); then
        do_you_want_to_install_fcitx4
    else
        UBUNTU_DESKTOP=false
        DEPENDENCY_01="--no-install-recommends pcmanfm-qt pcmanfm-qt-l10n qterminal qterminal-l10n openbox lxqt-theme-debian lxqt-panel lxqt-config lxqt-session-l10n lxqt-session"
        #+ openbox
    fi
}
#########################
#DEPENDENCY_02="dbus-x11 fonts-noto-cjk tightvncserver"
install_lxqt_desktop() {
    if [ $(command -v apt-cache) ]; then
        printf "%s\n" "${GREEN}apt ${YELLOW}show ${BLUE}lxqt-core${RESET}"
        apt-cache show lxqt-core
    fi
    REMOTE_DESKTOP_SESSION_01='startlxqt'
    REMOTE_DESKTOP_SESSION_02='lxqt-session'
    DEPENDENCY_01="lxqt"
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅlxqt-core„ÄÅlxqt-config„ÄÅqterminalÂíåtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        do_you_want_to_continue
        case "${LINUX_DISTRO}" in
        "debian") ;;
        *) do_you_want_to_install_fcitx4 ;;
        esac
    fi
    case "${LINUX_DISTRO}" in
    "debian")
        DEPENDENCY_01="lxqt-core pcmanfm-qt-l10n qterminal-l10n xfwm4 xfwm4-theme-breeze lxqt-session-l10n lxqt-config"
        if [[ ${AUTO_INSTALL_GUI} != true ]]; then
            choose_lxqt_or_lubuntu
        fi
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
    "redhat") DEPENDENCY_01='@lxqt' ;;
    "arch") DEPENDENCY_01="lxqt xorg" ;;
    "gentoo") DEPENDENCY_01="lxqt-base/lxqt-meta" ;;
    "suse") DEPENDENCY_01="patterns-lxqt-lxqt" ;;
    "solus") printf "ERROR!Êú¨Â∑•ÂÖ∑Êú™ÈÄÇÈÖçsolus„ÄÇ\n" ;;
    "alpine")
        DEPENDENCY_01="openbox pcmfm rxvt-unicode tint2"
        REMOTE_DESKTOP_SESSION='openbox'
        ;;
    esac
    ####################
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        beta_features_quick_install
    else
        different_distro_software_install
    fi
    apt_purge_libfprint
    configure_vnc_xstartup
}
####################
kde_warning() {
    ICON_URL='https://gitee.com/ak2/icons/raw/master/plasma5.jpg'
    ICON_FILE_NAME='plasma5.jpg'
    download_and_cat_icon_img
    cat <<-'ENDofTable'
    KDE plasma 5Ê°åÈù¢ÊîØÊåÅË°®Ê†º
    ‰ª•‰∏ãÊï∞ÊçÆ‰∏çÈÄÇÁî®‰∫éproot
  ‚ïî‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶
  ‚ïë   ‚ïëvnc/xserver ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë   ‚ïë----------- ‚ïë x11vnc ‚ïëtigervnc‚ïë xrdp    ‚ïë
  ‚ïë   ‚ïëSystem      ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë 1 ‚ïëDebian sid  ‚ïë  ‚úì     ‚ïë    ‚úì   ‚ïë   ‚úì     ‚ïë
  ‚ïë   ‚ïë            ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïë            ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 2 ‚ïëUbuntu devel‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   ?     ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïë            ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 3 ‚ïëArchLinux   ‚ïë   ‚úì    ‚ïë    ‚úì   ‚ïë   ‚úì     ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïë            ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 4 ‚ïëManjaro     ‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   ?     ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïë            ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 5 ‚ïëFedora      ‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   ?     ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïë            ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë 6 ‚ïëAlpine      ‚ïë  ‚úì     ‚ïë   ?    ‚ïë   ?     ‚ïë

ENDofTable

    case "${TMOE_PROOT}" in
    true)
        printf "%s\n" "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}PROOTÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºÅ"
        if ! grep -qi 'Bionic' /etc/os-release; then
            printf "%s\n" "If you can not use ${GREEN}dolphin${RESET}, then you can try another file manager such as thunar or pcmanfm-qt."
            printf "%s\n" "The command to install is similar to"
            case ${DEBIAN_DISTRO} in
            debian) printf "%s\n" "${GREEN}${TMOE_INSTALLATION_COMMAND} --no-install-recommends ${BLUE}pcmanfm-qt pcmanfm-qt-l10n${RESET}" ;;
            *) printf "%s\n" "${GREEN}${TMOE_INSTALLATION_COMMAND} ${BLUE}pcmanfm-qt${RESET}" ;;
            esac
            # printf "%s\n" "${YELLOW}KDE plasma 5ÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏ËøêË°å${RESET},Âª∫ËÆÆÊÇ®Êç¢Áî®ËôöÊãüÊú∫ÊàñÂÆû‰ΩìÊú∫ËøõË°åÂÆâË£Ö„ÄÇ"
            # printf "%s\n" "Â¶ÇÈúÄÂú®prootÂÆπÂô®‰∏≠ÂÆâË£ÖÔºåËØ∑Êç¢Áî®${YELLOW}ÊóßÁâàÊú¨${RESET}Á≥ªÁªüÔºå‰æãÂ¶Ç${BLUE}Ubuntu 18.04${RESET}„ÄÇ"
            # printf "%s\n" "Â¶ÇÈúÄÂú®termux-prootÂÆπÂô®‰∏≠ÂÆâË£ÖÔºåÂàôËØ∑ÂÖàÁ°Æ‰øùtermux ÁöÑ ${GREEN}proot${RESET} ‰∏∫ ${PURPLE}ÊúÄÊñ∞${RESET} ÁâàÊú¨„ÄÇÊÇ®ÂèØ‰ª•ÂõûÂà∞termuxÂéüÁ≥ªÁªüÔºåÁÑ∂ÂêéÊâßË°å${GREEN}pkg ${YELLOW}up -y${RESET}"
            # printf "%s\n" "If the current environment is termux-proot, please ensure that ${GREEN}proot${RESET} is up to date."
            printf "%s\n" "In a proot environment, it may take you several minutes to start kde."
            # printf "%s\n" "ÊÇ®‰πüÂèØ‰ª•Êç¢Áî®chrootÂÆπÂô®,ÂÜçÂÆâË£ÖÊú¨Ê°åÈù¢„ÄÇ"
        fi
        ;;
    false) printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}chrootÂÆπÂô®${RESET}ÁéØÂ¢ÉÔºåÂ∞ΩÊÉÖ‰∫´ÂèóPlasmaÊ°åÈù¢Â∏¶Êù•ÁöÑ‰πêË∂£ÂêßÔºÅ" ;;
    esac
    tips_of_tiger_vnc_server
    do_you_want_to_continue
}
###############
choose_kde_plasma_or_standard() {
    if (whiptail --title "kde-plasma or kde-standard" --yes-button "plasma" --no-button "standard" --yesno 'The former is more streamlined\nÂâçËÄÖ‰∏∫Á≤æÁÆÄÂÆâË£Ö,ÂêéËÄÖ‰∏∫Ê†áÂáÜÂÆâË£Ö' 0 0); then
        DEPENDENCY_01="kde-plasma-desktop"
    else
        if (whiptail --title "kde-standard or kde-full" --yes-button "standard" --no-button "full" --yesno 'The former is standard installation,and the latter\n includes some extra software of kde.\nÂâçËÄÖÂåÖÂê´KDEÊ†áÂáÜÂ•ó‰ª∂,ÂêéËÄÖ‰∏∫KDEÂÖ®ÂÆ∂Ê°∂' 0 0); then
            DEPENDENCY_01="kde-standard"
        else
            DEPENDENCY_01="kde-full"
        fi
    fi
}
choose_kde_or_kubuntu() {
    case ${DEBIAN_DISTRO} in
    ubuntu)
        if (whiptail --title "KDE-plasma or Kubuntu-desktop" --yes-button "KDE" --no-button "kubuntu" --yesno 'The former is more streamlined, and the latter\n includes some extra software of kubuntu.\nÂâçËÄÖ‰∏∫ÊôÆÈÄöKDE,ÂêéËÄÖ‰∏∫kubuntu' 0 0); then
            choose_kde_plasma_or_standard
        else
            UBUNTU_DESKTOP=true
            DEPENDENCY_01="kubuntu-desktop"
        fi
        ;;
    *) choose_kde_plasma_or_standard ;;
    esac
}
choose_arch_kde_lite_or_full() {
    if (whiptail --title "kde-plasma or kde-standard" --yes-button "plasma" --no-button "plasma+apps" --yesno 'The former is more streamlined, and the latter\n includes some extra software of kde.\nÂâçËÄÖ‰∏∫plasmaÂü∫Á°ÄÊ°åÈù¢ÔºåÂêéËÄÖÂåÖÂê´kdeÂÖ®ÂÆ∂Ê°∂' 0 0); then
        DEPENDENCY_01="plasma-desktop dolphin konsole"
    else
        DEPENDENCY_01="plasma-meta kde-applications-meta plasma-wayland-session sddm sddm-kcm"
    fi
    #choose_plasma_wayland_or_x11
}
choose_plasma_wayland_or_x11() {
    if (whiptail --title "x11 or wayland" --yes-button "x11" --no-button "wayland" --yesno 'Do you want to choose x11 or plasma-wayland?' 0 0); then
        KDE_PLASMA_WAYLAND=false
    else
        KDE_PLASMA_WAYLAND=true
    fi
}
plasma_wayland_env() {
    REMOTE_DESKTOP_SESSION_01='startplasma-wayland'
    REMOTE_DESKTOP_SESSION_02='startplasma-x11'
    case ${LINUX_DISTRO} in
    arch) PLASMA_WAYLAND_DEPENDENCIES="plasma-wayland-session" ;;
    debian) PLASMA_WAYLAND_DEPENDENCIES="plasma-workspace-wayland" ;;
    redhat) PLASMA_WAYLAND_DEPENDENCIES="plasma-workspace-wayland" ;;
    esac
    printf "%s\n" "${YELLOW}${LINUX_DISTRO}Ôºö${BLUE}${PLASMA_WAYLAND_DEPENDENCIES}${RESET}"
}
################
install_kde_plasma5_desktop() {
    #if [ $(command -v apt-cache) ]; then
    #    printf "%s\n" "${GREEN}apt ${YELLOW}depends ${BLUE}kde-plasma-desktop${RESET}"
    #    apt-cache depends kde-plasma-desktop
    #fi
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        kde_warning
        do_you_want_to_install_fcitx4
    fi

    KDE_PLASMA_WAYLAND=false
    REMOTE_DESKTOP_SESSION_01='startplasma-x11'
    REMOTE_DESKTOP_SESSION_02='startkde'
    DEPENDENCY_01="plasma-desktop"
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Ökde-plasma-desktop„ÄÅtigervnc-standalone-server„ÄÅfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâÂíåfonts-noto-color-emojiÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    case "${LINUX_DISTRO}" in
    "debian")
        #printf "ÈªòËÆ§‰∏∫ÊúÄÂ∞èÂÆâË£ÖÔºåÂ¶ÇÈúÄÂÆâË£ÖkdeÂÆåÊï¥Â•ó‰ª∂ÔºåÂàôËØ∑ÊâãÂä®Ëæì${GREEN}apt install${RESET} ${PURPLE}kde-full${RESET}"
        #printf "Âú®ÈÖçÁΩÆvncÊúçÂä°ÁöÑËøáÁ®ã‰∏≠ÔºåÂΩìÊèêÁ§∫tiger/tightÊó∂ÔºåËØ∑ÈÄâÊã©ÂâçËÄÖ„ÄÇ"
        DEPENDENCY_01="kde-plasma-desktop"
        if [[ ${AUTO_INSTALL_GUI} != true ]]; then
            choose_kde_or_kubuntu
        fi
        # if ! grep -qi 'Bionic|Buster|deepin|uos\.com|jessie|stretch' /etc/os-release; then
        #    choose_plasma_wayland_or_x11
        #fi
        #else
        #    KDE_PLASMA_WAYLAND=false
        #fi
        #if grep -qi 'Bionic|Buster' /etc/os-release; then
        #    KDE_PLASMA_WAYLAND=false
        dpkg --configure -a
        auto_select_keyboard_layout
        apt clean
        ;;
    "redhat")
        #yum groupinstall kde-desktop
        DEPENDENCY_01='@KDE'
        case ${REDHAT_DISTRO} in
        fedora) ;;
        esac
        ;;
    "arch")
        # sddm sddm-kcm
        DEPENDENCY_01="plasma-desktop dolphin konsole discover"
        if [[ ${AUTO_INSTALL_GUI} != true ]]; then
            choose_arch_kde_lite_or_full
        fi
        ;;
    "void") DEPENDENCY_01="kde" ;;
    "gentoo")
        PLASMAnoSystemd=$(eselect profile list | grep plasma | grep -v systemd | tail -n 1 | cut -d ']' -f 1 | cut -d '[' -f 2)
        eselect profile set ${PLASMAnoSystemd}
        dispatch-conf
        etc-update
        #emerge -auvDN --with-bdeps=y @world
        DEPENDENCY_01="plasma-desktop plasma-nm plasma-pa sddm konsole"
        ;;
    "suse")
        DEPENDENCY_01="-t pattern kde kde_plasma"
        # + pcmanfm-qt-lang
        ;;
    "solus") printf "ERROR!Êú¨Â∑•ÂÖ∑Êú™ÈÄÇÈÖçsolus„ÄÇ\n" ;;
    "alpine")
        DEPENDENCY_01="plasma-desktop breeze breeze-icons konsole discover"
        # + pcmanfm-lang pcmanfm
        REMOTE_DESKTOP_SESSION='startplasma-x11'
        ;;
    esac
    ####################
    #[[ ${KDE_PLASMA_WAYLAND} != true ]] || plasma_wayland_env
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        beta_features_quick_install
    else
        different_distro_software_install
    fi
    #if [[ ${PLASMA_WAYLAND_DEPENDENCIES} = true ]]; then
    #    printf "%s\n" "${GREEN}${TMOE_INSTALLATION_COMMAND} ${BLUE}${PLASMA_WAYLAND_DEPENDENCIES}${RESET}"
    #    if [[ ! $(command -v startplasma-wayland) ]]; then
    #        ${TMOE_INSTALLATION_COMMAND} ${PLASMA_WAYLAND_DEPENDENCIES} || ${TMOE_INSTALLATION_COMMAND} ${PLASMA_WAYLAND_DEPENDENCIES}
    #    fi
    #fi
    apt_purge_libfprint
    configure_vnc_xstartup
}
##################
tips_of_tiger_vnc_server() {
    printf "%s\n" "Âú®ÊÇ®‰ΩøÁî®ËôöÊãüÊú∫ÊàñÂÆπÂô®ÂÆâË£ÖÊú¨Ê°åÈù¢ÁöÑËøáÁ®ã‰∏≠ÔºåÂΩìÊèêÁ§∫tight/tiger vncÊó∂,ËØ∑ÈÄâÊã©tiger„ÄÇËã•Êú™ÂºπÂá∫ÊèêÁ§∫ÂÜÖÂÆπÔºåÂàôÊÇ®ÂèØ‰ª•ÂâçÂæÄÊú¨Â∑•ÂÖ∑ÁöÑvncÈÖçÁΩÆÈÄâÈ°πÊâãÂä®ÂàáÊç¢ÊúçÂä°Á´ØÔºåÊàñ‰ΩøÁî®x11vnc"
    printf "%s\n" "Since tightvnc may not be able to connect to this desktop normally, please choose tiger or x11vnc server."
}
##################
tmoe_desktop_warning() {
    case "${TMOE_PROOT}" in
    true) printf "%s\n" "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}PROOTÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºÅ${YELLOW}Êú¨Ê°åÈù¢ÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏ËøêË°å${RESET},Âª∫ËÆÆÊÇ®Êç¢Áî®ËôöÊãüÊú∫ÊàñÂÆû‰ΩìÊú∫ËøõË°åÂÆâË£Ö„ÄÇ" ;;
    esac
    #  false) printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}chrootÂÆπÂô®${RESET}ÁéØÂ¢ÉÔºå‰∏çÂª∫ËÆÆÂú®ÂΩìÂâçÁéØÂ¢É‰∏ãÂÆâË£ÖÊú¨Ê°åÈù¢„ÄÇ" ;;
    tips_of_tiger_vnc_server
    do_you_want_to_continue
}
###############
ukui_or_kylin_desktop() {
    if (whiptail --title "ukui or ubuntukylin-desktop" --yes-button "ukui" --no-button "kylin" --yesno 'The former is more streamlined, and the latter\n includes some extra software of  ubuntu-kylin.\nÂâçËÄÖ‰∏∫ÊôÆÈÄöukui,ÂêéËÄÖ‰∏∫ubuntukylin-desktop' 0 0); then
        DEPENDENCY_01='ukui-session-manager ukui-menu ukui-control-center ukui-screensaver ukui-themes peony'
    else
        DEPENDENCY_01="ubuntukylin-desktop"
    fi
}
install_ukui_desktop() {
    case ${AUTO_INSTALL_GUI} in
    true) ;;
    *) tmoe_desktop_warning ;;
    esac

    case ${TMOE_PROOT} in
    true)
        REMOTE_DESKTOP_SESSION_01='ukui-panel'
        REMOTE_DESKTOP_SESSION_02='ukui-session'
        ;;
    false | *)
        REMOTE_DESKTOP_SESSION_01='ukui-session'
        REMOTE_DESKTOP_SESSION_02='ukui-panel'
        ;;
    esac
    DEPENDENCY_01="ukui-session-manager"
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅukui-session-manager„ÄÅukui-menu„ÄÅukui-control-center„ÄÅukui-screensaver„ÄÅukui-themes„ÄÅpeonyÂíåtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    case "${LINUX_DISTRO}" in
    "debian")
        case ${AUTO_INSTALL_GUI} in
        true) DEPENDENCY_01="ubuntukylin-desktop" ;;
        *) ukui_or_kylin_desktop ;;
        esac
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
    "arch") DEPENDENCY_01='ukui' ;;
    *)
        printf "%s\n" "Sorry,Êú™ÈÄÇÈÖç${LINUX_DISTRO}"
        press_enter_to_return
        ${RETURN_TO_WHERE}
        ;;
    esac
    ####################
    beta_features_quick_install
    apt_purge_libfprint
    configure_vnc_xstartup
}
##############
set_budgie_desktop_1() {
    REMOTE_DESKTOP_SESSION_01='budgie-desktop'
    REMOTE_DESKTOP_SESSION_02='budgie-desktop-builtin'
}
set_budgie_desktop_2() {
    REMOTE_DESKTOP_SESSION_01='budgie-desktop-builtin'
    REMOTE_DESKTOP_SESSION_02='budgie-panel'
}

choose_debian_budgie_core_or_desktop() {
    if (whiptail --title "budgie-core or budgie-desktop" --yes-button "core" --no-button "desktop" --yesno 'The former is more streamlined, and the latter\n includes some extra software of budgie.\nÂâçËÄÖÊõ¥Á≤æÁÆÄ' 0 0); then
        DEPENDENCY_01='--no-install-recommends budgie-core'
        # gnome-shell-extension-dashtodock
    else
        DEPENDENCY_01='budgie-desktop'
    fi
}
choose_budgie_or_ubuntu_budgie_desktop() {
    if (whiptail --title "budgie or ubuntu-budgie-desktop" --yes-button "budgie" --no-button "ubuntu-budgie" --yesno 'The former is more streamlined, and the latter\n includes some extra software of ubuntu-budgie.\nÂâçËÄÖ‰∏∫budgieÂü∫Á°ÄÊ°åÈù¢ÔºåÂêéËÄÖ‰∏∫ubuntu-budgie-desktop' 0 0); then
        choose_debian_budgie_core_or_desktop
    else
        UBUNTU_DESKTOP=true
        DEPENDENCY_01="ubuntu-budgie-desktop"
    fi
}
choose_budgie_panel_or_desktop() {
    if (whiptail --title "budgie session" --yes-button "panel" --no-button "desktop" --yesno 'The former is budgie-panel, the later is budgie-desktop.' 0 0); then
        set_budgie_desktop_2
    else
        set_budgie_desktop_1
    fi
}
install_budgie_desktop() {
    tmoe_desktop_warning
    DEPENDENCY_01="budgie-desktop"
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅbudgie-desktop„ÄÅbudgie-indicator-appletÂíåtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    choose_budgie_panel_or_desktop
    # set_gnome_flashback_desktop
    # ln_s_gnome_flashback_metacity
    case ${LINUX_DISTRO} in
    debian)
        # DEPENDENCY_01='budgie-desktop budgie-indicator-applet'
        case ${DEBIAN_DISTRO} in
        ubuntu) choose_budgie_or_ubuntu_budgie_desktop ;;
        *) choose_debian_budgie_core_or_desktop ;;
        esac
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
    arch | void | solus) DEPENDENCY_01='budgie-desktop' ;;
    *)
        printf "%s\n" "Sorry,ÊöÇÊú™ÈÄÇÈÖç${LINUX_DISTRO}"
        press_enter_to_return
        ${RETURN_TO_WHERE}
        ;;
    esac
    ####################
    beta_features_quick_install
    cat_budgie_desktop_builtin_session
    apt_purge_libfprint
    configure_vnc_xstartup
}
##############
gnome3_warning() {
    case "${TMOE_PROOT}" in
    true) printf "%s\n" "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}PROOTÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºÅ‰∏çÂª∫ËÆÆÊÇ®Âú®ÂΩìÂâçÁéØÂ¢É‰∏ãÂÆâË£ÖÊú¨Ê°åÈù¢„ÄÇ" ;;
    esac
    tips_of_tiger_vnc_server
    do_you_want_to_continue
}
###############
choose_debian_gnome_shell_or_gnome_core() {
    if (whiptail --title "gnome-shell or gnome-core" --yes-button "gnome-shell" --no-button "gnome-core" --yesno 'The former is more streamlined, and the latter\n includes some extra software of gnome.\nÂâçËÄÖÊõ¥Á≤æÁÆÄ' 0 0); then
        DEPENDENCY_01='--no-install-recommends xorg gnome-panel gnome-menus gnome-shell gnome-session'
        # gnome-shell-extension-dashtodock
    else
        #  gnome-tweak-tool
        DEPENDENCY_01='gnome-core'
    fi
}
choose_gnome_or_ubuntu_desktop() {
    if (whiptail --title "gnome or ubuntu-desktop" --yes-button "gnome" --no-button "ubuntu-desktop" --yesno 'The former is more streamlined, and the latter\n includes some extra software of ubuntu-desktop.\nÂâçËÄÖ‰∏∫gnomeÂü∫Á°ÄÊ°åÈù¢ÔºåÂêéËÄÖ‰∏∫ubuntu-desktop' 0 0); then
        # DEPENDENCY_01='--no-install-recommends xorg gnome-panel gnome-menus gnome-tweak-tool gnome-core gnome-shell gnome-session'
        choose_debian_gnome_shell_or_gnome_core
    else
        UBUNTU_DESKTOP=true
        DEPENDENCY_01="ubuntu-desktop"
    fi
}
set_gnome_desktop_deps() {
    case "${LINUX_DISTRO}" in
    "debian")
        #aptitude install -y task-gnome-desktop || apt install -y task-gnome-desktop
        #apt install --no-install-recommends xorg gnome-session gnome-menus gnome-tweak-tool gnome-shell || aptitude install -y gnome-core
        case ${DEBIAN_DISTRO} in
        ubuntu) choose_gnome_or_ubuntu_desktop ;;
        *) choose_debian_gnome_shell_or_gnome_core ;;
        esac
        dpkg --configure -a
        auto_select_keyboard_layout
        #Ëã•‰∏çÂåÖÂê´gnome-coreÔºåÂàô‰∏∫ÊúÄÁÆÄÂåñÂÆâË£Ö
        ;;
    "redhat")
        #yum groupinstall "GNOME Desktop Environment"
        #dnf groupinstall -y "GNOME" || yum groupinstall -y "GNOME"
        DEPENDENCY_01='@GNOME'
        ;;
    "arch")
        if (whiptail --title "gnome or gnome-extra" --yes-button "gnome" --no-button "gnome-extra" --yesno 'The former is more streamlined, and the latter\n includes some extra software of gnome.\nÂâçËÄÖ‰∏∫gnomeÂü∫Á°ÄÊ°åÈù¢ÔºåÂêéËÄÖÂåÖÂê´gnomeÂÖ®ÂÆ∂Ê°∂' 0 0); then
            DEPENDENCY_01='gnome-tweaks gnome'
        else
            DEPENDENCY_01='gnome-extra gnome'
        fi
        ;;
    "gentoo")
        GNOMEnoSystemd=$(eselect profile list | grep gnome | grep -v systemd | tail -n 1 | cut -d ']' -f 1 | cut -d '[' -f 2)
        eselect profile set ${GNOMEnoSystemd}
        #emerge -auvDN --with-bdeps=y @world
        dispatch-conf
        etc-update
        DEPENDENCY_01='gnome-shell gdm gnome-terminal'
        ;;
    "solus") DEPENDENCY_01='gnome-session gnome-shell' ;;
    "suse") DEPENDENCY_01='patterns-gnome-gnome_x11' ;;
    esac
}
set_gnome_flashback_desktop() {
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅgnome-session„ÄÅgnome-session-flashback„ÄÅgnome-flashback„ÄÅalacarteÂíåtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    case "${LINUX_DISTRO}" in
    "debian")
        #gnome-applets alacarte
        case ${DEBIAN_DISTRO} in
        ubuntu) DEPENDENCY_01='gnome-panel gnome-menus gnome-shell gnome-session-flashback gnome-session' ;;
        *) DEPENDENCY_01='gnome-panel gnome-menus gnome-shell gnome-session-flashback gnome-session' ;;
        esac
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
    "redhat") DEPENDENCY_01='@GNOME gnome-flashback' ;;
    "arch") DEPENDENCY_01='gnome gnome-tweaks gnome-flashback' ;;
    "alpine") DEPENDENCY_01="gnome-flashback gnome-flashback-lang gnome gnome-session" ;;
    "void") DEPENDENCY_01="gnome-flashback" ;;
    esac
}
gnome_session_1() {
    REMOTE_DESKTOP_SESSION_01='gnome-shell-x11'
    REMOTE_DESKTOP_SESSION_02='gnome-flashback-metacity'
    # REMOTE_DESKTOP_SESSION_03='gnome-panel'
}
gnome_session_2() {
    REMOTE_DESKTOP_SESSION_01='gnome-flashback-metacity'
}
gnome_session_3() {
    REMOTE_DESKTOP_SESSION_01='gnome-session'
}
gnome_session_4() {
    REMOTE_DESKTOP_SESSION_01='gnome-session-ubuntu'
}
gnome_session_5() {
    REMOTE_DESKTOP_SESSION_01='gnome-session-classic'
}
set_gnome_common_env() {
    set_gnome_desktop_deps
    REMOTE_DESKTOP_SESSION_02='gnome-shell-x11'
}
choose_gnome_session() {
    GNOME_SESSION_OPT=$(whiptail --title "gnome-session" --menu \
        "Which session do you want to use?\nDifferent environments should use different sessions." 0 0 0 \
        "1" "gnome-shell-x11" \
        "2" "gnome-flashback" \
        "3" "gnome-session" \
        "4" "gnome-session-ubuntu(systemd)" \
        "5" "gnome-session-classic" \
        "0" "üåö back" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${GNOME_SESSION_OPT}" in
    0 | "") tmoe_docker_and_chroot_container_desktop ;;
    1) gnome_session_1 ;;
    2) gnome_session_2 ;;
    3) gnome_session_3 ;;
    4) gnome_session_4 ;;
    5) gnome_session_5 ;;
    esac
    case "${GNOME_SESSION_OPT}" in
    1)
        set_gnome_desktop_deps
        REMOTE_DESKTOP_SESSION_02='gnome-flashback-metacity'
        ;;
    2)
        set_gnome_flashback_desktop
        REMOTE_DESKTOP_SESSION_02='gnome-shell-x11'
        ;;
    *) set_gnome_common_env ;;
    esac
}
install_gnome_desktop() {
    print_gnome_ascii
    DEPENDENCY_01="gnome"
    gnome3_warning
    # set_gnome_common_env
    choose_gnome_session
    do_you_want_to_install_fcitx4
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅgnome-session„ÄÅgnome-menus„ÄÅgnome-tweak-tool„ÄÅgnome-shellÂíåtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    ####################
    beta_features_quick_install
    case $REMOTE_DESKTOP_SESSION_01 in
    'gnome-flashback-metacity') ln_s_gnome_flashback_metacity ;;
    'gnome-session-classic') cat_gnome_session_classic ;;
    'gnome-session-ubuntu') cat_gnome_session_ubuntu ;;
    esac
    cat_gnome_shell_x11
    apt_purge_libfprint
    configure_vnc_xstartup
}
print_gnome_ascii() {
    printf "%s" "${BLUE}"
    cat <<-'EOF'
,@@@@@@@@,
                 @@@@@@      @@@@@@@@@@@@
        ,@@.    @@@@@@@    *@@@@@@@@@@@@
       @@@@@%   @@@@@@(    @@@@@@@@@@@&
       @@@@@@    @@@@*     @@@@@@@@@#
@@@@*   @@@@,              *@@@@@%
@@@@@.
 @@@@#         @@@@@@@@@@@@@@@@
         ,@@@@@@@@@@@@@@@@@@@@@@@,
      ,@@@@@@@@@@@@@@@@@@@@@@@@@@&
    .@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@
   @@@@@@@@@@@@@@@@@@@@@@@@(
   @@@@@@@@@@@@@@@@@@@@%
    @@@@@@@@@@@@@@@@
     @@@@@@@@@@@@*        @@@@@@@@/
      &@@@@@@@@@@        @@@@@@@@@*
        @@@@@@@@@@@,    @@@@@@@@@*
          ,@@@@@@@@@@@@@@@@@@@@&
              &@@@@@@@@@@@@@@
                     ...
EOF
    printf "%s\n" "${RESET}"
}
##################
get_ubuntu_desktop_language_pack() {
    case "${LINUX_DISTRO}" in
    "debian")
        case ${TMOE_PROOT} in
        true)
            POST_INST="/var/lib/dpkg/info/blueman.postinst"
            if [[ -e ${POST_INST} ]]; then
                sed -i '1a\return 0' ${POST_INST}
            fi
            dpkg --configure -a
            ;;
        esac

        case ${DEBIAN_DISTRO} in
        ubuntu)
            if [ ! "$(command -v check-language-support)" ]; then
                printf "%s\n" "${GREEN}apt ${YELLOW}install -y ${BLUE}language-selector-common${RESET}"
                apt install -y language-selector-common
            fi
            TMP_FILE="/tmp/${RANDOM}.language-pack.txt.tmp"
            # if [[ ! -e ${TMOE_LINUX_DIR}/ubuntu-desktop-language-pack.txt ]]; then
            printf "%s\n" "Checking ubuntu language pack support ..."

            T=$(check-language-support 2>/dev/null)

            if [[ -n ${T} ]]; then
                printf "%s\n" "${T}" >${TMP_FILE}

                cat ${TMP_FILE}

                sed 's@ @\n@g' ${TMP_FILE} | grep -E 'language|l10n|i18n|locale' >${TMP_FILE}.2

                cat ${TMP_FILE}.2 >>${TMOE_LINUX_DIR}/ubuntu-desktop-language-pack.txt

                sed -i 's@^@apt install -y &@g' ${TMP_FILE}.2
                bash ${TMP_FILE}.2

                rm -vf ${TMP_FILE} ${TMP_FILE}.2
            # fi
            fi
            ;;
        esac
        ;;
    esac
}
################
cat_budgie_desktop_builtin_session() {
    local GNOME_SESSION="/usr/local/bin/budgie-desktop-builtin"
    cat >${GNOME_SESSION} <<-'EOF'
#!/usr/bin/env sh

budgie-wm --x11 --replace &
budgie-panel --replace &
# exec budgie-desktop --builtin --disable-acceleration-check "$@"
EOF
    chmod a+rx ${GNOME_SESSION}
}
cat_gnome_flashback_session() {
    cat >${GNOME_SESSION} <<-'EOF'
#!/usr/bin/env sh

if [ -z $XDG_CURRENT_DESKTOP ]; then
    export XDG_CURRENT_DESKTOP="GNOME-Flashback:GNOME"
fi

EOF
    if [[ -n $(gnome-session --help 2>&1 | grep builtin) ]]; then
        # nosystemd
        echo 'exec gnome-session --builtin --session=gnome-flashback-metacity --disable-acceleration-check "$@"' >>${GNOME_SESSION}
    else
        printf "%s\n" \
            'metacity &' \
            'exec gnome-session --session=gnome-flashback-metacity --disable-acceleration-check "$@"' \
            >>${GNOME_SESSION}
    fi
    chmod a+rx ${GNOME_SESSION}
}
cat_gnome_session_classic() {
    local GNOME_SESSION="/usr/local/bin/gnome-session-classic"
    cat >${GNOME_SESSION} <<-'EOF'
#!/usr/bin/env sh

export GNOME_SHELL_SESSION_MODE=classic
exec gnome-session --session=gnome-classic --disable-acceleration-check "$@"
EOF
    chmod a+rx ${GNOME_SESSION}
}
cat_gnome_session_ubuntu() {
    local GNOME_SESSION="/usr/local/bin/gnome-session-ubuntu"
    cat >${GNOME_SESSION} <<-'EOF'
#!/usr/bin/env sh

if [ -z $XDG_CURRENT_DESKTOP ]; then
    export XDG_CURRENT_DESKTOP="ubuntu:GNOME"
fi

export DESKTOP_SESSION=ubuntu
export GNOME_SHELL_SESSION_MODE=ubuntu
export XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg

exec gnome-session --session=ubuntu --disable-acceleration-check "$@"
EOF
    chmod a+rx ${GNOME_SESSION}
}
cat_gnome_shell_x11() {
    local GNOME_SESSION="/usr/local/bin/gnome-shell-x11"
    cat >${GNOME_SESSION} <<-'EOF'
#!/usr/bin/env sh

# if [ -z $XDG_CURRENT_DESKTOP ]; then
#     export XDG_CURRENT_DESKTOP="GNOME-Shell:GNOME"
# fi

exec gnome-shell --x11 "$@"
EOF
    chmod a+rx ${GNOME_SESSION}

}
ln_s_gnome_flashback_metacity() {
    GNOME_SESSION="/usr/local/bin/gnome-flashback-metacity"
    # # GNOME_SESSION_FLASHBACK="/usr/lib/gnome-flashback/gnome-flashback-metacity"
    # if [[ -e ${GNOME_SESSION_FLASHBACK} ]]; then
    #     ln -svf ${GNOME_SESSION_FLASHBACK} ${GNOME_SESSION}
    #     if grep -q '\-\-systemd' ${GNOME_SESSION}; then
    #         rm -vf ${GNOME_SESSION}
    #         cat_gnome_flashback_session
    #     fi
    # elif [[ $(command -v gnome-flashback) || -e /usr/share/xsessions/gnome-flashback-metacity.desktop ]]; then
    #     cat_gnome_flashback_session
    # fi
    cat_gnome_flashback_session
}
cinnamon_warning() {
    case "${TMOE_PROOT}" in
    true) printf "%s\n" "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}PROOTÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºÅ${YELLOW}cinnamonÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏ËøêË°å${RESET},Âª∫ËÆÆÊÇ®Êç¢Áî®ËôöÊãüÊú∫ÊàñÂÆû‰ΩìÊú∫ËøõË°åÂÆâË£Ö„ÄÇ" ;;
    false) printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}chrootÂÆπÂô®${RESET}ÁéØÂ¢ÉÔºå‰∏çÂª∫ËÆÆÂú®ÂΩìÂâçÁéØÂ¢É‰∏ãÂÆâË£ÖÊú¨Ê°åÈù¢„ÄÇ" ;;
    no) printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®Êó†ÊùÉËØªÂèñ${YELLOW}/proc${RESET}ÁöÑÈÉ®ÂàÜÊï∞ÊçÆÔºå${RED}ËØ∑ÂãøÂÆâË£Ö${RESET}" ;;
    esac
    tips_of_tiger_vnc_server
    do_you_want_to_continue
}
###############
install_cinnamon_desktop() {
    # cinnamon_warning
    case ${TMOE_PROOT} in
    true)
        REMOTE_DESKTOP_SESSION_01='cinnamon'
        REMOTE_DESKTOP_SESSION_02='cinnamon-session'
        ;;
    false | *)
        # cinnamon-launcher
        REMOTE_DESKTOP_SESSION_01='cinnamon-session'
        REMOTE_DESKTOP_SESSION_02='cinnamon'
        ;;
    esac
    DEPENDENCY_01="cinnamon"
    printf '%s\n' 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Öfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emoji„ÄÅcinnamonÂíåtightvncserverÁ≠âËΩØ‰ª∂ÂåÖ„ÄÇ'
    case "${LINUX_DISTRO}" in
    "debian")
        if (whiptail --title "Lite or standard" --yes-button "lite" --no-button "standard" --yesno 'The former is more streamlined' 0 0); then
            UBUNTU_DESKTOP=false
            DEPENDENCY_01="--no-install-recommends cinnamon-l10n cinnamon"
        else
            UBUNTU_DESKTOP=true
            DEPENDENCY_01="cinnamon-l10n cinnamon-desktop-environment cinnamon"
        fi
        if grep -q 'Linux Mint' '/etc/issue'; then
            DEPENDENCY_01="mint-meta-cinnamon mint-meta-core mint-artwork"
        fi
        dpkg --configure -a
        auto_select_keyboard_layout
        ;;
    "redhat") DEPENDENCY_01='@Cinnamon Desktop' ;;
    "arch") DEPENDENCY_01="cinnamon-translations cinnamon" ;;
    "gentoo") DEPENDENCY_01="gnome-extra/cinnamon gnome-extra/cinnamon-desktop gnome-extra/cinnamon-translations" ;;
    "suse") DEPENDENCY_01="cinnamon cinnamon-control-center" ;;
    "solus") printf "ERROR!Êú¨Â∑•ÂÖ∑Êú™ÈÄÇÈÖçsolus„ÄÇ\n" ;;
    "alpine") DEPENDENCY_01="adapta-cinnamon" ;;
    esac
    ##############
    beta_features_quick_install
    apt_purge_libfprint
    configure_vnc_xstartup
}
####################
deepin_desktop_warning() {
    case "${ARCH_TYPE}" in
    "i386" | "amd64") ;;
    *)
        printf "%s\n" "ÈùûÂ∏∏Êä±Ê≠âÔºåÊ∑±Â∫¶Ê°åÈù¢‰∏çÊîØÊåÅÊÇ®ÂΩìÂâçÁöÑÊû∂ÊûÑ„ÄÇ"
        printf "%s\n" "Âª∫ËÆÆÊÇ®Âú®Êç¢Áî®x86_64Êàñi386Êû∂ÊûÑÁöÑËÆæÂ§áÂêéÔºåÂÜçÊù•Â∞ùËØï„ÄÇ"
        printf "%s\n" "${YELLOW}Ë≠¶ÂëäÔºÅdeepinÊ°åÈù¢ÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏ËøêË°å${RESET}"
        arch_does_not_support
        tmoe_docker_and_chroot_container_desktop
        ;;
    esac
}
################
ubuntu_dde_distro_code() {
    aria2c --console-log-level=warn --no-conf --allow-overwrite=true -o .ubuntu_ppa_tmoe_cache 'http://ppa.launchpad.net/ubuntudde-dev/stable/ubuntu/dists/'
    TARGET_CODE=$(cat .ubuntu_ppa_tmoe_cache | grep '\[DIR' | tail -n 1 | cut -d '=' -f 5 | cut -d '/' -f 1 | cut -d '"' -f 2)
    if [ "${DEBIAN_DISTRO}" = 'ubuntu' ]; then
        if [ "$(cat .ubuntu_ppa_tmoe_cache | grep '\[DIR' | grep "${SOURCELISTCODE}")" ]; then
            TARGET_CODE=${SOURCELISTCODE}
        fi
    fi
    rm -f .ubuntu_ppa_tmoe_cache
}
####################
deepin_desktop_debian() {
    if [ ! $(command -v add-apt-repository) ]; then
        apt update
        apt install -y software-properties-common
        apt install -y gnupg
    fi
    yes | add-apt-repository ppa:ubuntudde-dev/stable
    #84C8BB5C8E93FFC280EAC512C27BE3D0F0FE09DA
    DEV_TEAM_NAME='ubuntudde-dev'
    PPA_SOFTWARE_NAME='stable'

    case "${DEBIAN_DISTRO}" in
    ubuntu) SOURCELISTCODE=$(grep VERSION_CODENAME /etc/os-release | cut -d '=' -f 2 | head -n 1) ;;
    *)
        get_ubuntu_ppa_gpg_key
        ubuntu_dde_distro_code
        check_ubuntu_ppa_list
        sed -i "s@ ${CURRENT_UBUNTU_CODE}@ ${TARGET_CODE}@g" ${PPA_LIST_FILE}
        ;;
    esac
}
###################
dde_warning() {
    ICON_URL='https://gitee.com/ak2/icons/raw/master/deepin.jpg'
    ICON_FILE_NAME='deepin.jpg'
    download_and_cat_icon_img

    cat <<-'ENDofTable'
    DeepinÊ°åÈù¢ÊîØÊåÅË°®Ê†º

    1.Âõ†prootÊó†ÊùÉÂêØÂä®dbus-daemon --system,ÊïÖ‰∏çÊîØÊåÅprootÂÆπÂô®„ÄÇ
    2.Â∑≤ÊµãËØïËøáÁöÑÁ≥ªÁªüÔºö
    ubuntu 20.04Âíåfedora32 arm64 chrootÂÆπÂô®(ÂÆø‰∏ªAndroid)
    deepin 15.5 arm64 chrootÂÆπÂô®(ÂÆø‰∏ªAndroid)
    archlinux amd64 qemuËôöÊãüÊú∫(ÂÆø‰∏ªDebian)+chrootÂÆπÂô®(ÂÆø‰∏ªWSL)
    3.Êú¨Ë°®Ê†ºÊúâÊïàÊúüÊà™Ëá≥2020Âπ¥10Êúà‰∏≠Êó¨,‰ªÖ‰æõÂèÇËÄÉÔºåÂêéÊúü‰ºöÂèëÁîüÂèòÊõ¥„ÄÇ
    4.‰ª•‰∏ãÊï∞ÊçÆ‰ªÖ‰ª£Ë°®tmoe toolsÊâÄÂÆâË£ÖÁöÑddeÔºåÊÇ®ÂèØËá™Ë°åÁºñËØëÊ∫ê‰ª£Á†ÅÔºåÂπ∂‰øÆÂ§çbug„ÄÇ
  ‚ïî‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶
  ‚ïë   ‚ïëvnc/xserver ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë   ‚ïë----------- ‚ïë x11vnc ‚ïëtigervnc‚ïë xserver ‚ïë
  ‚ïë   ‚ïëSystem      ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë 1 ‚ïë Ubuntu     ‚ïë  ‚úì     ‚ïë    Ôºü  ‚ïë   Ôºü    ‚ïë 
  ‚ïë   ‚ïë 20.04 LTS  ‚ïë        ‚ïë        ‚ïë         ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïëFedora      ‚ïë        ‚ïë        ‚ïë         ‚ïë 
  ‚ïë 2 ‚ïë 32         ‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   Ôºü    ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïëArchLinux   ‚ïë        ‚ïë        ‚ïë         ‚ïë 
  ‚ïë 3 ‚ïë arm64      ‚ïë   X    ‚ïë    X   ‚ïë    X    ‚ïë
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïëArchLinux   ‚ïë        ‚ïë        ‚ïë         ‚ïë 
  ‚ïë 4 ‚ïë amd64      ‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   Ôºü    ‚ïë 
  ‚ïë---‚ïë------------‚ïë--------‚ïë--------‚ïë---------‚ïë
  ‚ïë   ‚ïëDeepin      ‚ïë        ‚ïë        ‚ïë         ‚ïë 
  ‚ïë 5 ‚ïë arm64      ‚ïë  ‚úì     ‚ïë   ‚úì    ‚ïë   Ôºü    ‚ïë 
ENDofTable

    cat <<-EOF
    Ëã•ÊÇ®‰ΩøÁî®ÁöÑÊòØdeepinÔºåÂàôÂèØÁõ¥Êé•‰ªéËΩØ‰ª∂Ê∫êÂÆâË£Ö„ÄÇ  
    ÂØπ‰∫éÈô§deepinÂ§ñÁöÑÂÖ∂‰ªñdebianÁ≥ªÂèëË°åÁâàÔºåÊú¨Â∑•ÂÖ∑Ë∞ÉÁî®ÁöÑÊòØ${BLUE}Ubuntu DDE${RESET}ÁöÑËΩØ‰ª∂Ê∫ê,ËÄåÈùû${YELLOW}UOS${RESET}„ÄÇ  
    ÊÇ®ÂèØ‰ª•‰ΩøÁî®Ubuntu LTSÁ≥ªÁªüÊù•ÂÆâË£ÖDDEÔºå ‰æãÂ¶Ç focal  
    ÂØπ‰∫éÁ∫¢Â∏ΩÁ≥ª,ËØ∑ÈÄâfedora,ÂãøÈÄâcentos„ÄÇ  
EOF
    # Ëã•ÊÇ®ÈúÄË¶ÅÂú®arm64ÂÆπÂô®ÁéØÂ¢É‰∏≠ËøêË°å,ÂàôÂª∫ËÆÆÊÇ®‰ΩøÁî® UOS„ÄÇ
    # Ëã•ÊÇ®ÈúÄË¶ÅÂú®x64ÂÆπÂô®ÁéØÂ¢É‰∏≠ËøêË°åÔºåÂàôÂª∫ËÆÆÊÇ®‰ΩøÁî® deepin/arch/fedora/ubuntu„ÄÇ
    case "${TMOE_PROOT}" in
    true) printf "%s\n" "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}PROOTÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºÅ${YELLOW}DDEÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏ËøêË°å${RESET},ÊÇ®ÂèØ‰ª•Êç¢Áî®deepinÊàñfedora chrootÂÆπÂô®ËøõË°åÂÆâË£Ö„ÄÇ" ;;
    false)
        printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂèØËÉΩÂ§Ñ‰∫é${BLUE}chrootÂÆπÂô®${RESET}ÁéØÂ¢É"
        case ${LINUX_DISTRO} in
        redhat) printf "%s\n" "Â∞ΩÊÉÖ‰∫´ÂèóddeÂ∏¶Êù•ÁöÑ‰πêË∂£ÂêßÔºÅ" ;;
        debian | *) printf "%s\n" "Ëã•Êó†Ê≥ïËøêË°åÔºåÂàôËØ∑Êõ¥Êç¢‰∏∫fedoraÂÆπÂô®" ;;
        esac
        ;;
    no) printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®Êó†ÊùÉËØªÂèñ${YELLOW}/proc${RESET}ÁöÑÈÉ®ÂàÜÊï∞ÊçÆÔºå${RED}ËØ∑ÂãøÂÆâË£Ö${RESET}" ;;
    esac
    printf '%s\n' "Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Ödde„ÄÅfonts-noto-cjkÔºàÊÄùÊ∫êÈªë‰ΩìÔºâ„ÄÅfonts-noto-color-emojiËΩØ‰ª∂ÂåÖ„ÄÇ"
    tips_of_tiger_vnc_server
    do_you_want_to_continue
}
################
install_cutefish_desktop() {
    REMOTE_DESKTOP_SESSION_01='cutefish-session'
    REMOTE_DESKTOP_SESSION_02='cutefish-launcher'
    DEPENDENCY_01="cutefish"
    beta_features_quick_install
    apt_purge_libfprint
    configure_vnc_xstartup
}

ubuntu_dde_or_dde_extras() {
    if (whiptail --title "UbuntuDDE or UbuntuDDE-extras" --yes-button "dde" --no-button "dde-extras" --yesno 'The former is more streamlined, and the latter includes some extra software.\nÂâçËÄÖ‰∏∫ÊôÆÈÄödde,ÂêéËÄÖÈô§‰∫ÜddeÊú¨‰ΩìÂ§ñÔºåËøòÂåÖÂê´‰∫ÜddeÈ¢ùÂ§ñËΩØ‰ª∂ÂåÖ' 0 0); then
        DEPENDENCY_01="ubuntudde-dde deepin-terminal"
    else
        DEPENDENCY_01="ubuntudde-dde ubuntudde-dde-extras"
    fi
}
install_deepin_desktop() {
    #deepin_desktop_warning
    case ${AUTO_INSTALL_GUI} in
    true) ;;
    *) dde_warning ;;
    esac

    REMOTE_DESKTOP_SESSION_01='startdde'
    #REMOTE_DESKTOP_SESSION_02='/usr/sbin/deepin-session'
    REMOTE_DESKTOP_SESSION_02='dde-launcher'
    DEPENDENCY_01="deepin-desktop"
    case "${LINUX_DISTRO}" in
    "debian")
        case ${DEBIAN_DISTRO} in
        deepin) DEPENDENCY_01="dde" ;;
        *)
            deepin_desktop_debian
            case ${AUTO_INSTALL_GUI} in
            true) DEPENDENCY_01="ubuntudde-dde-extras" ;;
            *) ubuntu_dde_or_dde_extras ;;
            esac
            ;;
        esac
        dpkg --configure -a
        auto_select_keyboard_layout
        apt clean
        ;;
    "redhat") DEPENDENCY_01='deepin-desktop' ;;
    "arch")
        #pacman -S --noconfirm deepin-kwin
        #pacman -S --noconfirm file-roller evince
        #rm -v ~/.pam_environment 2>/dev/null
        DEPENDENCY_01="deepin xorg deepin-extra lightdm lightdm-deepin-greeter"
        case ${ARCH_TYPE} in
        amd64)
            printf "%s\n" "clutter ‰∏é deepin-clutter ÊúâÂÜ≤Á™Å ; cogl ‰∏é deepin-cogl ÊúâÂÜ≤Á™Å„ÄÇ"
            printf "%s\n" "ÊÇ®ÂèØ‰ª•‰ΩøÁî®${GREEN}pacman -Rs ${BLUE}clutter cogl${RESET}Êù•Ëß£ÂÜ≥"
            printf "%s\n" "Ëã•Â∑≤Ëß£ÂÜ≥ÔºåÂàôËØ∑ÂøΩÁï•‰∏äËø∞ÊèêÁ§∫„ÄÇ"
            ;;
        *)
            #DEPENDENCY_01="deepin xorg"
            printf "%s\n" "Â¶ÇÈúÄÂÆâË£ÖÈ¢ùÂ§ñÁªÑ‰ª∂ÔºåËØ∑ÊâãÂä®Ëæì${GREEN}pacman -Syu${RESET} ${BLUE}deepin-extra lightdm lightdm-deepin-greeter${RESET}"
            printf "%s\n" "Ëã•ÊÇ®ÈúÄË¶ÅÂú®arm64ÂÆπÂô®‰∏≠ÂÆâË£Ödde,ÂàôÊÇ®ÂèØ‰ª•Êç¢Áî® OpenEuler Á≥ªÁªü„ÄÇ"
            do_you_want_to_continue
            ;;
        esac
        ;;
    esac
    ####################
    beta_features_quick_install
    fix_dde_dpkg_error
    # apt_purge_libfprint
    configure_vnc_xstartup
}
############################
fix_dde_dpkg_error() {
    local dpkg_info_dir
    dpkg_info_dir="/var/lib/dpkg/info"
    for i in mincores-dkms warm-sched; do
        if [[ -e ${dpkg_info_dir}/$i.postinst ]]; then
            sed -i '1a\return 0' $i.postinst
        fi
    done
    dpkg --configure -a
}
set_default_xfce_icon_theme() {
    dbus-launch xfconf-query -c xsettings -np /Net/IconThemeName -s ${XFCE_ICON_NAME} 2>/dev/null
    case ${HOME} in
    /root) ;;
    *) chown -Rv ${CURRENT_USER_NAME}:${CURRENT_USER_GROUP} ${HOME}/.config/xfce4 ;;
    esac
}
###############
create_update_icon_caches() {
    cd /usr/local/bin/
    cat >update-icon-caches <<-'EndofFile'
		#!/bin/sh
		case "$1" in
		    ""|-h|--help)
		        printf "%s\n" "Usage: $0 directory [ ... ]"
		        exit 1
		        ;;
		esac

		for dir in "$@"; do
		    if [ ! -d "$dir" ]; then
		        continue
		    fi
		    if [ -f "$dir"/index.theme ]; then
		        if ! gtk-update-icon-cache --force --quiet "$dir"; then
		            printf "%s\n" "WARNING: icon cache generation failed for $dir"
		        fi
		    else
		        rm -f "$dir"/icon-theme.cache
		        rmdir -p --ignore-fail-on-non-empty "$dir"
		    fi
		done
		exit 0
	EndofFile
    chmod a+rx update-icon-caches
}
check_update_icon_caches_sh() {
    if [ ! $(command -v update-icon-caches) ]; then
        create_update_icon_caches
    fi
}
##############
tmoe_desktop_beautification() {
    DEPENDENCY_01=''
    RETURN_TO_WHERE='tmoe_desktop_beautification'
    check_zstd
    BEAUTIFICATION=$(whiptail --title "beautification" --menu \
        "‰Ω†ÊÉ≥Ë¶ÅÂ¶Ç‰ΩïÁæéÂåñÊ°åÈù¢Ôºü\nHow do you want to beautify the DE? " 0 50 0 \
        "1" "üç® themes:‰∏ªÈ¢ò(‰Ω†Êúâ‰∏ÄÂèåÂñÑ‰∫éÂèëÁé∞ÁæéÁöÑÁúºÁùõ)" \
        "2" "üéÄ icon-theme:ÂõæÊ†áÂåÖ(ÁÇπÁºÄÂá∫ÊÉäËâ≥Áªù‰º¶)" \
        "3" "üçπ wallpaper:Â£ÅÁ∫∏(ÊÑüÂèó‰∏áÁâ©‰πãÊÅØ)" \
        "4" "‚Üó mouse cursor(ÁíÄÁí®Â§∫ÁõÆÁöÑÈº†Ê†áÊåáÈíà)" \
        "5" "üí´ dockÊ†è(plank)" \
        "6" "üéá compiz(Â¶ÇËä±ÁÅ´Ëà¨ÁªöÁÉÇ)" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${BEAUTIFICATION}" in
    0 | "") tmoe_linux_tool_menu ;;
    1) configure_theme ;;
    2) download_icon_themes ;;
    3) download_wallpapers ;;
    4) configure_mouse_cursor ;;
    5) install_docky ;;
    6) install_compiz ;;
    esac
    #        "5" "‚õà conky(ÊòæÁ§∫ËµÑÊ∫êÂç†Áî®ÊÉÖÂÜµ,ËøòÊúâ...Â§©Ê∞îÈ¢ÑÊä•)" \    5) install_conky ;;
    ##########################
    press_enter_to_return
    tmoe_desktop_beautification
}
###########
configure_conky() {
    cd ${HOME}
    mkdir -pv github
    cd github
    git clone --depth=1 https://github.com/zagortenay333/Harmattan.git || git clone --depth=1 git://github.com/zagortenay333/Harmattan.git
    printf "%s\n" "ËøõÂÖ•${HOME}/github/Harmattan"
    printf "%s\n" "ÊâßË°åbash preview"
    printf '%s\n' 'To get more help info,please go to github.'
    printf '%s\n' 'https://github.com/zagortenay333/Harmattan'
}
###############
install_conky() {
    DEPENDENCY_01="bc jq"
    DEPENDENCY_02="conky"
    beta_features_quick_install
    configure_conky
    if [ -e "${HOME}/github/Harmattan" ]; then
        configure_conky
    fi
}
###########
install_docky() {
    DEPENDENCY_01=""
    DEPENDENCY_02="plank"
    beta_features_quick_install
}
###########
install_compiz() {
    DEPENDENCY_01="emerald emerald-themes"
    DEPENDENCY_02="compiz"
    beta_features_quick_install
}
##################
configure_theme() {
    #\n‰∏ãËΩΩÂÆåÊàêÂêéÔºåÊÇ®ÈúÄË¶ÅÊâãÂä®‰øÆÊîπÂ§ñËßÇËÆæÁΩÆ‰∏≠ÁöÑÊ†∑ÂºèÂíåÂõæÊ†á„ÄÇ\nÊ≥®ÔºöÊÇ®ÈúÄ‰øÆÊîπÁ™óÂè£ÁÆ°ÁêÜÂô®Ê†∑ÂºèÊâçËÉΩËß£ÂÜ≥Ê†áÈ¢òÊ†è‰∏¢Â§±ÁöÑÈóÆÈ¢ò„ÄÇ
    check_update_icon_caches_sh
    cd /tmp
    RETURN_TO_WHERE='configure_theme'
    INSTALL_THEME=$(whiptail --title "Ê°åÈù¢ÁéØÂ¢É‰∏ªÈ¢ò" --menu \
        "ÊÇ®ÊÉ≥Ë¶Å‰∏ãËΩΩÂì™‰∏™‰∏ªÈ¢òÔºü\n Which theme do you want to download? " 0 50 0 \
        "1" "üåà XFCE-LOOK-parser‰∏ªÈ¢òÈìæÊé•Ëß£ÊûêÂô®" \
        "2" "‚ö° local-theme-installerÊú¨Âú∞‰∏ªÈ¢òÂÆâË£ÖÂô®" \
        "3" "üé≠ win10:kaliÂçßÂ∫ïÊ®°Âºè‰∏ªÈ¢ò" \
        "4" "üö• MacOS:Mojave" \
        "5" "üçé MacOS:Big Sur" \
        "6" "üéã breeze:plasmaÊ°åÈù¢ÂæÆÈ£égtk+Áâà‰∏ªÈ¢ò" \
        "7" "Kali:Flat-Remix-Blue‰∏ªÈ¢ò" \
        "8" "ukui:ÂõΩ‰∫ß‰ºòÈ∫íÈ∫üukuiÊ°åÈù¢‰∏ªÈ¢ò" \
        "9" "arc:ËûçÂêàÈÄèÊòéÂÖÉÁ¥†ÁöÑÂπ≥Èù¢‰∏ªÈ¢ò" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ########################
    case "${INSTALL_THEME}" in
    0 | "") tmoe_desktop_beautification ;;
    1) xfce_theme_parsing ;;
    2) local_theme_installer ;;
    3) install_kali_undercover ;;
    4) download_macos_mojave_theme ;;
    5) download_macos_bigsur_theme ;;
    6) install_breeze_theme ;;
    7) download_kali_theme ;;
    8) download_ukui_theme ;;
    9) install_arc_gtk_theme ;;
    esac
    ######################################
    press_enter_to_return
    configure_theme
}
#######################
local_theme_installer() {
    FILE_EXT_01='tar.gz'
    FILE_EXT_02='tar.xz'
    #where_is_tmoe_file_dir
    START_DIR='/tmp'
    IMPORTANT_TIPS='ÊÇ®ÂèØ‰ª•ÈÄâÊã©Â∑≤Áªè‰∏ãËΩΩËá≥Êú¨Âú∞ÁöÑ‰∏ªÈ¢òÊàñÂõæÊ†áÂéãÁº©ÂåÖ'
    tmoe_file_manager
    if [ -z ${SELECTION} ]; then
        printf "%s\n" "Ê≤°ÊúâÊåáÂÆö${YELLOW}ÊúâÊïà${RESET}ÁöÑ${BLUE}Êñá‰ª∂${GREEN}ÔºåËØ∑${GREEN}ÈáçÊñ∞${RESET}ÈÄâÊã©"
    else
        printf "%s\n" "ÊÇ®ÈÄâÊã©ÁöÑÊñá‰ª∂‰∏∫${TMOE_FILE_ABSOLUTE_PATH}"
        ls -lah ${TMOE_FILE_ABSOLUTE_PATH}
        TMOE_THEME_ITEM=${TMOE_FILE_ABSOLUTE_PATH}
        tar -tf ${TMOE_THEME_ITEM} | cut -d '/' -f 1 | sort -u
        do_you_want_to_continue
        tmoe_theme_installer
    fi
}
#################
check_theme_url() {
    if [ "$(printf '%s\n' "${THEME_TMOE_URL}" | grep -v 'xfce-look.org')" ]; then
        printf "%s\n" "ÂéüÂßãÈìæÊé•‰∏≠‰∏çÂåÖÂê´xfce-lookÔºåÂèØËÉΩ‰ºöÂá∫Áé∞ÈîôËØØ„ÄÇ"
    fi

    if [ "$(printf '%s\n' "${THEME_TMOE_URL}" | grep 'XFCE/p')" ]; then
        TMOE_THEME_STATUS='Ê£ÄÊµãÂà∞ÂΩìÂâçÊñá‰ª∂ÂèØËÉΩÊòØÂõæÊ†áÂåÖ'
    elif [ "$(printf '%s\n' "${THEME_TMOE_URL}" | grep 'Gnome/p')" ]; then
        TMOE_THEME_STATUS='Ê£ÄÊµãÂà∞ÂΩìÂâçÊñá‰ª∂ÂèØËÉΩÊòØGnomeÂõæÊ†áÂåÖ'
    else
        TMOE_THEME_STATUS='‰∏ªÈ¢òÂíåÂõæÊ†áÂåÖÁöÑËß£ÂéãË∑ØÂæÑ‰∏çÂêåÔºåËØ∑ÊâãÂä®Âà§Êñ≠'
    fi

    #ÂΩìÊú™Ê∑ªÂä†httpÊó∂ÔºåÂ∞ÜËá™Âä®‰øÆÂ§ç„ÄÇ
    if [ "$(printf '%s\n' "${THEME_TMOE_URL}" | grep -E 'www')" ] && [ ! "$(printf '%s\n' "${THEME_TMOE_URL}" | grep 'http')" ]; then
        THEME_TMOE_URL=$(printf '%s\n' "${THEME_TMOE_URL}" | sed 's@www@https://&@')
    fi
}
###############
xfce_theme_parsing() {
    THEME_TMOE_URL=$(whiptail --inputbox "ËØ∑ËæìÂÖ•‰∏ªÈ¢òÈìæÊé•Please enter a url\n‰æãÂ¶Çhttps://gnome-look.org/xxÊàñhttps://xfce-look.org/xx" 0 50 --title "Tmoe xfce&gnome theme parser" 3>&1 1>&2 2>&3)

    if [ "$?" != "0" ]; then
        configure_theme
    elif [ -z ${THEME_TMOE_URL} ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑurl"
        printf "%s\n" "Please enter a valid url."
    else
        check_theme_url
    fi

    cd /tmp/
    printf "%s\n" "Ê≠£Âú®‰∏ãËΩΩÁΩëÈ°µÊñá‰ª∂.."
    printf "%s\n" "Downloading index.html..."
    aria2c --console-log-level=warn --no-conf --allow-overwrite=true -o .theme_index_cache_tmoe.html ${THEME_TMOE_URL}

    cat .theme_index_cache_tmoe.html | sed 's@,@\n@g' | grep -E 'tar.xz|tar.gz' | grep '"title"' | sed 's@"@ @g' | awk '{print $3}' | sort -um >.tmoe-linux_cache.01
    THEME_LINE=$(cat .tmoe-linux_cache.01 | wc -l)
    cat .theme_index_cache_tmoe.html | sed 's@,@\n@g' | sed 's@%2F@/@g' | sed 's@%3A@:@g' | sed 's@%2B@+@g' | sed 's@%3D@=@g' | sed 's@%23@#@g' | sed 's@%26@\&@g' | grep -E '"downloaded_count"' | sed 's@"@ @g' | awk '{print $3}' | head -n ${THEME_LINE} | sed 's/ /-/g' | sed 's/$/Ê¨°/g' >.tmoe-linux_cache.02
    TMOE_THEME_FILE_LIST=$(paste -d ' ' .tmoe-linux_cache.01 .tmoe-linux_cache.02 | sed ":a;N;s/\n/ /g;ta")
    rm -f .tmoe-linux_cache.0*

    TMOE_THEME_ITEM=$(whiptail --title "THEME" --menu \
        "ÊÇ®ÊÉ≥Ë¶Å‰∏ãËΩΩÂì™‰∏™‰∏ªÈ¢òÔºü\nWhich theme do you want to download?\nÊñá‰ª∂ÂêçÁß∞                 ‰∏ãËΩΩÊ¨°Êï∞(ÂèØËÉΩÊúâ‰∏•ÈáçÂÅèÂ∑Æ)" 0 0 0 \
        ${TMOE_THEME_FILE_LIST} \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    case ${TMOE_THEME_ITEM} in
    0 | "") configure_theme ;;
    esac
    DOWNLOAD_FILE_URL=$(cat .theme_index_cache_tmoe.html | sed 's@,@\n@g' | sed 's@%2F@/@g' | sed 's@%3A@:@g' | sed 's@%2B@+@g' | sed 's@%3D@=@g' | sed 's@%23@#@g' | sed 's@%26@\&@g' | grep -E 'tar.xz|tar.gz' | grep '"url"' | grep ${TMOE_THEME_ITEM} | sed 's@"@ @g' | awk '{print $3}' | sort -um | head -n 1)
    DOWNLOAD_PATH=/tmp
    aria2c_download_normal_file_s3
    tmoe_theme_installer
}
###################
tmoe_theme_installer() {
    if (whiptail --title "Please choose the file type" --yes-button 'THEME‰∏ªÈ¢ò' --no-button 'ICONÂõæÊ†áÂåÖ' --yesno "Is this file a theme or an icon pack?\nËøô‰∏™Êñá‰ª∂ÊòØ‰∏ªÈ¢òÂåÖËøòÊòØÂõæÊ†áÂåÖÂë¢?(„Å£ ¬∞–î ¬∞)\n${TMOE_THEME_STATUS}" 0 50); then
        EXTRACT_FILE_PATH='/usr/share/themes'
        check_tar_ext_format
    else
        EXTRACT_FILE_PATH='/usr/share/icons'
        check_tar_ext_format
        cd ${EXTRACT_FILE_PATH}
        update-icon-caches ${EXTRACT_FILE_FOLDER} &
        cd /tmp
    fi
    printf "%s\n" "Ëß£ÂéãÂÆåÊàêÔºåÂ¶ÇÈúÄÂà†Èô§ËØ•‰∏ªÈ¢òÔºåËØ∑ÊâãÂä®Ëæì${YELLOW}cd ${EXTRACT_FILE_PATH} ; ls ;rm -rvf ${EXTRACT_FILE_FOLDER} ${RESET}"
    printf "%s\n" "ÊòØÂê¶${RED}Âà†Èô§${RESET}‰∏ªÈ¢òÂéãÁº©ÂåÖ${BLUE}ÂéüÊñá‰ª∂Ôºü${RESET}"
    printf "%s\n" "Do you want to delete the original compressed fileÔºü${PURPLE}[Y/n]${RESET}"
    do_you_want_to_continue
    rm -fv ${TMOE_THEME_ITEM} .theme_index_cache_tmoe.html
}
#########################
install_arc_gtk_theme() {
    DEPENDENCY_01="arc-icon-theme"
    if [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_02="arc-gtk-theme"
    else
        DEPENDENCY_02="arc-theme"
    fi
    beta_features_quick_install
}
################
download_icon_themes() {
    check_update_icon_caches_sh
    cd /tmp
    RETURN_TO_WHERE='download_icon_themes'
    INSTALL_THEME=$(
        whiptail --title "ÂõæÊ†áÂåÖ" --menu \
            "ÊÇ®ÊÉ≥Ë¶Å‰∏ãËΩΩÂì™‰∏™ÂõæÊ†áÂåÖÔºü\n Which icon-theme do you want to download? " 0 50 0 \
            "1" "win11:Êõ¥Êñ∞È¢ñÁöÑUIËÆæËÆ°" \
            "2" "candy:Sweet gradient icons " \
            "3" "pixel:raspberrypiÊ†ëËéìÊ¥æ" \
            "4" "paper:ÁÆÄÁ∫¶„ÄÅÁÅµÂä®„ÄÅÁé∞‰ª£ÂåñÁöÑÂõæÊ†áÂåÖ" \
            "5" "papirus:‰ºòÈõÖÁöÑÂõæÊ†áÂåÖ,Âü∫‰∫épaper" \
            "6" "numix:modernÁé∞‰ª£Âåñ" \
            "7" "moka:ÁÆÄÁ∫¶‰∏ÄËá¥ÁöÑÁæéÂ≠¶" \
            "8" "UOS" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ########################
    case "${INSTALL_THEME}" in
    0 | "") tmoe_desktop_beautification ;;
    1) download_win10x_theme ;;
    2) download_candy_icon_theme ;;
    3) download_raspbian_pixel_icon_theme ;;
    4) download_paper_icon_theme ;;
    5) download_papirus_icon_theme ;;
    6) install_numix_theme ;;
    7) install_moka_theme ;;
    8) download_uos_icon_theme ;;
    esac
    ######################################
    press_enter_to_return
    download_icon_themes
}
###################
install_moka_theme() {
    DEPENDENCY_01=""
    DEPENDENCY_02="moka-icon-theme"
    beta_features_quick_install
}
################
install_numix_theme() {
    DEPENDENCY_01="numix-gtk-theme"
    if [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_02="numix-circle-icon-theme-git"
    else
        DEPENDENCY_02="numix-icon-theme-circle"
    fi
    beta_features_quick_install
}
################
xubuntu_wallpapers() {
    RETURN_TO_WHERE='xubuntu_wallpapers'
    INSTALL_THEME=$(whiptail --title "Ê°åÈù¢Â£ÅÁ∫∏" --menu \
        "ÊÇ®ÊÉ≥Ë¶Å‰∏ãËΩΩÂì™Â•óxubuntuÂ£ÅÁ∫∏ÂåÖÔºü\n Which xubuntu wallpaper-pack do you want to download? " 0 50 0 \
        "1" "xubuntu-trusty" \
        "2" "xubuntu-xenial" \
        "3" "xubuntu-bionic" \
        "4" "xubuntu-focal" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ########################
    case "${INSTALL_THEME}" in
    0 | "") ubuntu_wallpapers_and_photos ;;
    1)
        GREP_NAME_02='xubuntu-community-wallpapers-trusty'
        CUSTOM_WALLPAPER_NAME='xubuntu-community-artwork/trusty'
        download_xubuntu_wallpaper
        ;;
    2)
        GREP_NAME_02='xubuntu-community-wallpapers-xenial'
        CUSTOM_WALLPAPER_NAME='xubuntu-community-artwork/xenial'
        download_xubuntu_wallpaper
        ;;
    3)
        GREP_NAME_02='xubuntu-community-wallpapers-bionic'
        CUSTOM_WALLPAPER_NAME='xubuntu-community-artwork/bionic'
        download_xubuntu_wallpaper
        ;;
    4)
        GREP_NAME_02='xubuntu-community-wallpapers-focal'
        CUSTOM_WALLPAPER_NAME='xubuntu-community-artwork/focal'
        download_xubuntu_wallpaper
        ;;
    esac
    ######################################
    press_enter_to_return
    xubuntu_wallpapers
}
###############
download_xubuntu_wallpaper() {
    if [ -d "${HOME}/ÂõæÁâá" ]; then
        mkdir -pv ${HOME}/ÂõæÁâá/xubuntu-community-artwork
    else
        mkdir -pv ${HOME}/Pictures/xubuntu-community-artwork
    fi
    THEME_NAME='xubuntu_wallpaper'
    WALLPAPER_NAME='xfce4/backdrops'
    GREP_NAME_01='all.deb'
    THEME_URL='https://mirrors.bfsu.edu.cn/ubuntu/pool/universe/x/xubuntu-community-artwork/'
    THEME_URL_02='http://azure.archive.ubuntu.com/ubuntu/pool/universe/x/xubuntu-community-artwork/'
    grep_theme_model_03
    move_wallpaper_model_01
}
###############
ubuntu_gnome_walllpapers() {
    RETURN_TO_WHERE='ubuntu_gnome_walllpapers'
    #cat index.html | sort -u | grep 20.04 | grep all.deb | cut -d '=' -f 4 | cut -d '"' -f 2 |cut -d '_' -f 1 | cut -d '-' -f 3
    INSTALL_THEME=$(whiptail --title "UBUNTUÂ£ÅÁ∫∏" --menu \
        "Download ubuntu wallpaper-packs" 0 50 0 \
        "0" "BackËøîÂõû" \
        "1" "artful" \
        "2" "bionic" \
        "3" "cosmic" \
        "4" "disco" \
        "5" "eoan" \
        "6" "focal" \
        "7" "karmic" \
        "8" "lucid" \
        "9" "maverick" \
        "10" "natty" \
        "11" "oneiric" \
        "12" "precise" \
        "13" "quantal" \
        "14" "raring" \
        "15" "saucy" \
        "16" "trusty" \
        "17" "utopic" \
        "18" "vivid" \
        "19" "wily" \
        "20" "xenial" \
        "21" "yakkety" \
        "22" "zesty" \
        3>&1 1>&2 2>&3)
    ########################
    case "${INSTALL_THEME}" in
    0 | "") ubuntu_wallpapers_and_photos ;;
    1) UBUNTU_CODE="artful" ;;
    2) UBUNTU_CODE="bionic" ;;
    3) UBUNTU_CODE="cosmic" ;;
    4) UBUNTU_CODE="disco" ;;
    5) UBUNTU_CODE="eoan" ;;
    6) UBUNTU_CODE="focal" ;;
    7) UBUNTU_CODE="karmic" ;;
    8) UBUNTU_CODE="lucid" ;;
    9) UBUNTU_CODE="maverick" ;;
    10) UBUNTU_CODE="natty" ;;
    11) UBUNTU_CODE="oneiric" ;;
    12) UBUNTU_CODE="precise" ;;
    13) UBUNTU_CODE="quantal" ;;
    14) UBUNTU_CODE="raring" ;;
    15) UBUNTU_CODE="saucy" ;;
    16) UBUNTU_CODE="trusty" ;;
    17) UBUNTU_CODE="utopic" ;;
    18) UBUNTU_CODE="vivid" ;;
    19) UBUNTU_CODE="wily" ;;
    20) UBUNTU_CODE="xenial" ;;
    21) UBUNTU_CODE="yakkety" ;;
    22) UBUNTU_CODE="zesty" ;;
    esac
    ######################################
    GREP_NAME_02="ubuntu-wallpapers-${UBUNTU_CODE}"
    CUSTOM_WALLPAPER_NAME="ubuntu-wallpapers/${UBUNTU_CODE}"
    download_ubuntu_wallpaper
    press_enter_to_return
    ubuntu_gnome_walllpapers
}
###############
download_ubuntu_wallpaper() {
    if [ -d "${HOME}/ÂõæÁâá" ]; then
        mkdir -pv ${HOME}/ÂõæÁâá/ubuntu-wallpapers
    else
        mkdir -pv ${HOME}/Pictures/ubuntu-wallpapers
    fi
    THEME_NAME='ubuntu_wallpaper'
    WALLPAPER_NAME='backgrounds'
    GREP_NAME_01='all.deb'
    THEME_URL='https://mirrors.bfsu.edu.cn/ubuntu/pool/universe/u/ubuntu-wallpapers/'
    THEME_URL_02='http://azure.archive.ubuntu.com/ubuntu/pool/universe/u/ubuntu-wallpapers/'
    grep_theme_model_03
    move_wallpaper_model_01
}
###############
ubuntu_wallpapers_and_photos() {
    RETURN_TO_WHERE='ubuntu_wallpapers_and_photos'
    INSTALL_THEME=$(whiptail --title "UbuntuÂ£ÅÁ∫∏ÂåÖ" --menu \
        "ÊÇ®ÊÉ≥Ë¶Å‰∏ãËΩΩÂì™Â•óUbuntuÂ£ÅÁ∫∏ÂåÖÔºü\n Which ubuntu wallpaper-pack do you want to download? " 0 50 0 \
        "1" "ubuntu-gnome:(bionic,cosmic,etc.)" \
        "2" "xubuntu-community:(bionic,focal,etc.)" \
        "3" "ubuntu-mate" \
        "4" "ubuntu-kylin ‰ºòÈ∫íÈ∫ü" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ########################
    case "${INSTALL_THEME}" in
    0 | "") download_wallpapers ;;
    1) ubuntu_gnome_walllpapers ;;
    2) xubuntu_wallpapers ;;
    3) download_ubuntu-mate_wallpaper ;;
    4) download_ubuntu_kylin_walllpaper ;;
    esac
    ######################################
    press_enter_to_return
    ubuntu_wallpapers_and_photos
}
#######################
#ubuntukylin-wallpapers_20.04.2.tar.xz
download_ubuntu_kylin_walllpaper() {
    THEME_NAME='ubuntukylin_wallpapers'
    WALLPAPER_NAME='ubuntukylin-wallpapers'
    CUSTOM_WALLPAPER_NAME='ubuntukylin-wallpapers'
    GREP_NAME_01='.tar.xz'
    GREP_NAME_02='ubuntukylin-wallpapers_'
    THEME_URL='https://mirrors.bfsu.edu.cn/ubuntu/pool/universe/u/ubuntukylin-wallpapers/'
    THEME_URL_02='http://azure.archive.ubuntu.com/ubuntu/pool/universe/u/ubuntukylin-wallpapers/'
    grep_theme_model_04
    move_wallpaper_model_02
}
#############
download_ubuntu-mate_wallpaper() {
    GREP_NAME_02='ubuntu-mate-wallpapers-photos'
    THEME_NAME='ubuntu_wallpapers_and_photos'
    WALLPAPER_NAME='backgrounds/ubuntu-mate-photos'
    GREP_NAME_01='all.deb'
    THEME_URL='https://mirrors.bfsu.edu.cn/ubuntu/pool/universe/u/ubuntu-mate-artwork/'
    THEME_URL_02="http://azure.archive.ubuntu.com/ubuntu/pool/universe/u/ubuntu-mate-artwork/"
    if [ "${SET_MINT_AS_WALLPAPER}" = 'true' ]; then
        CUSTOM_WALLPAPER_NAME="backgrounds"
    else
        CUSTOM_WALLPAPER_NAME='ubuntu-mate-photos'
    fi
    grep_theme_model_03
    move_wallpaper_model_01
}
#####################
linux_mint_backgrounds() {
    RETURN_TO_WHERE='linux_mint_backgrounds'
    SET_MINT_AS_WALLPAPER=false
    #cat index.html | grep mint-backgrounds | cut -d '=' -f 3 | cut -d '"' -f 2 | cut -d '/' -f 1 | cut -d '-' -f 3,4
    GREP_NAME_02="mint-backgrounds"
    INSTALL_THEME=$(whiptail --title "MINTÂ£ÅÁ∫∏ÂåÖ" --menu \
        "Download Mint wallpaper-packs" 0 50 0 \
        "0" "BackËøîÂõû" \
        "1" "ulyssa" \
        "2" "ulyana" \
        "3" "tricia" \
        "4" "tina" \
        "5" "tessa" \
        "6" "tara" \
        "7" "sylvia" \
        "8" "sonya" \
        "9" "serena" \
        "10" "sarah" \
        "11" "rosa" \
        "12" "retro" \
        "13" "rebecca" \
        "14" "rafaela" \
        "15" "qiana" \
        "16" "petra" \
        "17" "olivia" \
        "18" "nadia" \
        "19" "maya" \
        "20" "lisa-extra" \
        "21" "katya-extra" \
        "22" "xfce-2014" \
        3>&1 1>&2 2>&3)
    ########################
    case "${INSTALL_THEME}" in
    0 | "") download_wallpapers ;;
    1) MINT_CODE="ulyssa" ;;
    2) MINT_CODE="ulyana" ;;
    3) MINT_CODE="tricia" ;;
    4) MINT_CODE="tina" ;;
    5) MINT_CODE="tessa" ;;
    6) MINT_CODE="tara" ;;
    7) MINT_CODE="sylvia" ;;
    8) MINT_CODE="sonya" ;;
    9) MINT_CODE="serena" ;;
    10) MINT_CODE="sarah" ;;
    11) MINT_CODE="rosa" ;;
    12) MINT_CODE="retro" ;;
    13) MINT_CODE="rebecca" ;;
    14) MINT_CODE="rafaela" ;;
    15) MINT_CODE="qiana" ;;
    16) MINT_CODE="petra" ;;
    17) MINT_CODE="olivia" ;;
    18) MINT_CODE="nadia" ;;
    19) MINT_CODE="maya" ;;
    20) MINT_CODE="lisa-extra" ;;
    21) MINT_CODE="katya-extra" ;;
    22)
        MINT_CODE="xfce"
        GREP_NAME_02="_2014.06.09"
        ;;
    esac
    ######################################
    download_mint_backgrounds
    press_enter_to_return
    linux_mint_backgrounds
}
###############
download_mint_backgrounds() {
    if [ "${MINT_CODE}" = 'xfce' ]; then
        WALLPAPER_NAME='xfce4/backdrops'
    else
        WALLPAPER_NAME="backgrounds/linuxmint-${MINT_CODE}"
    fi
    if [ "${SET_MINT_AS_WALLPAPER}" = 'true' ]; then
        CUSTOM_WALLPAPER_NAME="backgrounds"
    else
        CUSTOM_WALLPAPER_NAME="mint-backgrounds/linuxmint-${MINT_CODE}"
        if [ -d "${HOME}/ÂõæÁâá" ]; then
            mkdir -pv ${HOME}/ÂõæÁâá/mint-backgrounds
        else
            mkdir -pv ${HOME}/Pictures/mint-backgrounds
        fi
    fi
    THEME_NAME="mint_backgrounds_${MINT_CODE}"
    GREP_NAME_01='all.deb'
    THEME_URL="https://mirrors.bfsu.edu.cn/linuxmint/pool/main/m/mint-backgrounds-${MINT_CODE}/"
    THEME_URL_02="http://packages.linuxmint.com/pool/main/m/mint-backgrounds-${MINT_CODE}/" #Êó†tls
    grep_theme_model_03
    move_wallpaper_model_01
}
###############
download_wallpapers() {
    cd /tmp
    unset THE_LATEST_THEME_VERSION_02 THEME_URL_02
    SET_MINT_AS_WALLPAPER=false
    FORCIBLY_DOWNLOAD=false
    RETURN_TO_WHERE='download_wallpapers'
    INSTALL_THEME=$(whiptail --title "Ê°åÈù¢Â£ÅÁ∫∏" --menu \
        "ÊÇ®ÊÉ≥Ë¶Å‰∏ãËΩΩÂì™Â•óÂ£ÅÁ∫∏ÂåÖÔºü\n Which wallpaper-pack do you want to download? " 0 50 0 \
        "1" "ubuntu:Ê±áËÅö‰∫ÜÂÆòÊñπÂèäÁ§æÂå∫ÁöÑÁªùËµûÂ£ÅÁ∫∏ÂåÖ" \
        "2" "Mint:ËÅÜÂê¨Ëá™ÁÑ∂ÁöÑÂæãÂä®‰∏éÈ£é‰πãÂëºÂê∏,ÊÑüÂèóÊ∏ÖÊñ∞ËÄåÂîØÁæé" \
        "3" "deepin-community+official Ê∑±Â∫¶" \
        "4" "elementary(Â¶ÇÊ≤êÊò•È£é)" \
        "5" "raspberrypi pixelÊ†ëËéìÊ¥æ(ÁæéÂ¶ÇÁîªÂç∑)" \
        "6" "manjaro-2017+2018" \
        "7" "gnome-backgrounds(ÁÆÄÂçïËÄåÁ∫ØÁ≤π)" \
        "8" "xfce-artwork" \
        "9" "arch(È¢ÜÁï•Âà´Ê†∑Ëâ∫ÊúØ)" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ########################
    case "${INSTALL_THEME}" in
    0 | "") tmoe_desktop_beautification ;;
    1) ubuntu_wallpapers_and_photos ;;
    2) linux_mint_backgrounds ;;
    3) download_deepin_wallpaper ;;
    4) download_elementary_wallpaper ;;
    5) download_raspbian_pixel_wallpaper ;;
    6) download_manjaro_wallpaper ;;
    7) download_debian_gnome_wallpaper ;;
    8) download_arch_xfce_artwork ;;
    9) download_arch_wallpaper ;;
    esac
    ######################################
    press_enter_to_return
    download_wallpapers
}
############
configure_mouse_cursor() {
    printf "%s\n" "chameleon:Áé∞‰ª£ÂåñÈº†Ê†áÊåáÈíà‰∏ªÈ¢ò"
    printf '%s\n' 'Do you want to download it?'
    do_you_want_to_continue
    download_chameleon_cursor_theme
}
################################
download_paper_icon_theme() {
    THEME_NAME='paper_icon_theme'
    ICON_NAME='Paper /usr/share/icons/Paper-Mono-Dark'
    GREP_NAME='paper-icon-theme'
    THEME_URL='https://mirrors.bfsu.edu.cn/manjaro/pool/overlay/'
    THEME_URL_02="https://repo.ialab.dsu.edu/manjaro/pool/overlay/"
    grep_theme_model_02
    update_icon_caches_model_02
    XFCE_ICON_NAME='Paper'
    set_default_xfce_icon_theme
}
#############
download_papirus_icon_theme() {
    THEME_NAME='papirus_icon_theme'
    ICON_NAME='Papirus /usr/share/icons/Papirus-Dark /usr/share/icons/Papirus-Light /usr/share/icons/ePapirus'
    GREP_NAME='papirus-icon-theme'
    THEME_URL='https://mirrors.bfsu.edu.cn/debian/pool/main/p/papirus-icon-theme/'
    THEME_URL_02='https://ftp.debian.org/debian/pool/main/p/papirus-icon-theme/'
    grep_theme_model_01
    update_icon_caches_model_01
    XFCE_ICON_NAME='Papirus'
    set_default_xfce_icon_theme
}
############################
download_raspbian_pixel_wallpaper() {
    THEME_NAME='raspberrypi_pixel_wallpaper'
    WALLPAPER_NAME='pixel-wallpaper'
    CUSTOM_WALLPAPER_NAME='raspberrypi-pixel-wallpapers'
    GREP_NAME='pixel-wallpaper'
    THEME_URL='https://mirrors.bfsu.edu.cn/raspberrypi/pool/ui/p/pixel-wallpaper/'
    THEME_URL_02='https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/pool/ui/p/pixel-wallpaper/'
    grep_theme_model_01
    move_wallpaper_model_01
}
########
download_debian_gnome_wallpaper() {
    THEME_NAME='gnome_backgrounds'
    WALLPAPER_NAME='backgrounds/gnome'
    CUSTOM_WALLPAPER_NAME='gnome-backgrounds'
    GREP_NAME='gnome-backgrounds'
    THEME_URL='https://mirrors.bfsu.edu.cn/debian/pool/main/g/gnome-backgrounds/'
    THEME_URL_02='https://ftp.debian.org/debian/pool/main/g/gnome-backgrounds/'
    grep_theme_model_01
    move_wallpaper_model_01
}
##############
download_deepin_wallpaper() {
    THEME_NAME='deepin-wallpapers'
    WALLPAPER_NAME='wallpapers/deepin'
    GREP_NAME='deepin-community-wallpapers'
    CUSTOM_WALLPAPER_NAME='deepin-community'
    THEME_URL='https://mirrors.bfsu.edu.cn/deepin/pool/main/d/deepin-wallpapers/'
    THEME_URL_02='https://mirrors.tuna.tsinghua.edu.cn/deepin/pool/main/d/deepin-wallpapers/'
    grep_theme_model_01
    move_wallpaper_model_01
    GREP_NAME='deepin-wallpapers_'
    CUSTOM_WALLPAPER_NAME='deepin-wallpapers'
    grep_theme_model_01
    move_wallpaper_model_01
}
##########
download_manjaro_pkg() {
    check_theme_folder
    mkdir -pv /tmp/.${THEME_NAME}
    cd /tmp/.${THEME_NAME}
    printf "%s\n" "${THEME_URL}"
    aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o 'data.tar.xz' "${THEME_URL}" || aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o 'data.tar.xz' "${THEME_URL_02}"
}
############
link_to_debian_wallpaper() {
    if [ -e "/usr/share/backgrounds/kali/" ]; then
        if [ -d "${HOME}/ÂõæÁâá" ]; then
            ln -sf /usr/share/backgrounds/kali/ ${HOME}/ÂõæÁâá/kali
        else
            mkdir -pv ${HOME}/Pictures
            ln -sf /usr/share/backgrounds/kali/ ${HOME}/Pictures/kali
        fi
    fi
    #########
    DEBIAN_MOONLIGHT='/usr/share/desktop-base/moonlight-theme/wallpaper/contents/images/'
    if [ -e "${DEBIAN_MOONLIGHT}" ]; then
        if [ -d "${HOME}/ÂõæÁâá" ]; then
            ln -sf ${DEBIAN_MOONLIGHT} ${HOME}/ÂõæÁâá/debian-moonlight
        else
            ln -sf ${DEBIAN_MOONLIGHT} ${HOME}/Pictures/debian-moonlight
        fi
    fi
    DEBIAN_LOCK_SCREEN='/usr/share/desktop-base/lines-theme/lockscreen/contents/images/'
    if [ -e "${DEBIAN_LOCK_SCREEN}" ]; then
        if [ -d "${HOME}/ÂõæÁâá" ]; then
            ln -sf ${DEBIAN_LOCK_SCREEN} ${HOME}/ÂõæÁâá/debian-lockscreen
        else
            ln -sf ${DEBIAN_LOCK_SCREEN} ${HOME}/Pictures/debian-lockscreen
        fi
    fi
}
#########
download_manjaro_wallpaper() {
    THEME_NAME='manjaro-2018'
    THEME_URL='https://mirrors.bfsu.edu.cn/manjaro/pool/overlay/wallpapers-2018-1.2-1-any.pkg.tar.xz'
    THEME_URL_02='https://repo.ialab.dsu.edu/manjaro/pool/overlay/wallpapers-2018-1.2-1-any.pkg.tar.xz'
    WALLPAPER_NAME='backgrounds/wallpapers-2018'
    CUSTOM_WALLPAPER_NAME='manjaro-2018'
    download_manjaro_pkg
    move_wallpaper_model_01
    ##############
    THEME_NAME='manjaro-2017'
    THEME_URL='https://mirrors.bfsu.edu.cn/manjaro/pool/overlay/manjaro-sx-wallpapers-20171023-1-any.pkg.tar.xz'
    THEME_URL_02='https://repo.ialab.dsu.edu/manjaro/pool/overlay/wallpapers-2018-1.2-1-any.pkg.tar.xz'
    WALLPAPER_NAME='backgrounds'
    CUSTOM_WALLPAPER_NAME='manjaro-2017'
    download_manjaro_pkg
    move_wallpaper_model_01
    ##################
}
#########
download_arch_wallpaper() {
    link_to_debian_wallpaper
    GREP_NAME='archlinux-wallpaper'
    #https://mirrors.bfsu.edu.cn/archlinux/pool/community/archlinux-wallpaper-1.4-6-any.pkg.tar.xz
    WALLPAPER_NAME='backgrounds/archlinux'
    CUSTOM_WALLPAPER_NAME='archlinux'
    THEME_URL='https://mirrors.bfsu.edu.cn/archlinux/pool/community/'
    THEME_URL_02='https://mirrors.tuna.tsinghua.edu/archlinux/pool/community/'
    check_theme_folder
    download_arch_community_repo_html
    grep_arch_linux_pkg_02
    move_wallpaper_model_01
}
##############
download_arch_xfce_artwork() {
    #check_zstd
    GREP_NAME='xfce4-artwork'
    #https://mirrors.bfsu.edu.cn/archlinux/pool/community/archlinux-wallpaper-1.4-6-any.pkg.tar.xz
    WALLPAPER_NAME='backgrounds/xfce'
    CUSTOM_WALLPAPER_NAME='xfce-artwork'
    THEME_URL='https://mirrors.bfsu.edu.cn/archlinux/extra/os/x86_64/'
    THEME_URL_02='https://mirrors.tuna.tsinghua.edu/archlinux/extra/os/x86_64/'
    check_theme_folder
    download_arch_community_repo_html
    grep_arch_linux_pkg_02
    move_wallpaper_model_01
}
########################
download_elementary_wallpaper() {
    #https://mirrors.bfsu.edu.cn/archlinux/pool/community/elementary-wallpapers-5.5.0-1-any.pkg.tar.xz
    GREP_NAME='elementary-wallpapers'
    WALLPAPER_NAME='wallpapers/elementary'
    CUSTOM_WALLPAPER_NAME='elementary'
    THEME_URL='https://mirrors.bfsu.edu.cn/archlinux/pool/community/'
    THEME_URL_02='https://mirrors.tuna.tsinghua.edu.cn/pool/community/'
    check_theme_folder
    download_arch_community_repo_html
    grep_arch_linux_pkg
    #ËØ•ÂåÖÊó†zstÊ†ºÂºè
    move_wallpaper_model_01
    #elementary-wallpapers-5.5.0-1-any.pkg.tar.xz
}
################
download_kali_themes_common() {
    check_update_icon_caches_sh
    THEME_NAME='kali-themes-common'
    GREP_NAME='kali-themes-common'
    ICON_NAME='Flat-Remix-Blue-Dark /usr/share/icons/Flat-Remix-Blue-Light /usr/share/icons/desktop-base'
    THEME_URL='https://mirrors.bfsu.edu.cn/kali/pool/main/k/kali-themes/'
    THEME_URL_02='http://http.kali.org/kali/pool/main/k/kali-themes/'
    grep_theme_model_01
    update_icon_caches_model_01
}
####################
download_kali_theme() {
    if [ ! -e "/usr/share/desktop-base/kali-theme" ]; then
        download_kali_themes_common
    else
        printf "%s\n" "Ê£ÄÊµãÂà∞kali_themes_commonÂ∑≤‰∏ãËΩΩÔºåÊòØÂê¶ÈáçÊñ∞‰∏ãËΩΩÔºü"
        do_you_want_to_continue
        download_kali_themes_common
    fi
    printf "%s\n" "Download completed.Â¶ÇÈúÄÂà†Èô§ÔºåËØ∑ÊâãÂä®Ëæìrm -rf /usr/share/desktop-base/kali-theme /usr/share/icons/desktop-base /usr/share/icons/Flat-Remix-Blue-Light /usr/share/icons/Flat-Remix-Blue-Dark"
    XFCE_ICON_NAME='Flat-Remix-Blue-Light'
    set_default_xfce_icon_theme
}
##################
download_candy_icon_theme() {
    ICON_DIR="/usr/share/icons/candy-icons"
    ICON_TMP_DIR="/tmp/.CANDY_ICON_THEME"
    if [ -d "${ICON_DIR}" ]; then
        printf "%s\n" "Do you want to download againÔºü"
        RETURN_TO_WHERE='configure_theme'
        do_you_want_to_continue
    fi

    if [ -d "${ICON_TMP_DIR}" ]; then
        rm -rf ${ICON_TMP_DIR}
    fi
    mkdir -pv ${ICON_TMP_DIR}
    cd ${ICON_TMP_DIR}
    printf "${YELLOW}%s${RESET}\n" "https://github.com/EliverLara/candy-icons"
    curl -Lo master.zip https://ghproxy.com/https://github.com/EliverLara/candy-icons/archive/refs/heads/master.zip || curl -Lo master.zip https://download.fastgit.org/EliverLara/candy-icons/archive/refs/heads/master.zip || curl -Lo master.zip https://github.com/EliverLara/candy-icons/archive/refs/heads/master.zip
    unzip master.zip
    mv candy-icons-master ${ICON_DIR}
    update-icon-caches ${ICON_DIR} 2>/dev/null &
    cd /tmp
    rm -rf ${ICON_TMP_DIR}
    printf "%s\n" "If you want to remove it, then type ${RED}rm ${YELLOW}-rf ${BLUE}${ICON_DIR}${RESET}"
    XFCE_ICON_NAME='candy-icons'
    # GNOME_ICON_NAME='Candy-icons'
    set_default_xfce_icon_theme
}
##################
download_win10x_theme() {
    if [ -d "/usr/share/icons/We10X-Valley-dark" ]; then
        printf "%s\n" "Ê£ÄÊµãÂà∞ÂõæÊ†áÂåÖÂ∑≤‰∏ãËΩΩÔºåÊòØÂê¶ÈáçÊñ∞‰∏ãËΩΩÔºü"
        RETURN_TO_WHERE='configure_theme'
        do_you_want_to_continue
    fi

    if [ -d "/tmp/.WINDOWS_11_ICON_THEME" ]; then
        rm -rf /tmp/.WINDOWS_11_ICON_THEME
    fi

    git clone -b win10x --depth=1 https://gitee.com/mo2/xfce-themes.git /tmp/.WINDOWS_11_ICON_THEME
    cd /tmp/.WINDOWS_11_ICON_THEME
    GITHUB_URL=$(cat url.txt)
    tar -Jxvf We10X.tar.xz -C /usr/share/icons 2>/dev/null
    update-icon-caches /usr/share/icons/We10X-Valley-dark /usr/share/icons/We10X-Valley 2>/dev/null &
    printf "%s\n" "${GITHUB_URL}"
    cd /tmp
    rm -rf /tmp/.WINDOWS_11_ICON_THEME
    printf "%s\n" "Download completed.Â¶ÇÈúÄÂà†Èô§ÔºåËØ∑ÊâãÂä®Ëæìrm -rf /usr/share/icons/We10X-Valley-dark /usr/share/icons/We10X-Valley"
    XFCE_ICON_NAME='We10X-Valley'
    set_default_xfce_icon_theme
}
###################
download_uos_icon_theme() {
    DEPENDENCY_01="deepin-icon-theme"
    DEPENDENCY_02=""

    beta_features_quick_install

    if [ -d "/usr/share/icons/Uos" ]; then
        printf "%s\n" "Ê£ÄÊµãÂà∞UosÂõæÊ†áÂåÖÂ∑≤‰∏ãËΩΩ,ÊòØÂê¶ÁªßÁª≠Ôºü${PURPLE}[Y/n]${RESET}"
        RETURN_TO_WHERE='configure_theme'
        do_you_want_to_continue
    fi

    if [ -d "/tmp/UosICONS" ]; then
        rm -rf /tmp/UosICONS
    fi

    git clone -b Uos --depth=1 https://gitee.com/mo2/xfce-themes.git /tmp/UosICONS
    cd /tmp/UosICONS
    GITHUB_URL=$(cat url.txt)
    tar -Jxvf Uos.tar.xz -C /usr/share/icons 2>/dev/null
    update-icon-caches /usr/share/icons/Uos 2>/dev/null &
    printf "%s\n" "${GITHUB_URL}"
    rm -rf /tmp/UosICONS
    printf "%s\n" "Download completed.Â¶ÇÈúÄÂà†Èô§ÔºåËØ∑ÊâãÂä®Ëæìrm -rf /usr/share/icons/Uos ; ${TMOE_REMOVAL_COMMAND} deepin-icon-theme"
    XFCE_ICON_NAME='Uos'
    set_default_xfce_icon_theme
}
#####################
download_macos_bigsur_theme() {
    if [ -d "/usr/share/icons/WhiteSur-dark" ]; then
        printf "%s\n" "Ê£ÄÊµãÂà∞‰∏ªÈ¢òÂ∑≤‰∏ãËΩΩÔºåÊòØÂê¶ÈáçÊñ∞‰∏ãËΩΩÔºü"
        RETURN_TO_WHERE='configure_theme'
        do_you_want_to_continue
    fi
    TEMP_FOLDER='/tmp/BIGSUR_TEMP_FOLDER'
    if [ -e "${TEMP_FOLDER}" ]; then
        rm -rvf ${TEMP_FOLDER}
    fi
    git clone -b master --depth=1 https://gitee.com/ak2/bigsur-gtk-theme.git ${TEMP_FOLDER}
    cd ${TEMP_FOLDER}
    GITHUB_URL=$(cat url.txt)
    tar -Jxvf WhiteSur.tar.xz -C /usr/share/icons 2>/dev/null
    tar -Jxvf WhiteSur-light-alt.tar.xz -C /usr/share/themes 2>/dev/null
    tar -Jxvf WhiteSur-dark.tar.xz -C /usr/share/themes 2>/dev/null
    update-icon-caches /usr/share/icons/WhiteSur /usr/share/icons/WhiteSur-dark 2>/dev/null &
    rm -rvf ${TEMP_FOLDER}
    printf "%s\n" "${GITHUB_URL}"
    printf "%s\n" "Download completed.Â¶ÇÈúÄÂà†Èô§ÔºåËØ∑ÊâãÂä®Ëæìrm -rf /usr/share/themes/WhiteSur-dark /usr/share/themes/WhiteSur-light-alt /usr/share/icons/WhiteSur /usr/share/icons/WhiteSur-dark"
    XFCE_ICON_NAME='WhiteSur'
    set_default_xfce_icon_theme
}
#######################
download_macos_mojave_theme() {
    if [ -d "/usr/share/themes/Mojave-dark" ]; then
        printf "%s\n" "Ê£ÄÊµãÂà∞‰∏ªÈ¢òÂ∑≤‰∏ãËΩΩÔºåÊòØÂê¶ÈáçÊñ∞‰∏ãËΩΩÔºü"
        RETURN_TO_WHERE='configure_theme'
        do_you_want_to_continue
    fi

    if [ -d "/tmp/McMojave" ]; then
        rm -rf /tmp/McMojave
    fi

    git clone -b McMojave --depth=1 https://gitee.com/mo2/xfce-themes.git /tmp/McMojave
    cd /tmp/McMojave
    GITHUB_URL=$(cat url.txt)
    tar -Jxvf 01-Mojave-dark.tar.xz -C /usr/share/themes 2>/dev/null
    tar -Jxvf 01-McMojave-circle.tar.xz -C /usr/share/icons 2>/dev/null
    update-icon-caches /usr/share/icons/McMojave-circle-dark /usr/share/icons/McMojave-circle 2>/dev/null &
    printf "%s\n" "${GITHUB_URL}"
    rm -rf /tmp/McMojave
    printf "%s\n" "Download completed.Â¶ÇÈúÄÂà†Èô§ÔºåËØ∑ÊâãÂä®Ëæìrm -rf /usr/share/themes/Mojave-dark /usr/share/icons/McMojave-circle-dark /usr/share/icons/McMojave-circle"
    XFCE_ICON_NAME='McMojave-circle'
    set_default_xfce_icon_theme
}
########################
download_ukui_theme() {
    DEPENDENCY_01="ukui-themes"
    DEPENDENCY_02="ukui-greeter"

    beta_features_quick_install

    if [ ! -e '/usr/share/icons/ukui-icon-theme-default' ] && [ ! -e '/usr/share/icons/ukui-icon-theme' ]; then
        mkdir -pv /tmp/.ukui-gtk-themes
        cd /tmp/.ukui-gtk-themes
        UKUITHEME="$(curl -LfsS 'https://mirrors.bfsu.edu.cn/debian/pool/main/u/ukui-themes/' | grep all.deb | tail -n 1 | cut -d '=' -f 3 | cut -d '"' -f 2)"
        aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o 'ukui-themes.deb' "https://mirrors.bfsu.edu.cn/debian/pool/main/u/ukui-themes/${UKUITHEME}"
        ar xv 'ukui-themes.deb'
        cd /
        tar -Jxvf /tmp/.ukui-gtk-themes/data.tar.xz ./usr
        #if which update-icon-caches >/dev/null 2>&1; then
        update-icon-caches /usr/share/icons/ukui-icon-theme-basic /usr/share/icons/ukui-icon-theme-classical /usr/share/icons/ukui-icon-theme-default 2>/dev/null &
        update-icon-caches /usr/share/icons/ukui-icon-theme 2>/dev/null &
        #fi
        rm -rf /tmp/.ukui-gtk-themes
        #apt install -y ./ukui-themes.deb
        #rm -f ukui-themes.deb
        #apt install -y ukui-greeter
    else
        printf '%s\n' 'ËØ∑ÂâçÂæÄÂ§ñËßÇËÆæÁΩÆÊâãÂä®‰øÆÊîπÂõæÊ†á'
    fi
    XFCE_ICON_NAME='ukui-icon-theme'
    set_default_xfce_icon_theme
    #update-icon-caches /usr/share/icons/ukui-icon-theme/ 2>/dev/null
    #printf "%s\n" "ÂÆâË£ÖÂÆåÊàêÔºåÂ¶ÇÈúÄÂç∏ËΩΩÔºåËØ∑ÊâãÂä®Ëæì${TMOE_REMOVAL_COMMAND} ukui-themes"
}
#################################
download_arch_breeze_adapta_cursor_theme() {
    mkdir -pv /tmp/.breeze_theme
    cd /tmp/.breeze_theme
    THEME_URL='https://mirrors.bfsu.edu.cn/archlinuxcn/any/'
    THEME_URL_02='https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/any/'
    curl -Lo index.html ${THEME_URL}
    GREP_NAME='breeze-adapta-cursor-theme-git'
    grep_arch_linux_pkg_02
    #tar -Jxvf data.tar.xz 2>/dev/null
    tar -I zstd -xvf data.tar.zst
    cp -rf usr /
    rm -rf /tmp/.breeze_theme
}
#############
install_breeze_theme() {
    DEPENDENCY_01="breeze-icon-theme"
    DEPENDENCY_02="breeze-cursor-theme breeze-gtk-theme xfwm4-theme-breeze"
    download_arch_breeze_adapta_cursor_theme
    if [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_01="breeze-icons breeze-gtk"
        DEPENDENCY_02="xfwm4-theme-breeze capitaine-cursors"
        if [ $(command -v grub-install) ]; then
            DEPENDENCY_02="${DEPENDENCY_02} breeze-grub"
        fi
    fi
    beta_features_quick_install
}
#################
download_chameleon_cursor_theme() {
    CUSTOM_WALLPAPER_NAME='breeze-cursor-theme'
    THEME_NAME='breeze-cursor-theme'
    GREP_NAME="${THEME_NAME}"
    THEME_URL='https://mirrors.bfsu.edu.cn/debian/pool/main/b/breeze/'
    THEME_URL_02='https://ftp.debian.org/debian/pool/main/b/breeze/'
    grep_theme_model_01
    upcompress_deb_file
    #############
    GREP_NAME='all'
    THEME_NAME='chameleon-cursor-theme'
    THEME_URL='https://mirrors.bfsu.edu.cn/debian/pool/main/c/chameleon-cursor-theme/'
    THEME_URL_02='https://ftp.debian.org/debian/pool/main/c/chameleon-cursor-theme/'
    grep_theme_model_01
    upcompress_deb_file
    ##############
    THEME_NAME='moblin-cursor-theme'
    THEME_URL='https://mirrors.bfsu.edu.cn/debian/pool/main/m/moblin-cursor-theme/'
    THEME_URL_02='https://ftp.debian.org/debian/pool/main/m/moblin-cursor-theme/'
    grep_theme_model_01
    upcompress_deb_file
    ##########
}
##########
install_kali_undercover() {
    if [ -e "/usr/share/icons/Windows-10-Icons" ]; then
        printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®Â∑≤ÂÆâË£Öwin10‰∏ªÈ¢ò"
        printf "%s\n" "Â¶ÇÈúÄÁßªÈô§ÔºåËØ∑ÊâãÂä®Ëæì${TMOE_REMOVAL_COMMAND} kali-undercover;rm -rf /usr/share/icons/Windows-10-Icons /usr/share/themes/Windows-10 /usr/local/bin/kali-undercover"
        printf "%s\n" "ÊòØÂê¶ÈáçÊñ∞‰∏ãËΩΩÔºü"
        RETURN_TO_WHERE='configure_theme'
        do_you_want_to_continue
    fi
    DEPENDENCY_01="kali-undercover"
    DEPENDENCY_02=""
    #case "${LINUX_DISTRO}" in
    #"debian") beta_features_quick_install ;;
    #esac
    #Ê≠§Â§ÑÈúÄÂÅö‰∏§Ê¨°Âà§Êñ≠
    #if [ "${DEBIAN_DISTRO}" = "kali" ]; then
    #    beta_features_quick_install
    #else
    mkdir -pv /tmp/.kali-undercover-win10-theme
    cd /tmp/.kali-undercover-win10-theme
    UNDERCOVER_REPO="https://mirrors.bfsu.edu.cn/kali/pool/main/k/kali-undercover"
    UNDERCOVERlatestLINK="$(curl -L "${UNDERCOVER_REPO}/" | grep all.deb | tail -n 1 | cut -d '=' -f 3 | cut -d '"' -f 2)"
    aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o kali-undercover.deb "${UNDERCOVER_REPO}/${UNDERCOVERlatestLINK}"
    if [[ ! -s kali-undercover.deb ]]; then
        apt download kali-undercover
        mv *deb kali-undercover.deb
    fi
    #apt-cache show ./kali-undercover.deb
    #apt install -y ./kali-undercover.deb
    #if [ ! -e "/usr/share/icons/Windows-10-Icons" ]; then
    THE_LATEST_DEB_FILE='kali-undercover.deb'
    ar xv ${THE_LATEST_DEB_FILE}
    cd /
    tar -Jxvf /tmp/.kali-undercover-win10-theme/data.tar.xz ./usr
    mv -f /usr/bin/kali-undercover /usr/local/bin/
    #if which gtk-update-icon-cache >/dev/null 2>&1; then
    update-icon-caches /usr/share/icons/Windows-10-Icons 2>/dev/null &
    #fi
    #fi
    rm -rfv /tmp/.kali-undercover-win10-theme
    #rm -f ./kali-undercover.deb
    #fi
    #XFCE_ICON_NAME='Windows 10'
}
#################
modify_remote_desktop_config() {
    RETURN_TO_WHERE='modify_remote_desktop_config'
    RETURN_TO_TMOE_MENU_01='modify_remote_desktop_config'
    ##################
    REMOTE_DESKTOP=$(whiptail --title "REMOTE DESKTOP" --menu \
        "ÊÇ®ÊÉ≥Ë¶Å‰øÆÊîπÂì™‰∏™ËøúÁ®ãÊ°åÈù¢ÁöÑÈÖçÁΩÆÔºü\nWhich remote desktop config do you want to modify?" 0 50 0 \
        "1" "üêØ tightvnc/tigervnc:Â∫îÁî®ÂπøÊ≥õ" \
        "2" "‚öîÔ∏è x11vnc:ÈÄöËøáVNCÊù•ËøûÊé•ÁúüÂÆûXÊ°åÈù¢" \
        "3" "‚öíÔ∏è Xserver:(XSDL/VcXsrv)" \
        "4" "novnc(HTML5 vnc client)" \
        "5" "‚öõÔ∏è XRDP:Âü∫‰∫émicrosoftÂºÄÂèëÁöÑrdpÂçèËÆÆ" \
        "0" "Back to the main menu ËøîÂõû‰∏ªËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############################
    case "${REMOTE_DESKTOP}" in
    0 | "") tmoe_linux_tool_menu ;;
    1) modify_vnc_conf ;;
    2) configure_x11vnc ;;
    3) modify_xsdl_conf ;;
    4) modify_novnc_conf ;;
    5) modify_xrdp_conf ;;
    esac
    #######################
    press_enter_to_return
    modify_remote_desktop_config
}
#########################
modify_novnc_conf() {
    source ${TMOE_TOOL_DIR}/gui/configure_novnc
}
#################
configure_x11vnc() {
    #17 50 8
    # "1" "one-key configureÂàùÂßãÂåñ‰∏ÄÈîÆÈÖçÁΩÆ" \
    TMOE_OPTION=$(
        whiptail --title "CONFIGURE x11vnc" --menu "Type startx11vnc to start vncserver,ËæìÂÖ•startx11vncÂêØÂä®x11vncÊúçÂä°" 0 0 0 \
            "1" "pulse_serverÈü≥È¢ëÊúçÂä°" \
            "2" "resolutionÂàÜËæ®Áéá" \
            "3" "portÁ´ØÂè£" \
            "4" "‰øÆÊîπstartx11vncÂêØÂä®ËÑöÊú¨" \
            "5" "remove Âç∏ËΩΩ/ÁßªÈô§" \
            "6" "readme ËøõÁ®ãÁÆ°ÁêÜËØ¥Êòé" \
            "7" "password ÂØÜÁ†Å" \
            "8" "read docÈòÖËØªÊñáÊ°£" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ##############################
    case "${TMOE_OPTION}" in
    0 | "") modify_remote_desktop_config ;;
    # 1) x11vnc_onekey ;;
    1) x11vnc_pulse_server ;;
    2) x11vnc_resolution ;;
    3) x11vnc_port ;;
    4)
        check_editor
        ${EDITOR} /usr/local/bin/startx11vnc
        ;;
    5) remove_X11vnc ;;
    6) x11vnc_process_readme ;;
    7) x11vncpasswd ;;
    8) x11vnc_doc ;;
    esac
    ########################################
    press_enter_to_return
    configure_x11vnc
    ####################
}
############
x11vnc_doc() {
    X11VNC_DOC_URL='http://www.karlrunge.com/x11vnc/x11vnc_opts.html'
    printf "%s\n" "url: ${X11VNC_DOC_URL}"
    su "${CURRENT_USER_NAME}" -c "xdg-open ${X11VNC_DOC_URL}"
    man x11vnc Xvfb
}
###########
x11vnc_process_readme() {
    printf "%s\n" "Ëæìstartx11vncÂêØÂä®x11vncÊúçÂä°„ÄÇ"
    printf "%s\n" "You can type ${GREEN}startx11vnc${RESET} to start it,type ${RED}stopvnc${RESET} to stop it."
    printf "%s\n" "ËæìstopvncÂÅúÊ≠¢x11vnc"
    printf "%s\n" "Ëã•ÊÇ®ÁöÑÈü≥È¢ëÊúçÂä°Á´Ø‰∏∫AndroidÁ≥ªÁªüÔºå‰∏îÂèëÁé∞Èü≥È¢ëÊúçÂä°Êó†Ê≥ïÂêØÂä®,ËØ∑Âú®ÂêØÂä®ÂÆåÊàêÂêéÔºåÊñ∞Âª∫‰∏Ä‰∏™termux session‰ºöËØùÁ™óÂè£ÔºåÁÑ∂ÂêéÊâãÂä®Âú®termuxÂéüÁ≥ªÁªüÈáåËæì${GREEN}pulseaudio -D${RESET}Êù•ÂêØÂä®Èü≥È¢ëÊúçÂä°ÂêéÂè∞ËøõÁ®ã"
    printf "%s\n" "ÊÇ®‰∫¶ÂèØËæì${GREEN}pulseaudio --start${RESET}"
    printf "%s\n" "Ëã•ÊÇ®Êó†Ê≥ïËÆ∞‰ΩèËØ•ÂëΩ‰ª§ÔºåÂàôÂè™ÈúÄËæì${GREEN}debian${RESET}"
}
###################
x11vnc_warning() {
    cat <<-EOF
		    ${YELLOW}ÂÖ≥‰∫éX11VNCÊúçÂä°ÁöÑÂêØÂä®ËØ¥Êòé${RESET}Ôºö
			There are many differences between x11vnc and tightvnc. Mainly reflected in the fluency and special effects of the picture.
			After configuring x11vnc, you can type ${GREEN}startx11vnc${RESET} to ${BLUE}start${RESET} it.
			------------------------
			Ê≥®Ôºöx11vncÂíåtightvncÊòØÊúâ${RED}Âå∫Âà´${RESET}ÁöÑÔºÅ
			x11vncÂèØ‰ª•ËøêË°åtightvncÊó†Ê≥ïÊâìÂºÄÁöÑÊüê‰∫õÂ∫îÁî®ÔºåÂú®WSL2/LinuxÂÆû‰ΩìÊú∫‰∏äÁöÑ‰ΩìÈ™å‰ºò‰∫étightvncÔºå‰ΩÜÂú®AndroidËÆæÂ§á‰∏äËøêË°åÁöÑÊµÅÁïÖÂ∫¶ÂèØËÉΩ‰∏çÂ¶Çtightvnc
			
			Ëã•ÊÇ®ÁöÑtiger/tightvncÊúçÂä°‰∏çÁ®≥ÂÆö,ÂàôÂèØÊç¢Áî®${BLUE}x11vnc${RESET}

			${BOLD}${YELLOW}vncÊúçÂä°Á´ØÊé®ËçêÁ®ãÂ∫¶Ôºö${RESET}
			${BLUE}tiger > x11vnc > tight${RESET}

			${BOLD}${YELLOW}ÊµÅÁïÖÁ®ãÂ∫¶ÔºàZlib compression level‰∏∫ÊúÄ‰Ωé,‰∏îÊó†Ê≥ïËøõË°åÂä†ÈÄüÊ∏≤ÊüìÊó∂Ôºâ:${RESET}
			${BLUE}tight > tiger > x11vnc${RESET}
			
			${BOLD}${YELLOW}ÊµÅÁïÖÁ®ãÂ∫¶ÔºàZlib compression level‰∏∫ÊúÄ‰Ωé,‰∏îÊîØÊåÅÂä†ÈÄüÊ∏≤ÊüìÊó∂Ôºâ:${RESET}
			${BLUE}tiger > x11vnc ? tight ${RESET}

			${BOLD}${YELLOW}ÊµÅÁïÖÁ®ãÂ∫¶ÔºàZlib compression level‰∏∫ÊúÄÈ´òÊó∂Ôºâ:${RESET}
			${BLUE}tight > x11vnc > tiger${RESET}

			Ê≥®ÔºöÂú®Êú¨Âú∞ËøûÊé•ÁöÑÊÉÖÂÜµ‰∏ã,${GREEN}ËøáÈ´ò${RESET}ÁöÑÂéãÁº©Á∫ßÂà´Â∞ÜÂ¢ûÂ§ß${BLUE}CPUË¥üÊãÖ${RESET},Âπ∂${PURPLE}‰∏•ÈáçÊãñÊÖ¢${RESET}Ê∏≤ÊüìÈÄüÂ∫¶„ÄÇ
			Âú®ÈùûÊú¨Âú∞ËøûÊé•ÁöÑÊÉÖÂÜµ‰∏ã,Âª∫ËÆÆÊÇ®ÈÄÇÂΩìË∞ÉÈ´òÂéãÁº©Á∫ßÂà´,‰ª•ÂáèÂ∞ë‰º†ËæìÊµÅÈáè„ÄÇ
			‰ª•‰∏ä‰∏∫${PURPLE}‰∏ªËßÇÊï∞ÊçÆ${RESET}ÔºåÂΩ±ÂìçÊµÅÁïÖÂ∫¶ÁöÑÂõ†Á¥†‰∏çÊ≠¢ÂéãÁº©ÁÆóÊ≥ï„ÄÅÁ∫ßÂà´ÂíåÁ°¨‰ª∂Âä†ÈÄüÔºåËØ∑‰ª•${GREEN}ÂÆûÈôÖ‰ΩìÈ™å${RESET}‰∏∫ÂáÜ„ÄÇ
			------------------------
			ÈÖçÁΩÆÂÆåx11vncÂêéÔºåÊÇ®ÂèØ‰ª•Âú®ÂÆπÂô®ÈáåËæì${GREEN}startx11vnc${RESET}${BLUE}ÂêØÂä®${RESET},Ëæì${GREEN}stopvnc${RESET}${RED}ÂÅúÊ≠¢${RESET}
			Ëã•Ë∂ÖËøá‰∏ÄÂàÜÈíüÈªëÂ±èÔºåÂàôËØ∑Ëæì${GREEN}startx11vnc${RESET}ÈáçÂêØËØ•ÊúçÂä°„ÄÇ
			ÊÇ®Ëã•ËßâÂæóx11vnc‰ΩìÈ™å‰∏ç‰Ω≥ÔºåÂàôÂèØÈöèÊó∂Ëæì${GREEN}startvnc${RESET}ÈáçÂêØÂπ∂ÂàáÊç¢Âà∞${BLUE}tight/tigervnc${RESET}ÊúçÂä°„ÄÇ
			------------------------
			Âª∫ËÆÆÊÇ®ÈÖçÁΩÆ${YELLOW}Â§ö‰∏™${RESET}VNCÊúçÂä°Ôºå‰ª•Â§á${PURPLE}‰∏çÊó∂‰πãÈúÄ${RESET}„ÄÇ
			ÊÇ®ÊòØÂê¶ÈúÄË¶ÅÈÖçÁΩÆ${BLUE}X11VNC${RESET}ÊúçÂä°Ôºü
			Do you want to configure x11vnc? 
	EOF
    RETURN_TO_WHERE='configure_x11vnc'
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        do_you_want_to_continue
    fi
    #stopvnc 2>/dev/null

    #suseÁöÑx11vncÈªòËÆ§Áî±tigervncÊèê‰æõÔºåÊ≠§Â§ÑremoveÊéâ
    case ${LINUX_DISTRO} in
    suse) zypper rm -y tigervnc-x11vnc ;;
    esac

    DEPENDENCY_01=''
    DEPENDENCY_02=''
    # alpine: xvfb x11vnc
    if [ ! $(command -v x11vnc) ]; then
        case ${LINUX_DISTRO} in
        gentoo) DEPENDENCY_01='x11-misc/x11vnc' ;;
        *) DEPENDENCY_01="x11vnc" ;;
        esac
    fi
    #Ê≥®ÊÑè‰∏ãÈù¢ÈÇ£Â§ÑÁöÑÂ§ßÂ∞èÂÜô
    if [ ! $(command -v xvfb) ] && [ ! $(command -v Xvfb) ]; then
        if [ "${LINUX_DISTRO}" = "arch" ]; then
            DEPENDENCY_02='xorg-server-xvfb'
        elif [ "${LINUX_DISTRO}" = "redhat" ]; then
            DEPENDENCY_02='xorg-x11-server-Xvfb'
        elif [ "${LINUX_DISTRO}" = "suse" ]; then
            DEPENDENCY_02='xorg-x11-server-Xvfb'
        elif [ "${LINUX_DISTRO}" = "gentoo" ]; then
            DEPENDENCY_02='x11-misc/xvfb-run'
        else
            DEPENDENCY_02='xvfb'
        fi
    fi

    if [ ! -z ${DEPENDENCY_01} ] || [[ ! -z ${DEPENDENCY_02} ]]; then
        if [[ ${AUTO_INSTALL_GUI} != true ]]; then
            beta_features_quick_install
        else
            different_distro_software_install
        fi
    fi
    #Èü≥È¢ëÊéßÂà∂Âô®ÂçïÁã¨Ê£ÄÊµã
    if [[ ! $(command -v pavucontrol) && ! $(command -v pavucontrol-qt) ]]; then
        if [ $(command -v apt-cache) ]; then
            printf "%s\n" "${GREEN}apt ${YELLOW}depends ${BLUE}pavucontrol${RESET}"
            apt depends pavucontrol
        fi
        printf "%s\n" "${GREEN}${TMOE_INSTALLATION_COMMAND} ${BLUE}pavucontrol${RESET}"
        ${TMOE_INSTALLATION_COMMAND} pavucontrol
    fi
}
############
x11vnc_onekey() {
    x11vnc_warning
    ################
    X11_OR_WAYLAND_DESKTOP='x11vnc'
    configure_remote_desktop_environment
}
#############
remove_X11vnc() {
    printf "%s\n" "Ê≠£Âú®ÂÅúÊ≠¢x11vncËøõÁ®ã..."
    printf "%s\n" "Stopping x11vnc..."
    stopvnc -x11
    printf "%s\n" "${YELLOW}This is a dangerous operation, you must press Enter to confirm${RESET}"
    RETURN_TO_WHERE='configure_x11vnc'
    do_you_want_to_continue
    rm -rfv /usr/local/bin/startx11vnc
    printf "%s\n" "Âç≥Â∞Ü‰∏∫ÊÇ®Âç∏ËΩΩ..."
    ${TMOE_REMOVAL_COMMAND} x11vnc
}
################
x11vnc_pulse_server() {
    cd /usr/local/bin/
    TARGET=$(whiptail --inputbox "Ëã•ÊÇ®ÈúÄË¶ÅËΩ¨ÂèëÈü≥È¢ëÂà∞ÂÖ∂ÂÆÉËÆæÂ§á,ÈÇ£‰πàÊÇ®ÂèØÂú®Ê≠§Â§Ñ‰øÆÊîπ„ÄÇÂΩìÂâç‰∏∫$(grep 'PULSE_SERVER' startx11vnc | grep -v '^#' | cut -d '=' -f 2 | head -n 1) \nËã•ÊÇ®ÊõæÂú®Èü≥È¢ëÊúçÂä°Á´ØÔºàÊé•Êî∂Èü≥È¢ëÁöÑËÆæÂ§áÔºâ‰∏äËøêË°åËøáTmoe-linux(‰ªÖÈôêAndroidÂíåwin10),Âπ∂ÈÖçÁΩÆÂÖÅËÆ∏Â±ÄÂüüÁΩëËøûÊé•,ÂàôÂè™ÈúÄËæìÂÖ•ËØ•ËÆæÂ§áip,Êó†ÈúÄÂä†Á´ØÂè£Âè∑„ÄÇÊ≥®Ôºöwin10ÈúÄÊâãÂä®ÊâìÂºÄ'C:\Users\Public\Downloads\pulseaudio\pulseaudio.bat'" 15 50 --title "MODIFY PULSE SERVER ADDRESS" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        configure_x11vnc
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        if grep -q '^export.*PULSE_SERVER' startx11vnc; then
            sed -i "s@export PULSE_SERVER=.*@export PULSE_SERVER=${TARGET}@" startx11vnc
        else
            sed -i "3 a\export PULSE_SERVER=${TARGET}" startx11vnc
        fi
        printf '%s\n' 'Your current PULSEAUDIO SERVER address has been modified.'
        printf '%s\n' 'ÊÇ®ÂΩìÂâçÁöÑÈü≥È¢ëÂú∞ÂùÄÂ∑≤‰øÆÊîπ‰∏∫'
        printf "%s\n" "$(grep 'PULSE_SERVER' startx11vnc | grep -v '^#' | cut -d '=' -f 2 | head -n 1)"
    fi
}
##################
check_x11vnc_port() {
    CURRENT_VALUE=$(grep '^TCP_PORT_FOR_RFB_PROTOCOL=' $(command -v startx11vnc) | head -n 1 | awk -F '=' '{print $2}' | cut -d '"' -f 2)
}
#############
x11vnc_port() {
    check_x11vnc_port
    TARGET=$(whiptail --inputbox "Please type the x11vnc tcp port,the default is 5902, the current port is ${CURRENT_VALUE}" 10 50 --title "ËØ∑ËæìÂÖ•Á´ØÂè£" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        configure_x11vnc
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
        check_x11vnc_port
        printf "%s\n" "The current port is ${BLUE}${CURRENT_VALUE}${RESET}"
    else
        sed -i -E "s@^(TCP_PORT_FOR_RFB_PROTOCOL)=.*@\1=${TARGET}@" "$(command -v startx11vnc)"
        printf '%s\n' 'Your current port has been modified.'
        check_x11vnc_port
        printf "%s\n" "The current port is ${BLUE}${CURRENT_VALUE}${RESET}"
        printf "%s\n" "You can type ${GREEN}startx11vnc${RESET} to restart it."
    fi
}
#################
x11vnc_resolution() {
    TARGET=$(whiptail --inputbox "Please enter a resolution,ËØ∑ËæìÂÖ•ÂàÜËæ®Áéá,‰æãÂ¶Ç2880x1440,2400x1200,1920x1080,1920x960,720x1140,1280x1024,1280x960,1280x720,1024x768,800x680Á≠âÁ≠â,ÈªòËÆ§‰∏∫1440x720,ÂΩìÂâç‰∏∫$(grep 'TMOE_X11_RESOLUTION=' $(command -v startx11vnc) | head -n 1 | cut -d '=' -f 2)„ÄÇÂàÜËæ®ÁéáÂèØËá™ÂÆö‰πâÔºå‰ΩÜÂª∫ËÆÆÊÇ®Ê†πÊçÆÂ±èÂπïÊØî‰æãÊù•Ë∞ÉÊï¥„ÄÇÊ≥®ÊÑèÔºöx‰∏∫Ëã±ÊñáÂ∞èÂÜôÔºå‰∏çÊòØ‰πòÂè∑" 16 50 --title "ËØ∑Âú®ÊñπÊ°ÜÂÜÖËæìÂÖ• Ê∞¥Âπ≥ÂÉèÁ¥†xÂûÇÁõ¥ÂÉèÁ¥† (Êï∞Â≠óxÊï∞Â≠ó) " 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        configure_x11vnc
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
        #printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÂàÜËæ®Áéá‰∏∫$(sed -n p $(command -v startx11vnc) | grep '/usr/bin/Xvfb' | head -n 1 | cut -d ':' -f 2 | cut -d '+' -f 1 | cut -d '-' -f 2 | cut -d 'x' -f -2 | awk -F ' ' '$0=$NF')"
        printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÂàÜËæ®Áéá‰∏∫$(grep 'TMOE_X11_RESOLUTION=' $(command -v startx11vnc) | head -n 1 | cut -d '=' -f 2)"
    else
        #/usr/bin/Xvfb :1 -screen 0 1440x720x24 -ac +extension GLX +render -noreset &
        #sed -i "s@^/usr/bin/Xvfb.*@/usr/bin/Xvfb :233 -screen 0 ${TARGET}x24 -ac +extension GLX +render -noreset \&@" "$(command -v startx11vnc)"
        sed -i -E "s@^(TMOE_X11_RESOLUTION)=.*@\1=${TARGET}@" "$(command -v startx11vnc)"
        printf '%s\n' 'Your current resolution has been modified.'
        printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÂàÜËæ®ÁéáÂ∑≤Áªè‰øÆÊîπ‰∏∫$(grep 'TMOE_X11_RESOLUTION=' $(command -v startx11vnc) | head -n 1 | cut -d '=' -f 2)"
        printf "%s\n" "You can type startx11vnc to restart it."
    fi
}
############################
######################
check_vnc_resolution() {
    CURRENT_VNC_RESOLUTION=$(grep '^VNC_RESOLUTION=' $(command -v startvnc) | awk -F '=' '{print $2}' | head -n 1)
}
modify_vnc_conf() {
    if [ ! -e /usr/local/bin/startvnc ]; then
        printf "%s\n" "/usr/local/bin/startvnc is not detected, maybe you have not installed the graphical desktop environment, do you want to continue editing?"
        printf '%s\n' 'Êú™Ê£ÄÊµãÂà∞startvnc,ÊÇ®ÂèØËÉΩÂ∞öÊú™ÂÆâË£ÖÂõæÂΩ¢Ê°åÈù¢ÔºåÊòØÂê¶ÁªßÁª≠ÁºñËæë?'
        printf "%s\n" "${YELLOW}ÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§ÁºñËæë„ÄÇ${RESET}"
        RETURN_TO_WHERE='modify_remote_desktop_config'
        do_you_want_to_continue
    fi
    check_vnc_resolution
    if (whiptail --title "modify vnc configuration" --yes-button 'ÂàÜËæ®Áéáresolution' --no-button 'ÂÖ∂ÂÆÉother' --yesno "Which configuration do you want to modify?" 9 50); then
        TARGET=$(whiptail --inputbox "Please enter a resolution,ËØ∑ËæìÂÖ•ÂàÜËæ®Áéá,‰æãÂ¶Ç2880x1440,2400x1200,1920x1080,1920x960,720x1140,1280x1024,1280x960,1280x720,1024x768,800x680Á≠âÁ≠â,ÈªòËÆ§‰∏∫1440x720,ÂΩìÂâç‰∏∫${CURRENT_VNC_RESOLUTION}„ÄÇÂàÜËæ®ÁéáÂèØËá™ÂÆö‰πâÔºå‰ΩÜÂª∫ËÆÆÊÇ®Ê†πÊçÆÂ±èÂπïÊØî‰æãÊù•Ë∞ÉÊï¥„ÄÇÊ≥®ÊÑèÔºöx‰∏∫Ëã±ÊñáÂ∞èÂÜôÔºå‰∏çÊòØ‰πòÂè∑" 16 50 --title "ËØ∑Âú®ÊñπÊ°ÜÂÜÖËæìÂÖ• Ê∞¥Âπ≥ÂÉèÁ¥†xÂûÇÁõ¥ÂÉèÁ¥† (Êï∞Â≠óxÊï∞Â≠ó) " 3>&1 1>&2 2>&3)
        if [ "$?" != "0" ]; then
            modify_other_vnc_conf
        elif [ -z "${TARGET}" ]; then
            printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
            printf "%s\n" "Please enter a valid value"
        else
            sed -i -E "s@(geometry)=.*@\1=${TARGET}@" ${TIGER_VNC_DEFAULT_CONFIG_FILE}
            sed -i -E "s@^(VNC_RESOLUTION)=.*@\1=${TARGET}@" $(command -v startvnc)
            printf '%s\n' 'Your current resolution has been modified.'
            check_vnc_resolution
            printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÂàÜËæ®ÁéáÂ∑≤Áªè‰øÆÊîπ‰∏∫${CURRENT_VNC_RESOLUTION}"
            #stopvnc 2>/dev/null
            press_enter_to_return
            modify_remote_desktop_config
        fi
    else
        modify_other_vnc_conf
    fi
    #printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÂàÜËæ®Áéá‰∏∫${CURRENT_VNC_RESOLUTION}"
}
############################
modify_xsdl_conf() {
    if [ "${RETURN_TO_TMOE_MENU_01}" = 'modify_remote_desktop_config' ]; then
        if [ ! -f /usr/local/bin/startxsdl ]; then
            printf "%s\n" "/usr/local/bin/startxsdl is not detected, maybe you have not installed the graphical desktop environment, do you want to continue editing?"
            printf '%s\n' 'Êú™Ê£ÄÊµãÂà∞startxsdl,ÊÇ®ÂèØËÉΩÂ∞öÊú™ÂÆâË£ÖÂõæÂΩ¢Ê°åÈù¢ÔºåÊòØÂê¶ÁªßÁª≠ÁºñËæë„ÄÇ'
            RETURN_TO_WHERE='modify_remote_desktop_config'
            do_you_want_to_continue
        fi
        TMOE_XSDL_SCRIPT_PATH='/usr/local/bin/startxsdl'
    else
        TMOE_XSDL_SCRIPT_PATH='/usr/local/bin/startqemu'
    fi
    XSDL_XSERVER=$(whiptail --title "Modify x server conf" --menu "Type startxsdl to start x11.ËæìstartxsdlÂêØÂä®x11" 0 50 0 \
        "1" "Pulse server portÈü≥È¢ëÁ´ØÂè£" \
        "2" "Display numberÊòæÁ§∫ÁºñÂè∑" \
        "3" "ip address" \
        "4" "Edit manuallyÊâãÂä®ÁºñËæë" \
        "5" "DISPLAY switchËΩ¨ÂèëÊòæÁ§∫ÂºÄÂÖ≥(‰ªÖqemu)" \
        "6" "VcXsrvÊòæÁ§∫Á´ØÂè£(‰ªÖwin10)" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ###########
    case "${XSDL_XSERVER}" in
    0 | "") ${RETURN_TO_TMOE_MENU_01} ;;
    1) modify_pulse_server_port ;;
    2) modify_display_port ;;
    3) modify_xsdl_ip_address ;;
    4) modify_startxsdl_manually ;;
    5) disable_tmoe_qemu_remote_display ;;
    6) modify_vcxsrv_display_port ;;
    esac
    ########################################
    press_enter_to_return
    modify_xsdl_conf
}
#################
disable_tmoe_qemu_remote_display() {
    if grep -q '^export.*DISPLAY' "${TMOE_XSDL_SCRIPT_PATH}"; then
        XSDL_DISPLAY_STATUS='Ê£ÄÊµãÂà∞ÊÇ®Â∑≤ÁªèÂêØÁî®‰∫ÜËΩ¨ÂèëXÊòæÁ§∫ÁîªÈù¢ÁöÑÂäüËÉΩÔºåÊâìÂºÄqemuÊó∂ÔºåÁîªÈù¢Â∞ÜËΩ¨ÂèëËá≥ËøúÁ®ãXServer'
        printf "%s\n" "${XSDL_DISPLAY_STATUS}"
        printf "%s\n" "ÊòØÂê¶ÈúÄË¶ÅÁ¶ÅÁî®?"
        printf "%s\n" "Do you want to disable it"
        do_you_want_to_continue
        sed -i '/export DISPLAY=/d' ${TMOE_XSDL_SCRIPT_PATH}
        printf "%s\n" "Á¶ÅÁî®ÂÆåÊàê"
    else
        XSDL_DISPLAY_STATUS='Ê£ÄÊµãÂà∞ÊÇ®Â∞öÊú™ÂêØÁî®ËΩ¨ÂèëXÊòæÁ§∫ÁîªÈù¢ÁöÑÂäüËÉΩÔºåÊâìÂºÄqemuÊó∂ÔºåÂ∞ÜÁõ¥Êé•Ë∞ÉÁî®ÂΩìÂâçÊòæÁ§∫Âô®ÁöÑÁ™óÂè£„ÄÇ'
        printf "%s\n" "${XSDL_DISPLAY_STATUS}"
        printf "%s\n" "ÊòØÂê¶ÈúÄË¶ÅÂêØÁî®Ôºü"
        printf "%s\n" "Do you want to enable it"
        do_you_want_to_continue
        sed -i "1 a\export DISPLAY=127.0.0.1:0" ${TMOE_XSDL_SCRIPT_PATH}
        printf "%s\n" "ÂêØÁî®ÂÆåÊàê"
    fi
}
#################
modify_startxsdl_manually() {
    check_editor
    ${EDITOR} ${TMOE_XSDL_SCRIPT_PATH}
    printf '%s\n' 'See your current xsdl configuration information below.'

    check_tmoe_xsdl_display_ip
    printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÊòæÁ§∫ÊúçÂä°ÁöÑipÂú∞ÂùÄ‰∏∫${CURRENT_DISPLAY_IP}"

    check_tmoe_xsdl_display_port
    printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÊòæÁ§∫Á´ØÂè£‰∏∫${CURRENT_DISPLAY_PORT}"

    check_tmoe_xsdl_pulse_audio_port
    printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÈü≥È¢ë(ip/Á´ØÂè£)‰∏∫${CURRENT_PULSE_AUDIO_PORT}"
}
######################
check_tmoe_xsdl_display_ip() {
    CURRENT_DISPLAY_IP=$(grep 'export DISPLAY' ${TMOE_XSDL_SCRIPT_PATH} | head -n 1 | cut -d '=' -f 2 | cut -d ':' -f 1)
}
######
check_tmoe_vcxsrv_display_port() {
    CURRENT_VSCSRV_DISPLAY_PORT=$(grep 'VCXSRV_DISPLAY_PORT=' ${TMOE_XSDL_SCRIPT_PATH} | head -n 1 | cut -d '=' -f 2)
}
######
check_tmoe_xsdl_display_port() {
    CURRENT_DISPLAY_PORT=$(grep 'export DISPLAY' ${TMOE_XSDL_SCRIPT_PATH} | head -n 1 | cut -d '=' -f 2 | cut -d ':' -f 2)
}
#######
check_tmoe_xsdl_pulse_audio_port() {
    CURRENT_PULSE_AUDIO_PORT=$(grep 'export PULSE_SERVER' ${TMOE_XSDL_SCRIPT_PATH} | head -n 1 | cut -d 'c' -f 2 | cut -c 1-2 --complement | cut -d ':' -f 2)
}
#################
modify_pulse_server_port() {
    check_tmoe_xsdl_pulse_audio_port
    TARGET=$(whiptail --inputbox "Ëã•xsdl appÊòæÁ§∫ÁöÑÁ´ØÂè£Èùû4713ÔºåÂàôÊÇ®ÂèØÂú®Ê≠§Â§Ñ‰øÆÊîπ„ÄÇÈªòËÆ§‰∏∫4713ÔºåÂΩìÂâç‰∏∫${CURRENT_PULSE_AUDIO_PORT}\nËØ∑‰ª•xsdl appÊòæÁ§∫ÁöÑpulse_serverÂú∞ÂùÄÁöÑÊúÄÂêéÂá†‰ΩçÊï∞Â≠ó‰∏∫ÂáÜ„ÄÇËã•ÊÇ®ÁöÑÂÆø‰∏ªÊú∫Á≥ªÁªüÈùûAndroid,ËÄåÊòØwin10,‰∏î‰ΩøÁî®‰∫Ütmoe-linuxËá™Â∏¶ÁöÑpulseaudioÔºåÂàôÁ´ØÂè£‰∏∫0,ËæìÂÖ•ÂÆåÊàêÂêéÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§„ÄÇ" 15 50 --title "MODIFY PULSE SERVER PORT " 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        modify_xsdl_conf
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        #sed -i "4 c export PULSE_SERVER=tcp:127.0.0.1:${TARGET}" "$(command -v startxsdl)"
        PULSE_LINE=$(grep 'export PULSE_SERVER' -n "${TMOE_XSDL_SCRIPT_PATH}" | head -n 1 | awk '{print $1}' | cut -d ':' -f 1)
        CURRENT_PULSE_IP=$(grep 'export PULSE_SERVER' ${TMOE_XSDL_SCRIPT_PATH} | head -n 1 | cut -d '=' -f 2 | cut -d ':' -f 2)
        sed -i "${PULSE_LINE} c\export PULSE_SERVER=tcp:${CURRENT_PULSE_IP}:${TARGET}" ${TMOE_XSDL_SCRIPT_PATH}
        printf '%s\n' 'Your current PULSE SERVER port has been modified.'
        check_tmoe_xsdl_pulse_audio_port
        printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÈü≥È¢ëÁ´ØÂè£Â∑≤‰øÆÊîπ‰∏∫${CURRENT_PULSE_AUDIO_PORT}"
    fi
}
########################################################
modify_vcxsrv_display_port() {
    check_tmoe_vcxsrv_display_port
    TARGET=$(whiptail --inputbox "Ëã•ÊÇ®ÈúÄË¶ÅÊåáÂÆövcxsrvÁöÑÊòæÁ§∫Á´ØÂè£,\nÂàôÂèØÂú®Ê≠§Â§Ñ‰øÆÊîπ„ÄÇÈªòËÆ§‰∏∫37985ÔºåÂΩìÂâç‰∏∫${CURRENT_VSCSRV_DISPLAY_PORT}" 0 50 --title "MODIFY DISPLAY PORT " 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        modify_xsdl_conf
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        DISPLAY_LINE=$(grep 'VCXSRV_DISPLAY_PORT=' -n "${TMOE_XSDL_SCRIPT_PATH}" | head -n 1 | awk '{print $1}' | cut -d ':' -f 1)
        sed -i "${DISPLAY_LINE} c\VCXSRV_DISPLAY_PORT=${TARGET}" "${TMOE_XSDL_SCRIPT_PATH}"
        printf '%s\n' 'Your current DISPLAY port has been modified.'
        check_tmoe_vcxsrv_display_port
        printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑVcXsrvÊòæÁ§∫Á´ØÂè£Â∑≤Áªè‰øÆÊîπ‰∏∫${CURRENT_VSCSRV_DISPLAY_PORT}"
        press_enter_to_return
        modify_xsdl_conf
    fi
}
###########
modify_display_port() {
    check_tmoe_xsdl_display_ip
    check_tmoe_xsdl_display_port
    TARGET=$(whiptail --inputbox "Ëã•xsdl appÊòæÁ§∫ÁöÑDisplay number(ËæìÂá∫ÊòæÁ§∫ÁöÑÁ´ØÂè£Êï∞Â≠ó) Èùû0ÔºåÂàôÊÇ®ÂèØÂú®Ê≠§Â§Ñ‰øÆÊîπ„ÄÇÈªòËÆ§‰∏∫0ÔºåÂΩìÂâç‰∏∫${CURRENT_DISPLAY_PORT}\nËØ∑‰ª•xsdl appÊòæÁ§∫ÁöÑDISPLAY=:ÁöÑÊï∞Â≠ó‰∏∫ÂáÜÔºåËæìÂÖ•ÂÆåÊàêÂêéÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§„ÄÇ" 15 50 --title "MODIFY DISPLAY PORT " 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        modify_xsdl_conf
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        DISPLAY_LINE=$(grep 'export DISPLAY' -n "${TMOE_XSDL_SCRIPT_PATH}" | head -n 1 | awk '{print $1}' | cut -d ':' -f 1)
        sed -i "${DISPLAY_LINE} c\export DISPLAY=${CURRENT_DISPLAY_IP}:${TARGET}" "${TMOE_XSDL_SCRIPT_PATH}"
        printf '%s\n' 'Your current DISPLAY port has been modified.'
        check_tmoe_xsdl_display_port
        printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÊòæÁ§∫Á´ØÂè£Â∑≤Áªè‰øÆÊîπ‰∏∫${CURRENT_DISPLAY_PORT}"
        press_enter_to_return
        modify_xsdl_conf
    fi
}
###############################################
modify_xsdl_ip_address() {
    check_tmoe_xsdl_display_ip
    #XSDLIP=$(sed -n 3p $(command -v startxsdl) | cut -d '=' -f 2 | cut -d ':' -f 1)
    TARGET=$(whiptail --inputbox "Ëã•ÊÇ®ÈúÄË¶ÅÁî®Â±ÄÂüüÁΩëÂÖ∂ÂÆÉËÆæÂ§áÊù•ËøûÊé•ÔºåÂàôÊÇ®ÂèØÂú®‰∏ãÊñπËæìÂÖ•ËØ•ËÆæÂ§áÁöÑIPÂú∞ÂùÄ„ÄÇÊú¨Êú∫ËøûÊé•ËØ∑Âãø‰øÆÊîπÔºåÈªòËÆ§‰∏∫127.0.0.1 ,ÂΩìÂâç‰∏∫${CURRENT_DISPLAY_IP}\n windowsËÆæÂ§áËæì ipconfigÔºålinuxËÆæÂ§áËæìip -4 -br -c aËé∑Âèñip addressÔºåËé∑ÂèñÂà∞ÁöÑÂú∞ÂùÄÊ†ºÂºèÁ±ª‰ºº‰∫é192.168.123.234ÔºåËæìÂÖ•Ëé∑ÂèñÂà∞ÁöÑÂú∞ÂùÄÂêéÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§„ÄÇ" 15 50 --title "MODIFY DISPLAY IP" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        modify_xsdl_conf
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        sed -i "s/${CURRENT_DISPLAY_IP}/${TARGET}/g" "${TMOE_XSDL_SCRIPT_PATH}"
        printf '%s\n' 'Your current ip address has been modified.'
        check_tmoe_xsdl_display_ip
        printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑÊòæÁ§∫ÊúçÂä°ÁöÑipÂú∞ÂùÄÂ∑≤Áªè‰øÆÊîπ‰∏∫${CURRENT_DISPLAY_IP}"
        press_enter_to_return
        modify_xsdl_conf
    fi
}
##################
modify_xrdp_conf() {
    case "${TMOE_PROOT}" in
    true)
        printf "%s\n" "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂ§Ñ‰∫é${GREEN}prootÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºÅ"
        printf "%s\n" "Ëã•ÊÇ®ÁöÑÂÆø‰∏ªÊú∫‰∏∫${BOLD}Android${RESET}Á≥ªÁªüÔºåÂàô${RED}Êó†Ê≥ï${RESET}${BLUE}‰øùÈöú${RESET}xrdpÂèØ‰ª•Ê≠£Â∏∏ËøûÊé•ÔºÅ"
        RETURN_TO_WHERE='modify_remote_desktop_config'
        do_you_want_to_continue
        ;;
    esac
    pgrep xrdp &>/dev/null
    if [ "$?" = "0" ]; then
        FILEBROWSER_STATUS='Ê£ÄÊµãÂà∞xrdpËøõÁ®ãÊ≠£Âú®ËøêË°å'
        FILEBROWSER_PROCESS='RestartÈáçÂêØ'
    else
        FILEBROWSER_STATUS='Ê£ÄÊµãÂà∞xrdpËøõÁ®ãÊú™ËøêË°å'
        FILEBROWSER_PROCESS='StartÂêØÂä®'
    fi

    if (whiptail --title "‰Ω†ÊÉ≥Ë¶ÅÂØπËøô‰∏™Â∞èÂèØÁà±ÂÅö‰ªÄ‰πà" --yes-button "${FILEBROWSER_PROCESS}" --no-button 'ConfigureÈÖçÁΩÆ' --yesno "ÊÇ®ÊòØÊÉ≥Ë¶ÅÂêØÂä®ÊúçÂä°ËøòÊòØÈÖçÁΩÆÊúçÂä°Ôºü${FILEBROWSER_STATUS}" 9 50); then
        if [[ ! -e "${HOME}/.config/tmoe-linux/xrdp.ini" && ! -e /usr/sbin/xrdp ]]; then
            printf "%s\n" "Êú™Ê£ÄÊµãÂà∞Â∑≤Â§á‰ªΩÁöÑxrdpÈÖçÁΩÆÊñá‰ª∂ÔºåËØ∑ÈáçÊñ∞ÈÖçÁΩÆ"
            printf "%s\n" "Please reconfigure xrdp"
            sleep 2s
            xrdp_onekey
        fi
        xrdp_restart
    else
        configure_xrdp
    fi
}
#############
xrdp_desktop_environment() {
    X11_OR_WAYLAND_DESKTOP='xrdp'
    configure_remote_desktop_environment
}
#############
configure_xrdp() {
    #16 50 7
    #ËøõÂÖ•xrdpÈÖçÁΩÆÊñá‰ª∂ÁõÆÂΩï
    RETURN_TO_WHERE='configure_xrdp'
    [[ -e /etc/xrdp/ ]] || mkdir -pv /etc/xrdp
    cd /etc/xrdp/
    TMOE_OPTION=$(
        whiptail --title "CONFIGURE XRDP" --menu "Type service xrdp start to start it" 0 0 0 \
            "1" "One-key conf ÂàùÂßãÂåñ‰∏ÄÈîÆÈÖçÁΩÆ" \
            "2" "ÊåáÂÆöxrdpÊ°åÈù¢ÁéØÂ¢É" \
            "3" "xrdp port ‰øÆÊîπxrdpÁ´ØÂè£" \
            "4" "xrdp.ini‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂" \
            "5" "startwm.sh‰øÆÊîπÂêØÂä®ËÑöÊú¨" \
            "6" "stop ÂÅúÊ≠¢" \
            "7" "status ËøõÁ®ãÁä∂ÊÄÅ" \
            "8" "pulse_serverÈü≥È¢ëÊúçÂä°" \
            "9" "reset ÈáçÁΩÆ" \
            "10" "remove Âç∏ËΩΩ/ÁßªÈô§" \
            "11" "ËøõÁ®ãÁÆ°ÁêÜËØ¥Êòé" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ##############################
    case "${TMOE_OPTION}" in
    0 | "") modify_remote_desktop_config ;;
    1)
        service xrdp stop 2>/dev/null || systemctl stop xrdp
        xrdp_onekey
        ;;
    2)
        X11_OR_WAYLAND_DESKTOP='xrdp'
        #xrdp_desktop_environment
        configure_remote_desktop_environment
        ;;
    3) xrdp_port ;;
    4)
        check_editor
        ${EDITOR} /etc/xrdp/xrdp.ini
        ;;
    5)
        check_editor
        ${EDITOR} /etc/xrdp/startwm.sh
        ;;
    6) service xrdp stop 2>/dev/null || systemctl stop xrdp ;;
    7) check_xrdp_status ;;
    8) xrdp_pulse_server ;;
    9) xrdp_reset ;;
    10) remove_xrdp ;;
    11) xrdp_systemd ;;
    esac
    ##############################
    press_enter_to_return_configure_xrdp
}
#############
check_xrdp_status() {
    if [ $(command -v service) ]; then
        service xrdp status | head -n 24
    else
        #printf "%s\n" "Type ${GREEN}q${RESET} to ${BLUE}return.${RESET}"
        systemctl status xrdp | head -n 24
    fi
}
####################
remove_xrdp() {
    pkill xrdp
    printf "%s\n" "Ê≠£Âú®ÂÅúÊ≠¢xrdpËøõÁ®ã..."
    printf "%s\n" "Stopping xrdp..."
    service xrdp stop 2>/dev/null || systemctl stop xrdp
    printf "%s\n" "${YELLOW}This is a dangerous operation, you must press Enter to confirm${RESET}"
    #service xrdp restart
    RETURN_TO_WHERE='configure_xrdp'
    do_you_want_to_continue
    rm -fv /etc/xrdp/xrdp.ini /etc/xrdp/startwm.sh
    printf "%s\n" "${YELLOW}Â∑≤Âà†Èô§xrdpÈÖçÁΩÆÊñá‰ª∂${RESET}"
    printf "%s\n" "Âç≥Â∞Ü‰∏∫ÊÇ®Âç∏ËΩΩ..."
    ${TMOE_REMOVAL_COMMAND} xrdp
}
################
configure_remote_desktop_environment() {
    #15 60 5
    BETA_DESKTOP=$(whiptail --title "REMOTE_DESKTOP" --menu \
        "ÊÇ®ÊÉ≥Ë¶ÅÈÖçÁΩÆÂì™‰∏™Ê°åÈù¢ÔºüÊåâÊñπÂêëÈîÆÈÄâÊã©ÔºåÂõûËΩ¶ÈîÆÁ°ÆËÆ§ÔºÅ\n Which desktop environment do you want to configure? " 0 0 0 \
        "1" "auto Ëá™Âä®ÈÄâÊã©" \
        "2" "xfceÔºöÂÖºÂÆπÊÄßÈ´ò" \
        "3" "lxdeÔºöËΩªÈáèÂåñÊ°åÈù¢" \
        "4" "mateÔºöÂü∫‰∫éGNOME 2" \
        "5" "lxqt" \
        "6" "kde plasma 5" \
        "7" "gnome 3" \
        "8" "cinnamon" \
        "9" "dde (deepin desktop)" \
        "0" "Êàë‰∏Ä‰∏™ÈÉΩ‰∏çÈÄâ =Ôø£œâÔø£=" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${BETA_DESKTOP}" in
    0 | "") modify_remote_desktop_config ;;
    1)
        REMOTE_DESKTOP_SESSION_01='/etc/X11/xinit/Xsession'
        REMOTE_DESKTOP_SESSION_02='/etc/X11/xinit/Xsession'
        ;;
    2)
        REMOTE_DESKTOP_SESSION_01='xfce4-session'
        REMOTE_DESKTOP_SESSION_02='startxfce4'
        ;;
    3)
        REMOTE_DESKTOP_SESSION_01='lxsession'
        REMOTE_DESKTOP_SESSION_02='startlxde'
        #configure_remote_lxde_desktop
        ;;
    4)
        REMOTE_DESKTOP_SESSION_01='mate-session'
        REMOTE_DESKTOP_SESSION_02='mate-panel'
        #configure_remote_mate_desktop
        ;;
    5)
        REMOTE_DESKTOP_SESSION_01='startlxqt'
        REMOTE_DESKTOP_SESSION_02='lxqt-session'
        #configure_remote_lxqt_desktop
        ;;
    6)
        #REMOTE_DESKTOP_SESSION='plasma-x11-session'
        #configure_remote_kde_plasma5_desktop
        REMOTE_DESKTOP_SESSION_01='startplasma-x11'
        REMOTE_DESKTOP_SESSION_02='startkde'
        ;;
    7)
        REMOTE_DESKTOP_SESSION_01='gnome-session'
        REMOTE_DESKTOP_SESSION_02='gnome-panel'
        #configure_remote_gnome3_desktop
        ;;
    8)
        REMOTE_DESKTOP_SESSION_01='cinnamon-session'
        REMOTE_DESKTOP_SESSION_02='cinnamon-launcher'
        ;;
    9)
        REMOTE_DESKTOP_SESSION_01='startdde'
        REMOTE_DESKTOP_SESSION_02='dde-launcher'
        #configure_remote_deepin_desktop
        ;;
    esac
    # case "${TMOE_PROOT}" in
    # true)
    #     case "${LINUX_DISTRO}" in
    #     "debian" | "redhat") NON_DBUS=true ;;
    #     esac
    #     ;;
    # esac

    if [ $(command -v ${REMOTE_DESKTOP_SESSION_01}) ]; then
        REMOTE_DESKTOP_SESSION="${REMOTE_DESKTOP_SESSION_01}"
    else
        REMOTE_DESKTOP_SESSION="${REMOTE_DESKTOP_SESSION_02}"
    fi
    configure_remote_desktop_session
    press_enter_to_return
    modify_remote_desktop_config
}
##############
configure_xrdp_remote_desktop_session() {
    #printf "%s\n" "${REMOTE_DESKTOP_SESSION}" >~/.xsession
    #touch ~/.session
    cd /etc/xrdp
    sed -i '/Xsession/d' startwm.sh
    #sed -i '/start/d' startwm.sh
    if grep 'exec' startwm.sh; then
        sed -i '$ d' startwm.sh
        sed -i '$ d' startwm.sh
    fi
    #sed -i '/X11\/Xsession/d' startwm.sh
    cat >>startwm.sh <<-'EnfOfStartWM'
		test -x /etc/X11/Xsession && exec /etc/X11/Xsession
		exec /etc/X11/xinit/Xsession
	EnfOfStartWM
    sed -i "s@exec /etc/X11/Xsession@exec dbus-launch ${REMOTE_DESKTOP_SESSION}@g" /etc/xrdp/startwm.sh
    if [ $(command -v bat) ]; then
        bat startwm.sh
    else
        sed -n p startwm.sh
    fi
    #sed -i "s@exec /bin/sh /etc/X11/Xsession@exec ${REMOTE_DESKTOP_SESSION}@g" /etc/xrdp/startwm.sh
    press_enter_to_return
    systemctl restart xrdp || service xrdp restart
    check_xrdp_status
}
##############
configure_remote_desktop_session() {
    if [ "${X11_OR_WAYLAND_DESKTOP}" == 'xrdp' ]; then
        configure_xrdp_remote_desktop_session
    elif [ "${X11_OR_WAYLAND_DESKTOP}" == 'x11vnc' ]; then
        configure_x11vnc_remote_desktop_session
    fi
}
#####################
xrdp_pulse_server() {
    cd /etc/xrdp
    TARGET=$(whiptail --inputbox "Ëã•ÊÇ®ÈúÄË¶ÅËΩ¨ÂèëÈü≥È¢ëÂà∞ÂÖ∂ÂÆÉËÆæÂ§á,ÈÇ£‰πàÊÇ®ÂèØÂú®Ê≠§Â§Ñ‰øÆÊîπ„ÄÇlinuxÈªòËÆ§‰∏∫127.0.0.1,WSL2ÈªòËÆ§‰∏∫ÂÆø‰∏ªÊú∫ip,ÂΩìÂâç‰∏∫$(grep 'PULSE_SERVER' startwm.sh | grep -v '^#' | cut -d '=' -f 2 | head -n 1) \nËã•ÊÇ®ÊõæÂú®Èü≥È¢ëÊúçÂä°Á´ØÔºàÊé•Êî∂Èü≥È¢ëÁöÑËÆæÂ§áÔºâ‰∏äËøêË°åËøáTmoe-linux(‰ªÖÈôêAndroidÂíåwin10),Âπ∂ÈÖçÁΩÆÂÖÅËÆ∏Â±ÄÂüüÁΩëËøûÊé•,ÂàôÂè™ÈúÄËæìÂÖ•ËØ•ËÆæÂ§áip,Êó†ÈúÄÂä†Á´ØÂè£Âè∑„ÄÇÊ≥®Ôºöwin10ÈúÄÊâãÂä®ÊâìÂºÄ'C:\Users\Public\Downloads\pulseaudio\pulseaudio.bat'" 15 50 --title "MODIFY PULSE SERVER ADDRESS" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        configure_xrdp
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        if ! grep -q '^export.*PULSE_SERVER' startwm.sh; then
            sed -i "1 a\export PULSE_SERVER=${TARGET}" startwm.sh
        fi
        sed -i -E "s@(export PULSE_SERVER=).*@\1${TARGET}@" startwm.sh
        printf '%s\n' 'Your current PULSEAUDIO SERVER address has been modified.'
        printf '%s\n' 'ÊÇ®ÂΩìÂâçÁöÑÈü≥È¢ëÂú∞ÂùÄÂ∑≤‰øÆÊîπ‰∏∫'
        printf "%s\n" "$(grep 'PULSE_SERVER' startwm.sh | grep -v '^#' | cut -d '=' -f 2 | head -n 1)"
        press_enter_to_return_configure_xrdp
    fi
}
##############
xrdp_onekey() {
    RETURN_TO_WHERE='configure_xrdp'
    do_you_want_to_continue
    if [[ ! $(command -v xrdp-keygen) && ! -e /usr/sbin/xrdp ]]; then
        case "${LINUX_DISTRO}" in
        gentoo)
            emerge -avk layman
            layman -a bleeding-edge
            layman -S
            #ACCEPT_KEYWORDS="~amd64" USE="server" emerge -a xrdp
            ;;
        *)
            DEPENDENCY_01=''
            DEPENDENCY_02='xrdp'
            ;;
        esac
        printf "Do you want to install xrdp?"
        beta_features_quick_install
    fi
    ##############
    mkdir -pv /etc/polkit-1/localauthority.conf.d /etc/polkit-1/localauthority/50-local.d/
    cat >/etc/polkit-1/localauthority.conf.d/02-allow-colord.conf <<-'EndOfxrdp'
		polkit.addRule(function(action, subject) {
		if ((action.id == ‚Äúorg.freedesktop.color-manager.create-device‚Äù || action.id == ‚Äúorg.freedesktop.color-manager.create-profile‚Äù || action.id == ‚Äúorg.freedesktop.color-manager.delete-device‚Äù || action.id == ‚Äúorg.freedesktop.color-manager.delete-profile‚Äù || action.id == ‚Äúorg.freedesktop.color-manager.modify-device‚Äù || action.id == ‚Äúorg.freedesktop.color-manager.modify-profile‚Äù) && subject.isInGroup(‚Äú{group}‚Äù))
		{
		return polkit.Result.YES;
		}
		});
	EndOfxrdp
    #############
    cat >/etc/polkit-1/localauthority/50-local.d/45-allow.colord.pkla <<-'ENDofpolkit'
		[Allow Colord all Users]
		Identity=unix-user:*
		Action=org.freedesktop.color-manager.create-device;org.freedesktop.color-manager.create-profile;org.freedesktop.color-manager.delete-device;org.freedesktop.color-manager.delete-profile;org.freedesktop.color-manager.modify-device;org.freedesktop.color-manager.modify-profile
		ResultAny=no
		ResultInactive=no
		ResultActive=yes

		[Allow Package Management all Users]
		Identity=unix-user:*
		Action=org.debian.apt.*;io.snapcraft.*;org.freedesktop.packagekit.*;com.ubuntu.update-notifier.*
		ResultAny=no
		ResultInactive=no
		ResultActive=yes
	ENDofpolkit
    ###################
    if [ ! -e "${HOME}/.config/tmoe-linux/xrdp.ini" ]; then
        mkdir -pv ${HOME}/.config/tmoe-linux/
        cd /etc/xrdp/
        cp -p startwm.sh xrdp.ini ${HOME}/.config/tmoe-linux/
    fi
    ####################
    #printf '%s\n' 'xfce4-session' >~/.xsession
    #touch ~/.session
    sed -i 's@exec /etc/X11/Xsession@exec /etc/X11/xinit/Xsession@g;s:exec /bin/sh /etc/X11/Xsession:exec /etc/X11/xinit/Xsession:g' /etc/xrdp/startwm.sh
    if ! grep -q '^export PULSE_SERVER' /etc/xrdp/startwm.sh; then
        sed -i '/test -x \/etc\/X11/i\export PULSE_SERVER=127.0.0.1' /etc/xrdp/startwm.sh
    fi
    if [ $(command -v bat) ]; then
        bat /etc/xrdp/startwm.sh
    else
        sed -n p /etc/xrdp/startwm.sh
    fi
    ###########################
    if [ "${WINDOWS_DISTRO}" = 'WSL' ]; then
        #if grep -q '172..*1' "/etc/resolv.conf"; then
        if [ "$(uname -r | cut -d '-' -f 2)" = "microsoft" ]; then
            printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâç‰ΩøÁî®ÁöÑÂèØËÉΩÊòØWSL2"
            #WSL2IP=$(sed -n p /etc/resolv.conf | grep nameserver | awk '{print $2}' | head -n 1)
            #sed -i "s/^export PULSE_SERVER=.*/export PULSE_SERVER=${WSL2IP}/g" /etc/xrdp/startwm.sh
            sed -i "s/^export PULSE_SERVER=.*/export PULSE_SERVER=\$(ip route list table 0 | head -n 1 | awk -F 'default via ' '{print \$2}' |awk '{print \$1}')/g" /etc/xrdp/startwm.sh
        fi
        #printf "%s\n" "Â∑≤Â∞ÜÊÇ®ÁöÑÈü≥È¢ëÊúçÂä°ip‰øÆÊîπ‰∏∫${WSL2IP}"
        #fi
        printf '%s\n' 'Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØWSL,‰∏∫Èò≤Ê≠¢‰∏éwindowsËá™Â∏¶ÁöÑËøúÁ®ãÊ°åÈù¢ÁöÑ3389Á´ØÂè£ÂÜ≤Á™ÅÔºåËØ∑ÊÇ®ËÆæÂÆö‰∏Ä‰∏™Êñ∞ÁöÑÁ´ØÂè£'
        sleep 2s
    fi
    case ${TMOE_CHROOT} in
    true) usermod -a -G aid_inet xrdp ;;
    esac
    xrdp_port
    xrdp_restart
    ################
    press_enter_to_return_configure_xrdp
    #Ê≠§Â§ÑÁöÑËøîÂõûÊ≠•È™§Âπ∂ÈùûÂ§ö‰Ωô
}
############
xrdp_restart() {
    cd /etc/xrdp/
    RDP_PORT=$(cat xrdp.ini | grep 'port=' | head -n 1 | cut -d '=' -f 2)
    service xrdp restart 2>/dev/null || systemctl restart xrdp
    if [ "$?" != "0" ]; then
        /etc/init.d/xrdp restart
    fi
    check_xrdp_status
    printf "%s\n" "ÊÇ®ÂèØ‰ª•Ëæì${YELLOW}service xrdp stop${RESET}Êù•ÂÅúÊ≠¢ËøõÁ®ã"
    printf "%s\n" "ÊÇ®ÂΩìÂâçÁöÑIPÂú∞ÂùÄ‰∏∫"
    ip -4 -br -c a | cut -d '/' -f 1
    printf "%s\n" "Á´ØÂè£Âè∑‰∏∫${RDP_PORT}"
    printf "%s\n" "Ê≠£Âú®‰∏∫ÊÇ®ÂêØÂä®xrdpÊúçÂä°ÔºåÊú¨Êú∫ÈªòËÆ§ËÆøÈóÆÂú∞ÂùÄ‰∏∫localhost:${RDP_PORT}"
    TMOE_IP_ADDR=$(ip -4 -br -c a | awk '{print $NF}' | cut -d '/' -f 1 | grep -v '127\.0\.0\.1')
    echo The LAN VNC address Â±ÄÂüüÁΩëÂú∞ÂùÄ ${TMOE_IP_ADDR} | sed "s@\$@:${RDP_PORT}@"
    #echo The LAN address Â±ÄÂüüÁΩëÂú∞ÂùÄ $(ip -4 -br -c a | tail -n 1 | cut -d '/' -f 1 | cut -d 'P' -f 2):${RDP_PORT}
    printf "%s\n" "Â¶ÇÈúÄÂÅúÊ≠¢xrdpÊúçÂä°ÔºåËØ∑Ëæìservice xrdp stopÊàñsystemctl stop xrdp"
    printf "%s\n" "Â¶ÇÈúÄ‰øÆÊîπÂΩìÂâçÁî®Êà∑ÂØÜÁ†ÅÔºåËØ∑Ëæìpasswd"
    if [ "${LINUX_DISTRO}" = "arch" ]; then
        printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØarchÁ≥ªÂèëË°åÁâàÔºåÊÇ®‰πãÂêéÂèØ‰ª•ËæìxrdpÊù•ÂêØÂä®xrdpÊúçÂä°"
        xrdp
    fi
    if [ "${WINDOWS_DISTRO}" = 'WSL' ]; then
        printf '%s\n' 'Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØWSLÔºåÊ≠£Âú®‰∏∫ÊÇ®ÊâìÂºÄÈü≥È¢ëÊúçÂä°'
        export PULSE_SERVER=${PULSE_SERVER:-127.0.0.1}
        #if grep -q '172..*1' "/etc/resolv.conf"; then
        if [ "$(uname -r | cut -d '-' -f 2)" = "microsoft" ]; then
            printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâç‰ΩøÁî®ÁöÑÂèØËÉΩÊòØWSL2"
            #WSL2IP=$(sed -n p /etc/resolv.conf | grep nameserver | awk '{print $2}' | head -n 1)
            export PULSE_SERVER=$(ip route list table 0 | head -n 1 | awk -F 'default via ' '{print $2}' | awk '{print $1}')
            printf "%s\n" "Â∑≤Â∞ÜÊÇ®ÁöÑÈü≥È¢ëÊúçÂä°ip‰øÆÊîπ‰∏∫${PULSE_SERVER}"
        fi
        cd "/mnt/c/Users/Public/Downloads/pulseaudio/bin"
        /mnt/c/WINDOWS/system32/cmd.exe /c "start .\pulseaudio.bat" &
        printf "%s\n" "Ëã•Êó†Ê≥ïËá™Âä®ÊâìÂºÄÈü≥È¢ëÊúçÂä°ÔºåÂàôËØ∑ÊâãÂä®Âú®ËµÑÊ∫êÁÆ°ÁêÜÂô®‰∏≠ÊâìÂºÄC:\Users\Public\Downloads\pulseaudio\pulseaudio.bat"
    fi
}
#################
xrdp_port() {
    cd /etc/xrdp/
    RDP_PORT=$(cat xrdp.ini | grep 'port=' | head -n 1 | cut -d '=' -f 2)
    TARGET=$(whiptail --inputbox "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÁ´ØÂè£Âè∑(Á∫ØÊï∞Â≠ó)ÔºåËåÉÂõ¥Âú®1-65525‰πãÈó¥,‰∏çÂª∫ËÆÆÊÇ®Â∞ÜÂÖ∂ËÆæÁΩÆ‰∏∫22„ÄÅ80„ÄÅ443Êàñ3389,Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÁöÑÁ´ØÂè£‰∏∫${RDP_PORT}\n Please type the port number." 12 50 --title "PORT" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        #printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂèñÊ∂à‰∫ÜÊìç‰Ωú"
        ${RETURN_TO_WHERE}
        #printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂèñÊ∂à‰∫ÜÊìç‰ΩúÔºåËØ∑ËøîÂõûÈáçËØï„ÄÇ"
        #press_enter_to_return_configure_xrdp
    elif [ -z "${TARGET}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please enter a valid value"
    else
        sed -i "s@port=${RDP_PORT}@port=${TARGET}@" xrdp.ini
        ls -l $(pwd)/xrdp.ini
        cat xrdp.ini | grep 'port=' | head -n 1
        /etc/init.d/xrdp restart
    fi
}
#################
xrdp_systemd() {
    case "${TMOE_PROOT}" in
    true)
        printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂ§Ñ‰∫é${BLUE}prootÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºåÊó†Ê≥ï‰ΩøÁî®systemctlÂëΩ‰ª§"
        ;;
    false) printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâçÂ§Ñ‰∫échrootÂÆπÂô®ÁéØÂ¢É‰∏ãÔºåÊó†Ê≥ï‰ΩøÁî®systemctlÂëΩ‰ª§" ;;
    esac
    cat <<-'EOF'
		    systemdÁÆ°ÁêÜ
			Ëæìsystemctl start xrdpÂêØÂä®
			Ëæìsystemctl stop xrdpÂÅúÊ≠¢
			Ëæìsystemctl status xrdpÊü•ÁúãËøõÁ®ãÁä∂ÊÄÅ
			Ëæìsystemctl enable xrdpÂºÄÊú∫Ëá™ÂêØ
			Ëæìsystemctl disable xrdpÁ¶ÅÁî®ÂºÄÊú∫Ëá™ÂêØ

			serviceÂëΩ‰ª§
			Ëæìservice xrdp startÂêØÂä®
			Ëæìservice xrdp stopÂÅúÊ≠¢
			Ëæìservice xrdp statusÊü•ÁúãËøõÁ®ãÁä∂ÊÄÅ

		    init.dÁÆ°ÁêÜ
			/etc/init.d/xrdp startÂêØÂä®
			/etc/init.d/xrdp restartÈáçÂêØ
			/etc/init.d/xrdp stopÂÅúÊ≠¢
			/etc/init.d/xrdp statussÊü•ÁúãËøõÁ®ãÁä∂ÊÄÅ
			/etc/init.d/xrdp force-reloadÈáçÊñ∞Âä†ËΩΩ
	EOF
}
###############
xrdp_reset() {
    printf "%s\n" "Ê≠£Âú®ÂÅúÊ≠¢xrdpËøõÁ®ã..."
    printf "%s\n" "Stopping xrdp..."
    pkill xrdp
    service xrdp stop 2>/dev/null
    printf "%s\n" "${YELLOW}WARNINGÔºÅÁªßÁª≠ÊâßË°åÊ≠§Êìç‰ΩúÂ∞Ü‰∏¢Â§±xrdpÈÖçÁΩÆ‰ø°ÊÅØÔºÅ${RESET}"
    RETURN_TO_WHERE='configure_xrdp'
    do_you_want_to_continue
    rm -f /etc/polkit-1/localauthority/50-local.d/45-allow.colord.pkla /etc/polkit-1/localauthority.conf.d/02-allow-colord.conf
    cd ${HOME}/.config/tmoe-linux
    cp -pvf xrdp.ini startwm.sh /etc/xrdp/
}
#################################
#################################
configure_startxsdl() {
    cd /usr/local/bin
    cp -f ${TMOE_TOOL_DIR}/gui/startxsdl ./
    [[ ${WINDOWS_DISTRO} = WSL ]] && cp -af ${TMOE_TOOL_DIR}/gui/wslg ./

    case ${REDHAT_DISTRO} in
    fedora) ;;
    centos) sed -i -E "s@(AUTO_START_DBUS=).*@\1false@" startvnc startxsdl ;;
    esac
    #--exit-with-session
    #ÂêØÂä®ÂëΩ‰ª§ÁªìÂ∞æÊó†&
    ###############################
    #debianÁ¶ÅÁî®dbusÂàÜ‰∏§Ê¨°ÔºåÂπ∂ÈùûÈáçÂ§ç
    # if [ "${NON_DBUS}" = "true" ]; then
    #     case "${TMOE_PROOT}" in
    #     true)
    #         sed -i 's:dbus-launch::' ${XSESSION_FILE}
    #         ;;
    #     esac
    # fi
}
#################
configure_startvnc() {
    cd /usr/local/bin
    #rm -f startvnc
    cp -f ${TMOE_TOOL_DIR}/gui/startvnc ${TMOE_TOOL_DIR}/gui/stopvnc ./
    cp -f ${TMOE_TOOL_DIR}/gui/tightvnc ${TMOE_TOOL_DIR}/gui/tigervnc ./
    chmod a+rx ./*vnc
}
###############
fix_non_root_permissions() {
    if [ ${HOME} != '/root' ]; then
        printf "%s\n" "Ê£ÄÊµãÂà∞${HOME}ÁõÆÂΩï‰∏ç‰∏∫/rootÔºå‰∏∫ÈÅøÂÖçÊùÉÈôêÈóÆÈ¢òÔºåÊ≠£Âú®Â∞Ü${CURRENT_USER_FILE}ÁöÑÊùÉÈôêÂΩíÂ±û‰øÆÊîπ‰∏∫${CURRENT_USER_NAME}Áî®Êà∑Âíå${CURRENT_USER_GROUP}Áî®Êà∑ÁªÑ"
        sudo -E chown -R ${CURRENT_USER_NAME}:${CURRENT_USER_GROUP} "${CURRENT_USER_FILE}" || su -c "chown -R ${CURRENT_USER_NAME}:${CURRENT_USER_GROUP} ${CURRENT_USER_FILE}"
    fi
}
################
tiger_vnc_variable() {
    VNC_SERVER=tiger
    VNC_SERVER_BIN="tigervnc"
    VNC_SERVER_BIN_NOW="tightvncserver"
    #Êó†ÈúÄÂÆâË£Ötigervnc-xorg-extension
    DEPENDENCY_01="tigervnc-viewer"
    DEPENDENCY_02="tigervnc-standalone-server"
}
#######
tight_vnc_variable() {
    VNC_SERVER=tight
    VNC_SERVER_BIN="tightvnc"
    VNC_SERVER_BIN_NOW="tigervnc-standalone-server"
    DEPENDENCY_01="tigervnc-viewer xfonts-100dpi xfonts-75dpi xfonts-scalable"
    DEPENDENCY_02="tightvncserver"
}
######
debian_remove_vnc_server() {
    printf "%s\n" "${RED}apt remove -y ${VNC_SERVER_BIN_NOW}${RESET}"
    apt remove -y ${VNC_SERVER_BIN_NOW}
}
eatmydata_apt_install_i() {
    eatmydata apt install -y ${i} || apt-get install -y ${i}
}
debian_install_vnc_server() {
    case ${LINUX_DISTRO} in
    debian)
        #debian_remove_vnc_server
        #printf "%s\n" "${BLUE}${TMOE_INSTALLATION_COMMAND} ${DEPENDENCY_02} ${DEPENDENCY_01}${RESET}"
        printf "%s\n" "${PURPLE}sudo ${GREEN}eatmydata apt ${YELLOW}install -y ${BLUE}tigervnc-standalone-server tigervnc-common tigervnc-viewer${RESET}"
        if [[ -z $(command -v Xtigervnc) ]]; then
            for i in tigervnc-standalone-server tigervnc-viewer; do
                eatmydata_apt_install_i
            done
        fi
        if [[ -z $(command -v Xtigervnc) ]]; then
            i=vnc4server
            eatmydata_apt_install_i
        fi
        printf "%s\n" "${PURPLE}sudo ${GREEN}eatmydata apt ${YELLOW}install -y ${BLUE}tightvncserver${RESET}"
        if [[ ! $(command -v Xtightvnc) ]]; then
            i=tightvncserver
            eatmydata_apt_install_i
            sed -i -E 's@(configure)@pre\1@' /var/lib/dpkg/info/tightvncserver.postinst
            dpkg --configure -a
        fi
        printf "%s\n" "${PURPLE}sudo ${GREEN}eatmydata apt ${YELLOW}install -y ${BLUE}xfonts-100dpi xfonts-75dpi xfonts-scalable${RESET}"
        if [ ! -s "/usr/share/fonts/X11/100dpi/timR24.pcf.gz" ]; then
            i=xfonts-100dpi
            eatmydata_apt_install_i
        fi
        if [ ! -s "/usr/share/fonts/X11/75dpi/term14.pcf.gz" ]; then
            i=xfonts-75dpi
            eatmydata_apt_install_i
        fi
        if [ ! -s "/usr/share/fonts/X11/Type1/c0419bt_.afm" ]; then
            i=xfonts-scalable
            eatmydata_apt_install_i
        fi

        if [[ -e "/usr/share/fonts/X11/Type1" && ! -e /usr/share/fonts/X11/Speedo ]]; then
            ln -svf /usr/share/fonts/X11/Type1 /usr/share/fonts/X11/Speedo
        fi
        [[ -z ${VNC_SERVER} ]] || sed -i -E "s@^(VNC_SERVER)=.*@\1=${VNC_SERVER}@" $(command -v startvnc)
        ;;
    esac
}
#######
grep_tiger_vnc_deb_file() {
    LATEST_DEB_VERSION=$(curl -L "${LATEST_DEB_REPO}" | grep '\.deb' | grep "${ARCH_TYPE}" | grep "${GREP_NAME_01}" | grep "${GREP_NAME_02}" | tail -n 1 | cut -d '=' -f 3 | cut -d '"' -f 2)
    LATEST_DEB_URL="${LATEST_DEB_REPO}${LATEST_DEB_VERSION}"
    LATEST_DEB_URL_02="${LATEST_DEB_REPO_02}${LATEST_DEB_VERSION}"
}
#######
ubuntu_install_tiger_vnc_server() {
    apt-mark unhold tigervnc-common tigervnc-standalone-server
    debian_install_vnc_server
    LATEST_DEB_REPO="https://mirrors.bfsu.edu.cn/debian/pool/main/t/tigervnc/"
    LATEST_DEB_REPO_02="https://mirrors.tuna.tsinghua.edu.cn/debian/pool/main/t/tigervnc/"
    GREP_NAME_01='tigervnc-common'
    GREP_NAME_02='deb10'
    TEMP_FOLDER='/tmp/.TIGER_VNC_TEMP_FOLDER'
    mkdir ${TEMP_FOLDER}
    cd ${TEMP_FOLDER}
    grep_tiger_vnc_deb_file
    aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o "tigervnc-common_ubuntu-focal.deb" "${LATEST_DEB_URL}" || curl -L -o "tigervnc-common_ubuntu-focal.deb" "${LATEST_DEB_URL_02}"
    GREP_NAME_01='tigervnc-standalone-server'
    grep_tiger_vnc_deb_file
    aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o "tigervnc-standalone-server_ubuntu-focal.deb" "${LATEST_DEB_URL}" || curl -L -o -o "tigervnc-standalone-server_ubuntu-focal.deb" "${LATEST_DEB_URL_02}"
    LATEST_DEB_REPO="https://mirrors.bfsu.edu.cn/debian/pool/main/libj/libjpeg-turbo/"
    GREP_NAME_01='libjpeg62-turbo_'
    GREP_NAME_02='deb'
    grep_tiger_vnc_deb_file
    aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o "libjpeg62-turbo_ubuntu-focal.deb" "${LATEST_DEB_URL}" || curl -L -o "libjpeg62-turbo_ubuntu-focal.deb" "${LATEST_DEB_URL_02}"
    dpkg -i ./libjpeg62-turbo_ubuntu-focal.deb ./tigervnc-common_ubuntu-focal.deb ./tigervnc-standalone-server_ubuntu-focal.deb
    apt-mark hold tigervnc-common tigervnc-standalone-server
    cd ~
    rm -rvf ${TEMP_FOLDER}
}
###########
modify_to_xfwm4_breeze_theme() {
    case ${TMOE_HIGH_DPI} in
    true) ;;
    *) [[ ! -e "/usr/share/themes/Breeze/xfwm4/themerc" ]] || dbus-launch xfconf-query -c xfwm4 -t string -np /general/theme -s Breeze 2>/dev/null ;;
    esac
}
##########
which_vnc_server_do_you_prefer() {
    case "${REMOTE_DESKTOP_SESSION_01}" in
    startplasma* | startlxqt | gnome* | cinnamon* | startdde | ukui* | budgie*)
        if (whiptail --title "Which vnc server do you prefer" --yes-button 'tiger' --no-button 'tight' --yesno "Ê£ÄÊµãÂà∞Ê°åÈù¢ÁöÑsession/startupÊñá‰ª∂‰∏∫${REMOTE_DESKTOP_SESSION_01},ËØ∑ÈÄâÊã©tigerÔºÅ\nPlease choose tiger vncserverÔºÅ" 0 50); then
            tiger_vnc_variable
            modify_to_xfwm4_breeze_theme
        else
            tight_vnc_variable
        fi
        ;;
    *)
        if (whiptail --title "Which vnc server do you prefer" --yes-button 'tiger' --no-button 'tight' --yesno "ËØ∑ÈÄâÊã©startvncÂëΩ‰ª§ÊâÄÂêØÂä®ÁöÑVNCÊúçÂä°Á´Ø(„Å£ ¬∞–î ¬∞)\nÂ∞ΩÁÆ°tightÂèØËÉΩÊõ¥Âä†ÊµÅÁïÖ,‰ΩÜÊòØtigerÊØîtightÊîØÊåÅÊõ¥Â§öÁöÑÁâπÊïàÂíåÈÄâÈ°π,‰æãÂ¶ÇÈº†Ê†áÊåáÈíàÂíåËÉåÊôØÈÄèÊòéÁ≠â\nAlthough tiger can show more special effects,tight may be smoother.\nIt is recommended to use tiger.\nYou only need to edit the startvnc script to change the vnc server at any time." 0 50); then
            tiger_vnc_variable
            modify_to_xfwm4_breeze_theme
        else
            tight_vnc_variable
        fi
        ;;
    esac
    [[ -z ${VNC_SERVER} ]] || sed -i -E "s@^(VNC_SERVER)=.*@\1=${VNC_SERVER}@" $(command -v startvnc)
}
###################
case_debian_distro_and_install_vnc() {
    case ${DEBIAN_DISTRO} in
    ubuntu)
        if grep -Eq 'Focal Fossa|focal|Eoan Ermine' "/etc/os-release"; then
            case ${VNC_SERVER_BIN} in
            tigervnc)
                case $(apt list --installed 2>&1 | grep 'tigervnc-standalone-server' | awk '{print $2}') in
                1.9.*) ;;
                *) ubuntu_install_tiger_vnc_server ;;
                esac
                ;;
            *)
                apt-mark unhold tigervnc-common tigervnc-standalone-server
                debian_install_vnc_server
                ;;
            esac
        else
            debian_install_vnc_server
        fi
        ;;
    *) debian_install_vnc_server ;;
    esac
    [[ -z ${VNC_SERVER} ]] || sed -i -E "s@^(VNC_SERVER)=.*@\1=${VNC_SERVER}@" $(command -v startvnc)
}
#########
remove_udisk_and_gvfs() {
    case "${TMOE_PROOT}" in
    false) ;;
    true)
        if [ ${REMOVE_UDISK2} = 'true' ]; then
            if [ "${LINUX_DISTRO}" = 'debian' ]; then
                if grep -Eq 'Focal Fossa|focal|bionic|Bionic Beaver|Eoan Ermine|buster|stretch|jessie|Deepin 20|Uos 20' "/etc/os-release"; then
                    printf "%s\n" "Ê£ÄÊµãÂà∞ÊÇ®Â§Ñ‰∫é${BLUE}prootÂÆπÂô®${RESET}ÁéØÂ¢É‰∏ãÔºåÂç≥Â∞Ü‰∏∫ÊÇ®${RED}Âç∏ËΩΩ${RESET}${YELLOW}udisk2${RESET}Âíå${GREEN}gvfs${RESET}"
                    #umount .gvfs
                    apt purge -y --allow-change-held-packages ^udisks2 ^gvfs
                fi
            fi
        fi
        ;;
    esac
}
##########
first_configure_startvnc() {
    #Âç∏ËΩΩudisks2Ôºå‰ºöÁ†¥ÂùèmateÂíåplasmaÁöÑ‰æùËµñÂÖ≥Á≥ª„ÄÇ
    remove_udisk_and_gvfs
    configure_startvnc
    configure_startxsdl
    chmod a+rx -v startvnc stopvnc startxsdl

    if [[ ${LINUX_DISTRO} = debian ]]; then
        VNC_SERVER=tigervnc
        tiger_vnc_variable
        case_debian_distro_and_install_vnc
    fi
    #if [ "${LINUX_DISTRO}" != "debian" ]; then
    #sed -i 's@--exit-with-session@@' ${XSESSION_FILE}
    #/usr/local/bin/startxsdl
    #else
    #|stretch|jessie    #if ! grep -Eq 'Focal Fossa|focal|Eoan Ermine' "/etc/os-release"; then
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        case ${LINUX_DISTRO} in
        debian) which_vnc_server_do_you_prefer ;;
        esac
    fi
    #fi
    ######################
    [[ ! $(command -v apt-get) ]] || dpkg --configure -a 2>/dev/null
    if [[ ! -s "${HOME}/.vnc/passwd" ]]; then
        set_vnc_passwd
    fi
    choose_vnc_port_5902_or_5903
    printf "$BLUE"
    cat <<-'EndOFneko'
		               .::::..                
		    ::::rrr7QQJi::i:iirijQBBBQB.      
		    BBQBBBQBP. ......:::..1BBBB       
		    .BuPBBBX  .........r.  vBQL  :Y.  
		     rd:iQQ  ..........7L   MB    rr  
		      7biLX .::.:....:.:q.  ri    .   
		       JX1: .r:.r....i.r::...:.  gi5  
		       ..vr .7: 7:. :ii:  v.:iv :BQg  
		       : r:  7r:i7i::ri:DBr..2S       
		    i.:r:. .i:XBBK...  :BP ::jr   .7. 
		    r  i....ir r7.         r.J:   u.  
		   :..X: .. .v:           .:.Ji       
		  i. ..i .. .u:.     .   77: si   1Q  
		 ::.. .r .. :P7.r7r..:iLQQJ: rv   ..  
		7  iK::r  . ii7r LJLrL1r7DPi iJ     r 
		  .  ::.:   .  ri 5DZDBg7JR7.:r:   i. 
		 .Pi r..r7:     i.:XBRJBY:uU.ii:.  .  
		 QB rJ.:rvDE: .. ri uv . iir.7j r7.   
		iBg ::.7251QZ. . :.      irr:Iu: r.   
		 QB  .:5.71Si..........  .sr7ivi:U    
		 7BJ .7: i2. ........:..  sJ7Lvr7s    
		  jBBdD. :. ........:r... YB  Bi      
		     :7j1.                 :  :       

	EndOFneko
    printf "$RESET"
    printf '%s\n' '------------------------'
    TMOE_HIGH_DPI='default'
    if [ -e "${TMOE_LINUX_DIR}/wm_size.txt" ]; then
        RESOLUTION=$(awk -F 'x' '{print $2,$1}' ${TMOE_LINUX_DIR}/wm_size.txt | sed 's@ @x@')
        HORIZONTAL_PIXELS=$(awk -F 'x' '{print $2}' ${TMOE_LINUX_DIR}/wm_size.txt | head -n 1)
        if ((HORIZONTAL_PIXELS >= 2340)); then
            TMOE_HIGH_DPI=true
        else
            TMOE_HIGH_DPI=false
        fi
        expr ${HORIZONTAL_PIXELS} + 0 &>/dev/null
        case "$?" in
        0) ;;
        *) RESOLUTION='' ;;
        esac
    else
        RESOLUTION=''
    fi
    ##########
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        if [ ! -z "${RESOLUTION}" ]; then
            if (whiptail --title "Is your resolution ${RESOLUTION}?" --yes-button 'YES' --no-button 'NO' --yesno "Your host is detected as Android and the resolution is ${RESOLUTION}" 0 50); then
                printf "%s\n" "Your resolution is ${RESOLUTION}"
            else
                RESOLUTION='1440x720'
                TMOE_HIGH_DPI='default'
            fi
        fi
    else
        RESOLUTION='1440x720'
        TMOE_HIGH_DPI='default'
    fi
    ###########
    case ${TMOE_MENU_LANG} in
    zh*UTF-8) local _Description="ÊÇ®ÂΩìÂâçÊòØÂê¶‰ΩøÁî®720P/1080PÂàÜËæ®ÁéáÁöÑÂ±èÂπï/ÊòæÁ§∫Âô®?(„Å£ ¬∞–î ¬∞)\nËÆæÂ±èÂπïÂàÜËæ®Áéá‰∏∫x,Ëã•720P<=x<=1080p,ÂàôÈÄâÊã©Yes;Ëã•2K<=x<=4K,ÂàôÈÄâÊã©No" ;;
    *) local _Description="If your screen resolution is between 720P & 1080P, then choose yes. If it is between 2K & 4K, then choose no" ;;
    esac

    case "${REMOTE_DESKTOP_SESSION_01}" in
    xfce4-session)
        if [ -z "${RESOLUTION}" ]; then
            if (whiptail --title "720P/1080P Screen/Monitor" --yes-button 'Yes' --no-button 'No' --yesno "$_Description" 0 50); then
                RESOLUTION='1440x720'
                TMOE_HIGH_DPI='default'
            else
                RESOLUTION='2880x1440'
                TMOE_HIGH_DPI=true
            fi
        fi
        ;;
    lxsession)
        for i in /etc/xdg/autostart/lxpolkit.desktop /usr/bin/lxpolkit; do
            if [ -f "${i}" ]; then
                mv -f ${i} ${i}.bak 2>/dev/null
            fi
        done
        unset i
        ;;
    esac
    #######
    if [ -z "${RESOLUTION}" ]; then
        RESOLUTION='1440x720'
        TMOE_HIGH_DPI='default'
    fi
    case ${TMOE_HIGH_DPI} in
    true) xfce4_tightvnc_hidpi_settings ;;
    false) tmoe_gui_normal_dpi ;;
    default) tmoe_gui_default_dpi ;;
    esac
    ######
    if [[ -L ~/startvnc ]]; then
        ln -svf $(command -v startvnc) ~/startvnc
    fi
    if [ ${HOME} != '/root' ]; then
        cd ${HOME}
        printf "%s\n" "Ê£ÄÊµãÂà∞${HOME}ÁõÆÂΩï‰∏ç‰∏∫/rootÔºå‰∏∫ÈÅøÂÖçÊùÉÈôêÈóÆÈ¢òÔºåÊ≠£Âú®Â∞Ü${HOME}ÁõÆÂΩï‰∏ãÁöÑ.ICEauthority, .Xauthority, .config, .cache, .dbus‰ª•Âèä.vncÁöÑÊùÉÈôêÂΩíÂ±û‰øÆÊîπ‰∏∫${CURRENT_USER_NAME}Áî®Êà∑Âíå${CURRENT_USER_GROUP}Áî®Êà∑ÁªÑ"
        printf "%s\n" "Ëã•ÊÇ®ÈÅáÂà∞‰∫ÜÊùÉÈôêÈóÆÈ¢òÔºåÂàôËØ∑ÊâãÂä®ÊâßË°å${GREEN}chown -Rv ${YELLOW}${CURRENT_USER_NAME}:${CURRENT_USER_GROUP} ${BLUE}${HOME}${RESET}"
        VNC_CONFIG_FOLDER=".config"
        for i in ".ICEauthority" ".Xauthority" ".vnc" ".cache" ".dbus" ".local"; do
            if [[ -e ${i} ]]; then
                VNC_CONFIG_FOLDER="${VNC_CONFIG_FOLDER} ${i}"
            fi
        done
        sudo -E chown -R ${CURRENT_USER_NAME}:${CURRENT_USER_GROUP} ${VNC_CONFIG_FOLDER}
    fi
    ######
    cat <<-EOF
		------------------------
		‰∏ÄÔºö
		${YELLOW}ÂÖ≥‰∫éÈü≥È¢ëÊúçÂä°Êó†Ê≥ïËá™Âä®ÂêØÂä®ÁöÑËØ¥Êòé${RESET}Ôºö
		------------------------
		If you find that you cannot connect to the audio server after starting vnc, please create a new termux session and type ${GREEN}pulseaudio --start${RESET}.
		Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãÔºåÈü≥È¢ëÊúçÂä°‰ºöËá™Âä®ÂêØÁî®„ÄÇËã•Âõ†Êüê‰∫õÁâπÊÆäÂéüÂõ†ÂØºËá¥ÂêØÂä®ÊàñË∞ÉÁî®ÂºÇÂ∏∏ÔºåÂàôËØ∑ÊÇ®ÈòÖËØª‰ª•‰∏ãËØ¥Êòé„ÄÇ
		------------------------
		Ëã•ÊÇ®ÁöÑÈü≥È¢ëÊúçÂä°Á´Ø‰∏∫${BLUE}AndroidÁ≥ªÁªü${RESET}ÔºåËØ∑Âú®ÂõæÂΩ¢ÁïåÈù¢ÂêØÂä®ÂÆåÊàêÂêéÔºåÊñ∞Âª∫‰∏Ä‰∏™termux‰ºöËØùÁ™óÂè£ÔºåÁÑ∂ÂêéÊâãÂä®Âú®termuxÂéüÁ≥ªÁªüÈáåËæì${GREEN}pulseaudio -D${RESET}Êù•ÂêØÂä®Èü≥È¢ëÊúçÂä°ÂêéÂè∞ËøõÁ®ã„ÄÇËã•ÊÇ®Êó†Ê≥ïËÆ∞‰ΩèËØ•ÂëΩ‰ª§ÔºåÂàôÂè™ÈúÄËæì${GREEN}debian${RESET}„ÄÇ
		------------------------
		Ëã•ÊÇ®ÁöÑÈü≥È¢ëÊúçÂä°Á´Ø‰∏∫${BLUE}windows10Á≥ªÁªü${RESET}ÔºåÂàôËØ∑ÊâãÂä®ÊâìÂºÄ'C:\Users\Public\Downloads\pulseaudio\pulseaudio.bat'„ÄÇ
		Ê≥®ÔºöÊÇ®Êó†ÈúÄ‰øÆÊîπPULSE_SERVERÂèòÈáè,WSL2ÁöÑÈü≥È¢ëÊúçÂä°Âú∞ÂùÄÂ∞ÜÊ†πÊçÆNATÁΩëÂÖ≥Ëá™Âä®ÁîüÊàê„ÄÇ
		------------------------
		Ëã•ÊÇ®‰ΩøÁî®ÁöÑÊòØ${BLUE}AndroidÁâà${RESET}${YELLOW}Linux Deploy${RESET}Êàñ${YELLOW}Userland${RESET}ÔºåÂàôÊÇ®ÂèØ‰ª•‰ΩøÁî®Êú¨ËÑöÊú¨${RED}Ë¶ÜÁõñÂÆâË£Ö${RESET}ÂõæÂΩ¢ÁïåÈù¢„ÄÇ‰πãÂêé,ÊÇ®ÂèØ‰ª•Âú®${BLUE}Termux${RESET}‰∏äËæì${GREEN}debian-i${RESET}ËøêË°åTmoe-linux manager,Êü•Áúã${YELLOW}FAQ${RESET}Âπ∂ÈÖçÁΩÆLinux DeployÁöÑ${BLUE}Èü≥È¢ëÊúçÂä°ÂêØÂä®ËÑöÊú¨„ÄÇ${RESET}
		------------------------
	EOF
    printf "%s\n" "‰∫åÔºö"
    printf "%s\n" "${YELLOW}ÂÖ≥‰∫éVNCÂíåXÁöÑÂêØÂä®ËØ¥Êòé${RESET}"
    printf '%s\n' '------------------------'
    printf "%s\n" "You can type ${GREEN}startvnc${RESET} to ${YELLOW}start ${BLUE}vncserver${RESET},type ${GREEN}stopvnc${RESET} to ${RED}stop${RESET} it."
    printf "%s\n" "You can also type ${GREEN}startxsdl${RESET} to ${YELLOW}start ${BLUE}X client and server${RESET}."
    printf '%s\n' '------------------------'
    printf "%s\n" "ÊÇ®‰πãÂêéÂèØ‰ª•Âú®ÂéüÁ≥ªÁªüÈáåËæì${BOLD}${GREEN}startvnc${RESET}${YELLOW}ÂêåÊó∂ÂêØÂä®${BLUE}vncÊúçÂä°Á´ØÂíåÂÆ¢Êà∑Á´Ø${RESET}„ÄÇ"
    printf "%s\n" "Âú®ÂÆπÂô®ÈáåËæì${BOLD}${GREEN}startvnc${RESET}${PURPLE}(‰ªÖÊîØÊåÅ)${YELLOW}ÂêØÂä®${BLUE}vncÊúçÂä°Á´Ø${RESET}ÔºåËæì${GREEN}stopvnc${RED}ÂÅúÊ≠¢${RESET}"
    printf "%s\n" \
        "Âú®ÂéüÁ≥ªÁªüÈáåËæì${BOLD}${GREEN}startxsdl${RESET}ÂêåÊó∂ÂêØÂä®XÂÆ¢Êà∑Á´Ø‰∏éÊúçÂä°Á´Ø" \
        '------------------------' \
        '------------------------'
    if [ "${HOME}" != "/root" ]; then
        cp -rpf ~/.vnc /root/
        chown -R 0:0 /root/.vnc
    fi
    if [ "${WINDOWS_DISTRO}" = 'WSL' ]; then
        #printf "%s\n" "Ëã•Êó†Ê≥ïËá™Âä®ÊâìÂºÄXÊúçÂä°ÔºåÂàôËØ∑ÊâãÂä®Âú®ËµÑÊ∫êÁÆ°ÁêÜÂô®‰∏≠ÊâìÂºÄC:\Users\Public\Downloads\VcXsrv\vcxsrv.exe"
        printf "%s\n" "Win10 ${YELLOW}xserver bin file${RESET}: ${BLUE}C:\Users\Public\Downloads\VcXsrv\vcxsrv.exe${RESET}"
        cd "/mnt/c/Users/Public/Downloads"
        #if grep -q '172..*1' "/etc/resolv.conf"; then
        if [ "$(uname -r | cut -d '-' -f 2)" = "microsoft" ]; then
            printf "%s\n" \
                "Ê£ÄÊµãÂà∞ÊÇ®ÂΩìÂâç‰ΩøÁî®ÁöÑÂèØËÉΩÊòØWSL2ÔºåÂ¶ÇÈúÄÊâãÂä®ÂêØÂä®ÔºåËØ∑Âú®xlaunch.exe‰∏≠ÂãæÈÄâDisable access control" \
                "You can type ${GREEN}startxsdl${RESET} to ${BLUE}start${RESET} X client and win10 xserver(VcXsrv)."
            WSL2IP=$(ip route list table 0 | head -n 1 | awk -F 'default via ' '{print $2}' | awk '{print $1}')
            export PULSE_SERVER=${WSL2IP}
            export DISPLAY=${WSL2IP}:0
            printf "%s\n" \
                "Â∑≤Â∞ÜÊÇ®ÁöÑXÂíåÈü≥È¢ëÊúçÂä°ip‰øÆÊîπ‰∏∫${YELLOW}${WSL2IP}${RESET}" \
                "You are using WSL2,and your host ip is ${YELLOW}${WSL2IP}${RESET}" \
                "If you are using ${BLUE}win11(wsl2)${RESET}, it is recommended that you use the ${GREEN}wslg${RESET} command instead of ${YELLOW}startvnc${CYAN} or ${YELLOW}startxsdl${RESET}." \
                "ÂØπ‰∫é ${BLUE}win11${RESET}, ÊÇ®ÂèØ‰ª•‰ΩøÁî® ${GREEN} wslg ${RESET} ÂëΩ‰ª§„ÄÇ"
        else
            printf "%s\n" \
                "${YELLOW}Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØWSL1(Âàù‰ª£win10ÁöÑLinuxÂ≠êÁ≥ªÁªü)${RESET}" \
                "${YELLOW}Ëã•Êó†Ê≥ïÂêØÂä®xÊúçÂä°ÔºåÂàôËØ∑Âú®ÈÄÄÂá∫ËÑöÊú¨ÂêéÔºå‰ª•ÈùûrootË∫´‰ªΩÊâãÂä®ËæìstartxsdlÊù•ÂêØÂä®windowsÁöÑxÊúçÂä°${RESET}" \
                "ÊÇ®‰πüÂèØ‰ª•ÊâãÂä®ËæìstartvncÊù•ÂêØÂä®vncÊúçÂä°" \
                "You are using${YELLOW}WSL1${RESET}." \
                "You can type ${GREEN}startxsdl${RESET} to start windows xserver and linux xclient."
        fi
        cd ./VcXsrv
        printf "%s\n" \
            "ËØ∑Âú®ÂêØÂä®Èü≥È¢ëÊúçÂä°ÂâçÔºåÁ°Æ‰øùÊÇ®Â∑≤ÁªèÂÖÅËÆ∏pulseaudio.exeÈÄöËøáWindows DefenderÈò≤ÁÅ´Â¢ô" \
            "You need to allow pulseaudio to pass through the defender firewall, otherwise you will not be able to use the local audio service."
        if [ ! -e "Firewall-pulseaudio.png" ]; then
            aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o "Firewall-pulseaudio.png" 'https://gitee.com/mo2/pic_api/raw/test/2020/03/31/rXLbHDxfj1Vy9HnH.png'
        fi
        /mnt/c/WINDOWS/system32/cmd.exe /c "start Firewall.cpl"
        /mnt/c/WINDOWS/system32/cmd.exe /c "start .\Firewall-pulseaudio.png" 2>/dev/null
        ############
        if [ ! -e 'XserverhighDPI.png' ]; then
            aria2c --console-log-level=warn --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o 'XserverhighDPI.png' https://gitee.com/mo2/pic_api/raw/test/2020/03/27/jvNs2JUIbsSQQInO.png
        fi
        /mnt/c/WINDOWS/system32/cmd.exe /c "start .\XserverhighDPI.png" 2>/dev/null
        printf "%s\n" \
            "Ëã•XÊúçÂä°ÁöÑÁîªÈù¢Ëøá‰∫éÊ®°Á≥äÔºåÂàôÊÇ®ÈúÄË¶ÅÂè≥Âáªvcxsrv.exeÔºåÂπ∂ÊâãÂä®‰øÆÊîπÂÖºÂÆπÊÄßËÆæÂÆö‰∏≠ÁöÑÈ´òDpiÈÄâÈ°π„ÄÇ" \
            "vcxsrvÊñá‰ª∂‰ΩçÁΩÆ‰∏∫C:\Users\Public\Downloads\VcXsrv\vcxsrv.exe" \
            "You can right-click vcxsrv.exe and modify the high-dpi setting."
        #printf "%s\n" "${YELLOW}ÊåâÂõûËΩ¶ÈîÆÂêØÂä®X${RESET}"
        #printf "%s\n" "${YELLOW}Press enter to startx${RESET}"
        printf '%s\n' \
            'ËøêË°åËøáÁ®ã‰∏≠ÔºåÊÇ®ÂèØ‰ª•ËæìstopvncÂÅúÊ≠¢XÂíåvncÔºåËæìpkill -u $(whoami)ÁªàÊ≠¢ÂΩìÂâçÁî®Êà∑ÊâÄÊúâËøõÁ®ã' \
            'You can type pkill -u $(whoami) to kill all processes.'
        #‰∏äÈù¢ÈÇ£Ë°åÂøÖÈ°ªË¶ÅÂçïÂºïÂè∑
        #read
        cd "/mnt/c/Users/Public/Downloads"
        /mnt/c/WINDOWS/system32/cmd.exe /c "start ."
        #startxsdl &
    fi
    printf "%s\n" "Ëã•ÊÇ®ÁöÑÂÆø‰∏ªÊú∫‰∏∫${YELLOW}Android${RESET},ÂàôÂú®${PURPLE}termuxÂéüÁ≥ªÁªü${RESET}‰∏ãËæìÂÖ•${GREEN}startvnc${RESET}Â∞ÜÂêåÊó∂ÂêØÂä®${BLUE}Realvnc viewer${RESET}ÂÆ¢Êà∑Á´ØÂíåÂÆπÂô®ÁöÑVNCÊúçÂä°Á´Ø„ÄÇÊ≥®ÔºöÈúÄÊâãÂä®ËøûÊé•„ÄÇ"
    printf '%s\n' '------------------------'
    printf "%s\n" \
        "Ëã•ÊÇ®ÁöÑÂÆø‰∏ªÊú∫‰∏∫${YELLOW}Win10${RESET},ÂàôÂú®${PURPLE}WSL2${RESET}(ÈùûÂÆπÂô®ÁéØÂ¢É)‰∏ãËæìÂÖ•${GREEN}startvnc${RESET}Â∞ÜÂêåÊó∂ÂêØÂä®${BLUE}Tigervnc viewer(win_x64)${RESET}ÂÆ¢Êà∑Á´ØÂíåtigervncÊúçÂä°Á´ØÔºåÂπ∂Ëá™Âä®ËøûÊé•„ÄÇÊ≠§Â§ñÔºåËøòÂ∞ÜÂêØÂä®windowsÁâàpowershell,Âπ∂Ë∞ÉÁî®pulseaudio(win_x86)Èü≥È¢ëÊúçÂä°+ËøõÁ®ãÂÆàÊä§ËÑöÊú¨„ÄÇ" \
        "ÂØπ‰∫é ${BLUE}win11${RESET} ÁöÑ ${PURPLE}WSL2${RESET}, Êé®Ëçê‰ΩøÁî®${GREEN}wslg${RESET}ÔºåËÄå${RED}‰∏çÊòØ ${GREEN}startvnc${RESET} Êàñ ${GREEN}startxsdl${RESET}„ÄÇ" \
        "For ${BLUE}win11(${PURPLE}WSL2)${RESET}, please use the ${GREEN}wslg${RESET} command." \
        '------------------------'
    if [[ $(command -v apt-get) ]]; then
        printf "%s\n" \
            "You can type ${GREEN}tightvnc${RESET} to ${YELLOW}start ${BLUE}tightvncserver${RESET},type ${GREEN}tigervnc${RESET} to ${BLUE}tigervncserver${RESET} it." \
            "ËæìÂÖ•${GREEN}tightvnc${RESET}${YELLOW}ÂêØÂä®${BLUE}tightvncÊúçÂä°Á´Ø${RESET}ÔºåËæìÂÖ•${GREEN}tigervnc${RESET}${YELLOW}ÂêØÂä®${BLUE}tigervncÊúçÂä°Á´Ø${RESET}„ÄÇ"
    fi
    printf "%s\n" "${GREEN}tightvnc+tigervnc & x window${RESET}ÈÖçÁΩÆ${BLUE}ÂÆåÊàê${RESET},Â∞Ü‰∏∫ÊÇ®ÈÖçÁΩÆ${GREEN}x11vnc${RESET}"
    printf "%s\n" "Êåâ${YELLOW}ÂõûËΩ¶ÈîÆ${RESET}Êü•Áúãx11vncÁöÑ${BLUE}ÂêØÂä®ËØ¥Êòé${RESET}"
    printf "%s\n" "If you don't want to read these instructions, then you only need to remember 4 commands: ${GREEN}startvnc, startxsdl, startx11vnc${RESET} & ${PURPLE}stopvnc${RESET}"
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        press_enter_to_continue
    fi
    printf '%s\n' "Ê≥®Ôºö${GREEN}ÈÖçÁΩÆÂÆå${RESET}Êú¨Â∑•ÂÖ∑ÊâÄÊîØÊåÅÁöÑÊâÄÊúâVNC,Â∞Ü${BLUE}Ëß£ÈîÅÊàêÂ∞±*¬∞‚ñΩ¬∞*${RESET}"
    printf '%s\n' '------------------------'
    printf '%s\n' '‰∏âÔºö'
    check_xvnc_command
    x11vnc_warning
    configure_x11vnc_remote_desktop_session
    xfce4_x11vnc_hidpi_settings
    [[ ! ${X11VNC_PORT} =~ ^[0-9]+$ ]] || sed -i -E "s@^(TCP_PORT_FOR_RFB_PROTOCOL)=.*@\1=${X11VNC_PORT}@" "$(command -v startx11vnc)"
    printf '%s\n' '------------------------'
    printf '%s\n' 'ÂõõÔºö'
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        do_you_want_to_configure_novnc
    else
        #case ${LINUX_DISTRO} in
        #debian)
        do_you_want_to_configure_novnc
        #   ;;
        #esac
    fi
}
########################
check_xvnc_command() {
    if [[ ! $(command -v Xvnc) ]]; then
        case "${LINUX_DISTRO}" in
        debian) DEPENDENCY_03="tigervnc-standalone-server" ;;
        redhat) DEPENDENCY_03="tigervnc-server" ;;
        arch) DEPENDENCY_03="tigervnc" ;;
        void) DEPENDENCY_03="tigervnc" ;;
        suse) DEPENDENCY_03="tigervnc-x11vnc" ;;
        esac
        ${TMOE_INSTALLATION_COMMAND} ${DEPENDENCY_03} || ${TMOE_INSTALLATION_COMMAND} ${DEPENDENCY_03}
    fi
    case "${LINUX_DISTRO}" in
    arch)
        unset DEPENDENCY_03
        if [ ! -e "/usr/share/fonts/noto-cjk" ]; then
            DEPENDENCY_03="noto-fonts-cjk ${DEPENDENCY_03}"
        fi
        if [ ! -e "/usr/share/fonts/noto/NotoColorEmoji.ttf" ]; then
            DEPENDENCY_03="noto-fonts-emoji ${DEPENDENCY_03}"
        fi
        if [[ -n ${DEPENDENCY_03} ]]; then
            printf "%s\n" "${GREEN}pacman ${YELLOW}-Syu --noconfirm --needed ${BLUE}${DEPENDENCY_03}${RESET}"
            pacman -Syu --noconfirm --needed ${DEPENDENCY_03} || paru -Syu --noconfirm ${DEPENDENCY_03}
        fi
        ;;
    esac
}
########################
if_container_is_arm() {
    case ${LINUX_DISTRO} in
    redhat)
        case ${ARCH_TYPE} in
        arm*) ;;
        *) install_novnc ;;
        esac
        ;;
    *)
        case ${ARCH_TYPE} in
        armhf | armel) ;;
        *) install_novnc ;;
        esac
        ;;
    esac
}
install_novnc() {
    source ${TMOE_TOOL_DIR}/gui/install_novnc
    cd /usr/local/bin/
    [[ ! -e novnc ]] || rm -f novnc 2>/dev/null
    cp -f ${TMOE_TOOL_DIR}/gui/novnc ./
    ln -sf novnc startnovnc
}
create_the_which_script() {
    # novnc uses the "which command", but the "which command" in debianutils has been deprecated, so the "which script" has been created here.
    # Package: debianutils
    # Version: 5.0.1-1
    # /usr/bin/which: this version of 'which' is deprecated and should not be used.
    WHICH_FILE="/usr/local/bin/which"
    if [[ ! -x ${WHICH_FILE} ]]; then
        printf "%s\n" "The ${GREEN}which${RESET} command will be replaced by ${GREEN}command -v${RESET}."
        printf "%s\n" 'command -v $@' | tee ${WHICH_FILE}
        chmod a+rx ${WHICH_FILE}
    fi
}
check_the_which_command() {
    # Not all distributions have problem with the "which command".
    # Therefore a condition has been added that only deb-based distributions, or distributions without **/usr/bin/which**, will be supported.
    case ${LINUX_DISTRO} in
    debian) create_the_which_script ;;
    *)
        if [ ! -e /usr/bin/which ]; then
            create_the_which_script
        fi
        ;;
    esac
}
do_you_want_to_configure_novnc() {
    check_the_which_command
    printf "%s\n" "You can type ${GREEN}novnc${RESET} to ${YELLOW}start${RESET} ${BLUE}novnc+websockify${RESET}"
    printf "%s\n" "ÈÖçÁΩÆÂÆåÊàêÂêéÔºåÊÇ®ÂèØ‰ª•Ëæì${BOLD}${GREEN}novnc${RESET}Êù•${YELLOW}ÂêØÂä®${BLUE}novnc${RESET},Âú®ÊµèËßàÂô®ÈáåËæìÂÖ•novncËÆøÈóÆÂú∞ÂùÄËøõË°åËøûÊé•„ÄÇ"
    printf '%s\n' '------------------------'
    printf "%s\n" "Do you want to configure novnc?"
    printf "%s\n" "ÊÇ®ÊòØÂê¶ÈúÄË¶ÅÈÖçÁΩÆ${BLUE}novnc${RESET}Ôºü"
    RETURN_TO_WHERE='software_center'
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        do_you_want_to_continue
        install_novnc
    else
        if_container_is_arm
    fi

    if [[ $(command -v apt-get) ]]; then
        printf "%s\n" "ÂΩìÂâçÂ∑≤ÁªèÈÖçÁΩÆÁöÑÂëΩ‰ª§ÂàÜÂà´‰∏∫${GREEN}startvnc, tightvnc, tigervnc, startxsdl, startx11vnc, novnc${RESET} & ${RED}stopvnc${RESET}"
    else
        printf "%s\n" "ÂΩìÂâçÂ∑≤ÁªèÈÖçÁΩÆÁöÑÂëΩ‰ª§ÂàÜÂà´‰∏∫${GREEN}startvnc, startxsdl, startx11vnc, novnc${RESET} & ${RED}stopvnc${RESET}"
    fi
    if [[ ! -s "${TMOE_LINUX_DIR}/achievement01" ]]; then
        printf "%s\n" "CongratulationsÔºÅÊÅ≠ÂñúÊÇ®Ëé∑ÂæóÊñ∞ÊàêÂ∞±: ${BOLD}${YELLOW}vncÂ§ßÂ∏à${RESET}"
        printf "%s\n" "Áî±‰∫éÊÇ®Ëé∑Âæó‰∫ÜËØ•ÊàêÂ∞±ÔºåÊïÖËß£ÈîÅ‰∫ÜÊú¨Â∑•ÂÖ∑ÁöÑvnc(ÊâÄÊúâÂèØÈÖçÁΩÆ)ÈÄâÈ°π„ÄÇ"
        printf "%s\n" "vnc master" >${TMOE_LINUX_DIR}/achievement01
    fi
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        if [[ $(command -v apt-get) ]]; then
            whiptail --title "VNC COMMANDS" --msgbox "You can type startvnc to start vncserver,type stopvnc to stop it.\nÊÇ®ÂèØ‰ª•‰ΩøÁî®‰ª•‰∏ã‰ªªÊÑè‰∏ÄÊù°ÂëΩ‰ª§Êù•ÂêØÂä®vncÊàñx: \nstartvnc,tightvnc,tigervnc,startx11vnc,startxsdl,novnc,ËæìÂÖ•stopvncÂÅúÊ≠¢" 12 55
        else
            whiptail --title "VNC COMMANDS" --msgbox "You can type startvnc to start vncserver,type stopvnc to stop it.\nÊÇ®ÂèØ‰ª•‰ΩøÁî®‰ª•‰∏ã‰ªªÊÑè‰∏ÄÊù°ÂëΩ‰ª§Êù•ÂêØÂä®vncÊàñx: \nstartvnc,startx11vnc,startxsdl,novnc,ËæìÂÖ•stopvncÂÅúÊ≠¢" 11 56
        fi
    fi
    printf "%s\n" "${YELLOW}*¬∞‚ñΩ¬∞* ${RESET}You are a ${BOLD}${BLUE}VNC Master${RESET}ÔºÅ"
    printf "%s\n" "You can type ${GREEN}novnc${RESET} to ${YELLOW}start${RESET} ${BLUE}novnc+websockify${RESET}"
}
################
set_vnc_passwd() {
    TARGET_VNC_PASSWD=$(whiptail --inputbox "Ë´ãË®≠ÂÆö6Ëá≥8‰ΩçVNCË®™ÂïèÂØÜÁ¢º\nPlease type the password, the length is between 6 and 8" 0 50 --title "PASSWORD" 3>&1 1>&2 2>&3)
    if [ "$?" != "0" ]; then
        printf "%s\n" "ËØ∑ÈáçÊñ∞ËæìÂÖ•ÂØÜÁ†Å"
        printf "%s\n" "Please type the password again."
        press_enter_to_return
        set_vnc_passwd
    elif [ -z "${TARGET_VNC_PASSWD}" ]; then
        printf "%s\n" "ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞ÂÄº"
        printf "%s\n" "Please type a valid value"
        press_enter_to_return
        set_vnc_passwd
    else
        check_vnc_passsword_length
    fi
}
###########
choose_vnc_port_5902_or_5903() {
    X11VNC_PORT=5902
    DISPLAY_PORT=2
    if [[ ${AUTO_INSTALL_GUI} != true ]]; then
        if (whiptail --title "VNC PORT" --yes-button "5902" --no-button "5903" --yesno "Ë´ãÈÅ∏ÊìáVNCÁ´ØÂè£‚ú®\nPlease choose a vnc port" 0 50); then
            X11VNC_PORT=5902
            DISPLAY_PORT=2
        else
            X11VNC_PORT=5903
            DISPLAY_PORT=3
        fi
    fi
    sed -i -E "s@(tmoe-linux) :.*@\1 :${DISPLAY_PORT}@" "$(command -v startvnc)"
    sed -i -E "s@(VNC_DISPLAY)=.*@\1=${DISPLAY_PORT}@" "$(command -v startvnc)"
}
check_vnc_passsword_length() {
    PASSWORD_LENGTH=$(printf '%s' ${TARGET_VNC_PASSWD} | wc -L)
    if ((PASSWORD_LENGTH > 8)); then
        printf "%s\n" "${PASSWORD_LENGTH}"
        printf "%s\n" "ÂØÜÁ†ÅË∂ÖËøá${RED}8‰∏™Â≠óÁ¨¶${RESET}ÔºåËØ∑${BLUE}ÈáçÊñ∞ËæìÂÖ•${RESET}"
        printf "%s\n" "${RED}WARNINGÔºÅ${RESET}The maximum password length is ${RED}8 digits.${RESET}"
        press_enter_to_return
        set_vnc_passwd
    elif ((PASSWORD_LENGTH < 6)); then
        printf "%s\n" "${PASSWORD_LENGTH}"
        printf "%s\n" "ÂØÜÁ†ÅÂ∞ë‰∫é${RED}6‰∏™Â≠óÁ¨¶${RESET}ÔºåËØ∑${BLUE}ÈáçÊñ∞ËæìÂÖ•${RESET}"
        printf "%s\n" "${RED}WARNINGÔºÅ${RESET}The minimum password length is ${RED}6 digits.${RESET}"
        press_enter_to_return
        set_vnc_passwd
    else
        mkdir -pv ${HOME}/.vnc
        cd ${HOME}/.vnc
        #case ${LINUX_DISTRO} in
        if [ $(command -v vncpasswd) ]; then
            printf "%s\n" "${TARGET_VNC_PASSWD}" | vncpasswd -f >passwd
        else
            x11vnc -storepasswd ${TARGET_VNC_PASSWD} passwd
        fi
        chmod 600 -v passwd
        cp passwd x11passwd
        chmod 600 -v x11passwd
        if [ $? = 0 ]; then
            printf "%s\n" "ÂØÜÁ†ÅËÆæÂÆöÂÆåÊàêÔºåÊÇ®ÂèØ‰ª•Ëæì${GREEN}startvnc${RESET}Êù•ÈáçÂêØÊúçÂä°"
            printf "%s\n" "You can type ${GREEN}startvnc${RESET} to restart it. "
            printf "%s\n" "Ëã•ÊÇ®ÊÉ≥Ë¶Å‰øÆÊîπÂÖ∂ÂÆÉvncÈÄâÈ°πÔºåÈÇ£‰πàÊÇ®ÂèØ‰ª•Ëæì${BLUE}debian-i${RESET}"
            printf "%s\n" "You can also type ${BLUE}debian-i${RESET} to start tmoe tools."
        else
            printf "%s\n" "ÂØÜÁ†ÅËÆæÂÆöÂ§±Ë¥•ÔºåÂÜÖÈÉ®ÂèëÁîüÈîôËØØ„ÄÇ"
        fi
    fi
}
###################
tmoe_gui_dpi_01() {
    printf "%s\n" "ÈªòËÆ§ÂàÜËæ®Áéá‰∏∫${RESOLUTION}ÔºåÁ™óÂè£Áº©ÊîæÂ§ßÂ∞è‰∏∫1x"
    dbus-launch xfconf-query -c xsettings -t int -np /Gdk/WindowScalingFactor -s 1 2>/dev/null
    case ${VNC_SERVER_BIN} in
    tigervnc) ;;
    *)
        #|focal|bionic|Bionic Beaver|Eoan Ermine|buster|stretch|jessie
        if grep -q 'Focal Fossa' "/etc/os-release"; then
            dbus-launch xfconf-query -c xfwm4 -t string -np /general/theme -s Kali-Light-HiDPI 2>/dev/null
        else
            [[ ! -e "/usr/share/themes/Breeze/xfwm4/themerc" ]] || dbus-launch xfconf-query -c xfwm4 -t string -np /general/theme -s Breeze 2>/dev/null
        fi
        ;;
    esac
}
##########
tmoe_gui_dpi_02() {
    sed -i -E "s@(geometry)=.*@\1=${RESOLUTION}@" ${TIGER_VNC_DEFAULT_CONFIG_FILE}
    sed -i -E "s@^(VNC_RESOLUTION)=.*@\1=${RESOLUTION}@" $(command -v startvnc)
    sed -i -E "s@^(TMOE_X11_RESOLUTION)=.*@\1=${RESOLUTION}@" "$(command -v startx11vnc)" 2>/dev/null
}
##########
tmoe_gui_dpi_03() {
    printf "%s\n" "Ëã•ÂàÜËæ®Áéá‰∏çÂêàÔºåÂàôËØ∑Âú®ËÑöÊú¨ÊâßË°åÂÆåÊàêÂêéÔºåÊâãÂä®Ëæì${GREEN}debian-i${RESET}ÔºåÁÑ∂ÂêéÂú®${BLUE}vnc${RESET}ÈÄâÈ°πÈáåËøõË°å‰øÆÊîπ„ÄÇ"
    printf "%s\n" "You can type debian-i to start tmoe tools,and modify the vnc screen resolution."
}
##########
tmoe_gui_default_dpi() {
    tmoe_gui_dpi_01
    tmoe_gui_dpi_03
}
#############
tmoe_gui_normal_dpi() {
    tmoe_gui_dpi_01
}
#############
xfce4_tightvnc_hidpi_settings() {
    printf "%s\n" "Tmoe-linux toolÂ∞Ü‰∏∫ÊÇ®Ëá™Âä®Ë∞ÉÊï¥È´òÂàÜÂ±èËÆæÂÆö"
    printf "%s\n" "Ëã•ÂàÜËæ®Áéá‰∏çÂêàÔºåÂàôËØ∑Âú®ËÑöÊú¨ÊâßË°åÂÆåÊàêÂêéÔºåÊâãÂä®Ëæì${GREEN}debian-i${RESET}ÔºåÁÑ∂ÂêéÂú®${BLUE}vnc${RESET}ÈÄâÈ°πÈáåËøõË°å‰øÆÊîπ„ÄÇ"
    #stopvnc >/dev/null 2>&1
    tmoe_gui_dpi_02
    printf "%s\n" "Â∑≤Â∞ÜÈªòËÆ§ÂàÜËæ®Áéá‰øÆÊîπ‰∏∫${RESOLUTION}ÔºåÁ™óÂè£Áº©ÊîæÂ§ßÂ∞èË∞ÉÊï¥‰∏∫2x"
    dbus-launch xfconf-query -c xsettings -t int -np /Gdk/WindowScalingFactor -s 2 2>/dev/null
    #-nÂàõÂª∫‰∏Ä‰∏™Êñ∞Â±ûÊÄßÔºåÁ±ªÂûã‰∏∫int
    #|focal|bionic|Bionic Beaver|Eoan Ermine|buster|stretch|jessie
    if grep -q 'Focal Fossa' "/etc/os-release"; then
        dbus-launch xfconf-query -c xfwm4 -t string -np /general/theme -s Kali-Light-xHiDPI 2>/dev/null
    else
        dbus-launch xfconf-query -c xfwm4 -t string -np /general/theme -s Default-xhdpi 2>/dev/null
    fi
    #Default-xhdpiÈªòËÆ§Â§Ñ‰∫éÊú™ÊøÄÊ¥ªÁä∂ÊÄÅ
}
################
xfce4_x11vnc_hidpi_settings() {
    case ${TMOE_HIGH_DPI} in
    true | false)
        #if [ "${REMOTE_DESKTOP_SESSION_01}" = 'xfce4-session' ]; then
        #sed -i "s@^/usr/bin/Xvfb.*@/usr/bin/Xvfb :233 -screen 0 ${RESOLUTION}x24 -ac +extension GLX +render -noreset \&@" "$(command -v startx11vnc)"
        case ${RESOLUTION} in
        "") ;;
        *) sed -i -E "s@^(TMOE_X11_RESOLUTION)=.*@\1=${RESOLUTION}@" "$(command -v startx11vnc)" 2>/dev/null ;;
        esac
        #startx11vnc >/dev/null 2>&1
        #fi
        ;;
    esac
}
####################
gui_main "$@"
###############################
