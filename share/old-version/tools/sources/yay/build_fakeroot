#####################
install_paru_main() {
    case $1 in
    -bf | --build-fakeroot | --install-fakeroot) install_fakeroot ;;
    --add-archlinuxcn-repo) add_archlinuxcn_repo ;;
    --add-arch_for_edu-repo) add_arch_for_edu_repo ;;
    --archlinux-repo-mirror)
        add_arch_for_edu_repo_mirror
        add_archlinuxcn_repo_mirror
        ;;
    -paru | --install-paru) install_paru ;;
    esac
}
install_fakeroot() {
    # for i in make automake autoconf gcc libtool po4a patch; do
    #     if [[ ! $(command -v ${i}) ]]; then
    #         printf "%s\n" "${GREEN}pacman ${YELLOW}-Sy --noconfirm --needed ${BLUE}${i}${RESET}"
    #         pacman -Sy --noconfirm --needed ${i} || pacman -Syu --noconfirm ${i}
    #     fi
    # done
    [[ ! $(command -v fakeroot) ]] || pacman -R --noconfirm fakeroot
    [[ $(command -v whereis) ]] || pacman -S --noconfirm util-linux
    [[ $(command -v whiptail) ]] || pacman -S --noconfirm libnewt
    # unset FAKEROOT_SRC_VERSION
    # FAKEROOT_SRC_REPO='https://ftp.debian.org/debian/pool/main/f/fakeroot/'
    # FAKEROOT_SRC_REPO_02='https://mirrors.bfsu.edu.cn/debian/pool/main/f/fakeroot/'
    # FAKEROOT_SRC_VERSION=$(curl -L ${FAKEROOT_SRC_REPO} | grep \.orig\.tar | tail -n 1 | awk -F '<a href=' '{print $2}' | cut -d '"' -f 2)
    # [[ -n ${FAKEROOT_SRC_VERSION} ]] || FAKEROOT_SRC_VERSION=$(curl -L ${FAKEROOT_SRC_REPO_02} | grep \.orig\.tar | tail -n 1 | awk -F '<a href=' '{print $2}' | cut -d '"' -f 2)
    # FAKEROOT_SRC_URL="${FAKEROOT_SRC_REPO}${FAKEROOT_SRC_VERSION}"
    # FAKEROOT_SRC_URL_02="${FAKEROOT_SRC_REPO_02}${FAKEROOT_SRC_VERSION}"
    # FAKEROOT_SRC_FILE=$(printf "%s\n" ${FAKEROOT_SRC_VERSION} | sed 's@fakeroot_@fakeroot-@g')
    # cd /tmp
    # aria2c --console-log-level=info --no-conf --allow-overwrite=true -s 5 -x 5 -k 1M -o ${FAKEROOT_SRC_FILE} ${FAKEROOT_SRC_URL} || curl -Lv -o ${FAKEROOT_SRC_FILE} ${FAKEROOT_SRC_URL_02}
    # tar -xvf ${FAKEROOT_SRC_FILE}
    # cd ${FAKEROOT_SRC_FILE%.*.*.*}
    # ./bootstrap
    # ./configure --prefix=/usr --libdir=/usr/lib/libfakeroot --with-ipc=tcp --disable-static
    # make -j4
    # cd doc
    # po4a -k 0 --rm-backups --variable "srcdir=../doc/" po4a/po4a.cfg
    # cd ..
    # make install
    # cd /tmp
    # rm -rvf ${FAKEROOT_SRC_FILE%.*.*.*} ${FAKEROOT_SRC_FILE}
    # cd ${HOME}
    # [[ $(command -v whiptail) ]] || pacman -S --noconfirm libnewt
    # cp -fv /etc/pacman.conf.bak /etc/pacman.conf
    # cp -fv /etc/pacman.conf /etc/pacman.conf.bak
    # for i in arch4edu-keyring fakeroot-tcp; do
    i=fakeroot-tcp
    printf "%s\n" "${GREEN}pacman ${YELLOW}-Sy --noconfirm ${BLUE}${i}${RESET}"
    pacman -Sy --noconfirm ${i}
    # done
}
add_archlinuxcn_repo() {
    if ! grep -q 'archlinuxcn' /etc/pacman.conf; then
        cat >>/etc/pacman.conf <<-'Endofpacman'
					[archlinuxcn]
					Server = https://repo.archlinuxcn.org/$arch
					Server = https://mirror.xtom.com/archlinuxcn/$arch
					Server = https://mirrors.ocf.berkeley.edu/archlinuxcn/$arch
					Server = https://mirror.xtom.nl/archlinuxcn/$arch
					Server = https://mirrors.bfsu.edu.cn/archlinuxcn/$arch
					Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
					Server = https://opentuna.cn/archlinuxcn/$arch
					SigLevel = Never
				Endofpacman
    fi
    for i in archlinux-keyring archlinuxcn-keyring; do
        printf "%s\n" "${GREEN}pacman ${YELLOW}-Sy --noconfirm ${BLUE}${i}${RESET}"
        pacman -Sy --noconfirm ${i} || pacman -Syu --noconfirm ${i}
    done
}
add_archlinuxcn_repo_mirror() {
    if ! grep -q 'archlinuxcn' /etc/pacman.conf; then
        cat >>/etc/pacman.conf <<-'Endofpacman'
					[archlinuxcn]
					Server = https://mirrors.bfsu.edu.cn/archlinuxcn/$arch
					Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
					Server = https://opentuna.cn/archlinuxcn/$arch
					Server = https://repo.archlinuxcn.org/$arch
					Server = https://mirror.xtom.com/archlinuxcn/$arch
					Server = https://mirrors.ocf.berkeley.edu/archlinuxcn/$arch
					Server = https://mirror.xtom.nl/archlinuxcn/$arch
					SigLevel = Never
				Endofpacman
    fi
}
add_arch_for_edu_repo_mirror() {
    if [[ -s /etc/pacman.conf.bak ]]; then
        cp -fv /etc/pacman.conf.bak /etc/pacman.conf
    fi

    case $(uname -m) in
    armv7*) return 1 ;;
    esac

    if ! grep -q 'arch4edu' /etc/pacman.conf; then
        cat >>/etc/pacman.conf <<-'Endofpacman'
					[arch4edu]
					Server = https://mirrors.bfsu.edu.cn/arch4edu/$arch
					Server = https://mirrors.tuna.tsinghua.edu.cn/arch4edu/$arch
					Server = https://mirror.autisten.club/arch4edu/$arch
					Server = https://arch4edu.keybase.pub/$arch
					Server = https://mirror.lesviallon.fr/arch4edu/$arch
					Server = https://mirrors.tencent.com/arch4edu/$arch
					SigLevel = Never                    
				Endofpacman
    fi
}
add_arch_for_edu_repo() {
    cp -fv /etc/pacman.conf /etc/pacman.conf.bak

    case $(uname -m) in
    armv7*) return 1 ;;
    esac

    if ! grep -q 'arch4edu' /etc/pacman.conf; then
        cat >>/etc/pacman.conf <<-'Endofpacman'
					[arch4edu]
					Server = https://arch4edu.keybase.pub/$arch
					Server = https://mirror.autisten.club/arch4edu/$arch
					Server = https://mirror.lesviallon.fr/arch4edu/$arch
					Server = https://mirrors.tencent.com/arch4edu/$arch
					Server = https://mirrors.bfsu.edu.cn/arch4edu/$arch
					Server = https://mirrors.tuna.tsinghua.edu.cn/arch4edu/$arch
					SigLevel = Never
				Endofpacman
    fi
    i=arch4edu-keyring
    printf "%s\n" "${GREEN}pacman ${YELLOW}-Sy --noconfirm ${BLUE}${i}${RESET}"
    pacman -Sy --noconfirm ${i} || pacman -Syu --noconfirm ${i}
}
install_paru() {
    printf "%s\n" "${GREEN}pacman ${YELLOW}-Sy ${PURPLE}--noconfirm --needed ${BLUE}paru${RESET}"
    pacman -Sy --noconfirm --needed paru

    if [[ ! $(command -v paru) ]]; then
        declare -A paru
        paru[file]="paru.tar.zst"
        paru[proxy]="paru-arm64"

        case $(uname -m) in
        armv7* | armv8l) paru[proxy]="paru-armv7" ;;
        aarch64 | armv8* | armv9*) paru[proxy]="paru-arm64" ;;
        *) return 1 ;;
        esac

        paru[gh]=${paru[proxy]}"-github"
        paru[uri]="https://l.tmoe.me/"
        cd /tmp || exit 1

        curl -Lo "${paru[file]}" "${paru[uri]}${paru[gh]}" || curl -Lo "${paru[file]}" "${paru[uri]}${paru[proxy]}"

        ls -lh "${paru[file]}"
        tar -xvf "${paru[file]}"
        install -Dm755 paru /usr/bin
    fi
}
###################
install_paru_main "$@"
